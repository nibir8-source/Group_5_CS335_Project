Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD_ASSIGNMENT
    AND_ASSIGNMENT
    AND_NOT_ASSIGNMENT
    CHAR
    COMMENT
    EOF
    MUL_ASSIGNMENT
    NEWLINE
    OR_ASSIGNMENT
    QUO_ASSIGNMENT
    REM_ASSIGNMENT
    SHIFT_LEFT_ASSIGNMENT
    SHIFT_RIGHT_ASSIGNMENT
    SUB_ASSIGNMENT
    XOR_ASSIGNMENT

Grammar

Rule 0     S' -> Type
Rule 1     Type -> TypeName
Rule 2     Type -> TypeLit
Rule 3     Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
Rule 4     TypeName -> IDENT
Rule 5     TypeName -> QualifiedIdent
Rule 6     TypeLit -> ArrayType
Rule 7     TypeLit -> StructType
Rule 8     TypeLit -> PointerType
Rule 9     TypeLit -> FunctionType
Rule 10    TypeLit -> InterfaceType
Rule 11    TypeLit -> SliceType
Rule 12    TypeLit -> MapType
Rule 13    TypeLit -> ChannelType
Rule 14    ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
Rule 15    ArrayLength -> Expression
Rule 16    ElementType -> Type
Rule 17    SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType
Rule 18    StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
Rule 19    ManyFieldDecl -> ManyFieldDecl FieldDecl SEMICOLON
Rule 20    ManyFieldDecl -> <empty>
Rule 21    FieldDecl -> IdentifierList Type TagPlus
Rule 22    FieldDecl -> EmbeddedField TagPlus
Rule 23    TagPlus -> Tag
Rule 24    TagPlus -> <empty>
Rule 25    EmbeddedField -> MULTIPLY TypeName
Rule 26    EmbeddedField -> TypeName
Rule 27    Tag -> STRING
Rule 28    PointerType -> MULTIPLY BaseType
Rule 29    BaseType -> Type
Rule 30    FunctionType -> FUNCTION Signature
Rule 31    Signature -> Parameters ResultPlus
Rule 32    ResultPlus -> Result
Rule 33    ResultPlus -> <empty>
Rule 34    Result -> Parameters
Rule 35    Result -> Type
Rule 36    Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS
Rule 37    ParameterListPlus -> ParameterList COMMA
Rule 38    ParameterListPlus -> ParameterList
Rule 39    ParameterListPlus -> <empty>
Rule 40    ParameterList -> ParameterDecl
Rule 41    ParameterList -> ParameterDecl COMMA ParameterList
Rule 42    ParameterDecl -> IdentifierListPlus EllipsisPlus Type
Rule 43    IdentifierListPlus -> IdentifierList
Rule 44    IdentifierListPlus -> <empty>
Rule 45    EllipsisPlus -> ELLIPSIS
Rule 46    EllipsisPlus -> <empty>
Rule 47    InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
Rule 48    InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod SEMICOLON
Rule 49    InterfaceTypePlus -> <empty>
Rule 50    InterfaceTypeMethod -> MethodSpec
Rule 51    InterfaceTypeMethod -> InterfaceTypeName
Rule 52    MethodSpec -> MethodName Signature
Rule 53    MethodName -> IDENT
Rule 54    InterfaceTypeName -> TypeName
Rule 55    MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
Rule 56    KeyType -> Type
Rule 57    ChannelType -> ChannelTypeOr ElementType
Rule 58    ChannelTypeOr -> CHAN
Rule 59    ChannelTypeOr -> CHAN ARROW
Rule 60    ChannelTypeOr -> ARROW CHAN
Rule 61    Block -> LEFT_BRACE StatementList RIGHT_BRACE
Rule 62    StatementList -> StatementList Statement SEMICOLON
Rule 63    StatementList -> <empty>
Rule 64    Declaration -> ConstDecl
Rule 65    Declaration -> TypeDecl
Rule 66    Declaration -> VarDecl
Rule 67    TopLevelDecl -> Declaration
Rule 68    TopLevelDecl -> FunctionDecl
Rule 69    TopLevelDecl -> MethodDecl
Rule 70    ConstDecl -> CONST ConstSpecOr
Rule 71    ConstSpecOr -> ConstSpec
Rule 72    ConstSpecOr -> LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS
Rule 73    ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON
Rule 74    ConstSpecStar -> <empty>
Rule 75    ConstSpec -> IdentifierList TypeAssignmentExpressionListPlus
Rule 76    TypeAssignmentExpressionListPlus -> TypePlus ASSIGNMENT ExpressionList
Rule 77    TypeAssignmentExpressionListPlus -> <empty>
Rule 78    TypePlus -> Type
Rule 79    TypePlus -> <empty>
Rule 80    IdentifierList -> IDENT IdentStar
Rule 81    IdentStar -> COMMA IDENT IdentStar
Rule 82    IdentStar -> <empty>
Rule 83    ExpressionList -> Expression ExpressionStar
Rule 84    ExpressionStar -> COMMA Expression ExpressionStar
Rule 85    ExpressionStar -> <empty>
Rule 86    TypeDecl -> TYPE TypeSpecOr
Rule 87    TypeSpecOr -> TypeSpec
Rule 88    TypeSpecOr -> LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESIS
Rule 89    TypeSpecStar -> TypeSpecStar TypeSpec SEMICOLON
Rule 90    TypeSpecStar -> <empty>
Rule 91    TypeSpec -> AliasDecl
Rule 92    TypeSpec -> TypeDef
Rule 93    AliasDecl -> IDENT ASSIGNMENT Type
Rule 94    TypeDef -> IDENT Type
Rule 95    VarDecl -> VARIABLE VarSpec
Rule 96    VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
Rule 97    VarSpecStar -> VarSpecStar VarSpec SEMICOLON
Rule 98    VarSpecStar -> <empty>
Rule 99    VarSpec -> IdentifierList TypeExpressionListOr
Rule 100   TypeExpressionListOr -> Type AssignmentExpressionListPlus
Rule 101   TypeExpressionListOr -> ASSIGNMENT ExpressionList
Rule 102   AssignmentExpressionListPlus -> ASSIGNMENT Expression
Rule 103   AssignmentExpressionListPlus -> <empty>
Rule 104   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 105   FunctionDecl -> FUNCTION FunctionName Signature FunctionBodyPlus
Rule 106   FunctionBodyPlus -> FunctionBody
Rule 107   FunctionBodyPlus -> <empty>
Rule 108   FunctionName -> IDENT
Rule 109   FunctionBody -> Block
Rule 110   MethodDecl -> FUNCTION Receiver MethodName Signature FunctionBodyPlus
Rule 111   Receiver -> Parameters
Rule 112   Operand -> Literal
Rule 113   Operand -> OperandName
Rule 114   Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
Rule 115   Literal -> BasicLit
Rule 116   Literal -> CompositeLit
Rule 117   Literal -> FunctionLit
Rule 118   BasicLit -> INT
Rule 119   BasicLit -> FLOAT
Rule 120   BasicLit -> IMAGINARY
Rule 121   BasicLit -> RUNE
Rule 122   BasicLit -> STRING
Rule 123   OperandName -> IDENT
Rule 124   OperandName -> QualifiedIdent
Rule 125   QualifiedIdent -> PackageName PERIOD IDENT
Rule 126   CompositeLit -> LiteralType LiteralValue
Rule 127   LiteralType -> StructType
Rule 128   LiteralType -> ArrayType
Rule 129   LiteralType -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
Rule 130   LiteralType -> SliceType
Rule 131   LiteralType -> MapType
Rule 132   LiteralType -> TypeName
Rule 133   LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET
Rule 134   ElementListPlus -> ElementList
Rule 135   ElementListPlus -> ElementList COMMA
Rule 136   ElementListPlus -> <empty>
Rule 137   ElementList -> KeyedElement KeyedElementStar
Rule 138   KeyedElementStar -> COMMA KeyedElement KeyedElementStar
Rule 139   KeyedElementStar -> <empty>
Rule 140   KeyedElement -> KeyPlus Element
Rule 141   KeyPlus -> Key COLON
Rule 142   KeyPlus -> <empty>
Rule 143   Key -> FieldName
Rule 144   Key -> Expression
Rule 145   Key -> LiteralValue
Rule 146   FieldName -> IDENT
Rule 147   Element -> Expression
Rule 148   Element -> LiteralValue
Rule 149   FunctionLit -> FUNCTION Signature FunctionBody
Rule 150   PrimaryExpr -> Operand
Rule 151   PrimaryExpr -> Conversion
Rule 152   PrimaryExpr -> MethodExpr
Rule 153   PrimaryExpr -> PrimaryExpr Selector
Rule 154   PrimaryExpr -> PrimaryExpr Index
Rule 155   PrimaryExpr -> PrimaryExpr Slice
Rule 156   PrimaryExpr -> PrimaryExpr TypeAssertion
Rule 157   PrimaryExpr -> PrimaryExpr Arguments
Rule 158   Selector -> PERIOD IDENT
Rule 159   Index -> LEFT_BRACKET Expression RIGHT_BRACKET
Rule 160   Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET
Rule 161   Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET
Rule 162   TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
Rule 163   Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS
Rule 164   ArgumentsPlus -> ArgumentsInOr
Rule 165   ArgumentsPlus -> <empty>
Rule 166   ArgumentsInOr -> ExpressionList
Rule 167   ArgumentsInOr -> Type CommaExpressionListPlus
Rule 168   CommaExpressionListPlus -> COMMA ExpressionList
Rule 169   CommaExpressionListPlus -> ExpressionList
Rule 170   CommaExpressionListPlus -> <empty>
Rule 171   MethodExpr -> ReceiverType PERIOD MethodName
Rule 172   ReceiverType -> Type
Rule 173   Expression -> UnaryExpr
Rule 174   Expression -> Expression binary_op Expression
Rule 175   UnaryExpr -> PrimaryExpr
Rule 176   UnaryExpr -> unary_op UnaryExpr
Rule 177   binary_op -> LOGICAL_OR
Rule 178   binary_op -> LOGICAL_AND
Rule 179   binary_op -> rel_op
Rule 180   binary_op -> add_op
Rule 181   binary_op -> mul_op
Rule 182   rel_op -> EQUAL
Rule 183   rel_op -> NOT_EQUAL
Rule 184   rel_op -> LESS_THAN
Rule 185   rel_op -> LESS_THAN_EQUAL
Rule 186   rel_op -> GREATER_THAN
Rule 187   rel_op -> GREATER_THAN_EQUAL
Rule 188   add_op -> ADD
Rule 189   add_op -> SUBTRACT
Rule 190   add_op -> OR
Rule 191   add_op -> XOR
Rule 192   mul_op -> MULTIPLY
Rule 193   mul_op -> QUOTIENT
Rule 194   mul_op -> REMAINDER
Rule 195   mul_op -> SHIFT_LEFT
Rule 196   mul_op -> SHIFT_RIGHT
Rule 197   mul_op -> AND
Rule 198   mul_op -> AND_NOT
Rule 199   unary_op -> ADD
Rule 200   unary_op -> SUBTRACT
Rule 201   unary_op -> NOT
Rule 202   unary_op -> XOR
Rule 203   unary_op -> MULTIPLY
Rule 204   unary_op -> AND
Rule 205   unary_op -> ARROW
Rule 206   Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
Rule 207   Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
Rule 208   Statement -> Declaration
Rule 209   Statement -> LabeledStmt
Rule 210   Statement -> SimpleStmt
Rule 211   Statement -> GoStmt
Rule 212   Statement -> ReturnStmt
Rule 213   Statement -> BreakStmt
Rule 214   Statement -> ContinueStmt
Rule 215   Statement -> GotoStmt
Rule 216   Statement -> FallthroughStmt
Rule 217   Statement -> Block
Rule 218   Statement -> IfStmt
Rule 219   Statement -> SwitchStmt
Rule 220   Statement -> SelectStmt
Rule 221   Statement -> ForStmt
Rule 222   Statement -> DeferStmt
Rule 223   SimpleStmt -> ExpressionStmt
Rule 224   SimpleStmt -> SendStmt
Rule 225   SimpleStmt -> IncDecStmt
Rule 226   SimpleStmt -> Assignment
Rule 227   SimpleStmt -> ShortVarDecl
Rule 228   SimpleStmt -> <empty>
Rule 229   LabeledStmt -> Label COLON Statement
Rule 230   Label -> IDENT
Rule 231   ExpressionStmt -> Expression
Rule 232   SendStmt -> Channel ARROW Expression
Rule 233   Channel -> Expression
Rule 234   IncDecStmt -> Expression IncDecOr
Rule 235   IncDecOr -> INCREMENT
Rule 236   IncDecOr -> DECREMENT
Rule 237   Assignment -> ExpressionList assign_op ExpressionList
Rule 238   assign_op -> add_op_mul_op_or_plus ASSIGNMENT
Rule 239   add_op_mul_op_or_plus -> add_op_mul_op_or
Rule 240   add_op_mul_op_or_plus -> <empty>
Rule 241   add_op_mul_op_or -> add_op
Rule 242   add_op_mul_op_or -> mul_op
Rule 243   IfStmt -> IF SimpleStmtSemicolonPlus Expression Block ElsePlus
Rule 244   SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON
Rule 245   SimpleStmtSemicolonPlus -> <empty>
Rule 246   ElsePlus -> ELSE Nested_if_block
Rule 247   ElsePlus -> <empty>
Rule 248   Nested_if_block -> IfStmt
Rule 249   Nested_if_block -> Block
Rule 250   SwitchStmt -> ExprSwitchStmt
Rule 251   SwitchStmt -> TypeSwitchStmt
Rule 252   ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
Rule 253   ExpressionPlus -> Expression
Rule 254   ExpressionPlus -> <empty>
Rule 255   ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause
Rule 256   ExprCaseClauseStar -> <empty>
Rule 257   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 258   ExprSwitchCase -> CASE ExpressionList
Rule 259   ExprSwitchCase -> DEFAULT
Rule 260   TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
Rule 261   TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause
Rule 262   TypeCaseClauseStar -> <empty>
Rule 263   TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS
Rule 264   IdentDefinePlus -> IDENT DEFINE
Rule 265   IdentDefinePlus -> <empty>
Rule 266   TypeCaseClause -> TypeSwitchCase COLON StatementList
Rule 267   TypeSwitchCase -> CASE TypeList
Rule 268   TypeSwitchCase -> DEFAULT
Rule 269   TypeList -> Type CommaTypePlus
Rule 270   CommaTypePlus -> CommaTypePlus COMMA TYPE
Rule 271   CommaTypePlus -> <empty>
Rule 272   ForStmt -> FOR ForInternal Block
Rule 273   ForInternal -> Condition
Rule 274   ForInternal -> ForClause
Rule 275   ForInternal -> RangeClause
Rule 276   ForInternal -> <empty>
Rule 277   Condition -> Expression
Rule 278   ForClause -> InitStmtPlus SEMICOLON ConditionPlus SEMICOLON PostStmtPlus
Rule 279   InitStmtPlus -> InitStmt
Rule 280   InitStmtPlus -> <empty>
Rule 281   ConditionPlus -> Condition
Rule 282   ConditionPlus -> <empty>
Rule 283   PostStmtPlus -> PostStmt
Rule 284   PostStmtPlus -> <empty>
Rule 285   InitStmt -> SimpleStmt
Rule 286   PostStmt -> SimpleStmt
Rule 287   RangeClause -> ExpListAssignIdListDefOrPlus RANGE Expression
Rule 288   ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT
Rule 289   ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE
Rule 290   ExpListAssignIdListDefOrPlus -> <empty>
Rule 291   GoStmt -> GO Expression
Rule 292   SelectStmt -> SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
Rule 293   CommClausePlus -> CommClausePlus CommClause
Rule 294   CommClausePlus -> <empty>
Rule 295   CommClause -> CommCase COLON StatementList
Rule 296   CommCase -> CASE SentStmtRecvStmtOr
Rule 297   CommCase -> DEFAULT
Rule 298   SentStmtRecvStmtOr -> SendStmt
Rule 299   SentStmtRecvStmtOr -> RecvStmt
Rule 300   RecvStmt -> ExpListAssignIdListDefOrPlus RecvExpr
Rule 301   RecvExpr -> Expression
Rule 302   ReturnStmt -> RETURN ExpressionListPlus
Rule 303   ExpressionListPlus -> ExpressionList
Rule 304   ExpressionListPlus -> <empty>
Rule 305   BreakStmt -> BREAK LabelPlus
Rule 306   LabelPlus -> Label
Rule 307   LabelPlus -> <empty>
Rule 308   ContinueStmt -> CONTINUE LabelPlus
Rule 309   GotoStmt -> GOTO Label
Rule 310   FallthroughStmt -> FALLTHROUGH
Rule 311   DeferStmt -> DEFER Expression
Rule 312   SourceFile -> PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar
Rule 313   ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON
Rule 314   ImportDeclStar -> <empty>
Rule 315   TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON
Rule 316   TopLevelDeclStar -> <empty>
Rule 317   PackageClause -> PACKAGE PackageName
Rule 318   PackageName -> IDENT
Rule 319   ImportDecl -> IMPORT ImportSpecOr
Rule 320   ImportSpecOr -> ImportSpec
Rule 321   ImportSpecOr -> LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS
Rule 322   ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON
Rule 323   ImportSpecSemicolonStar -> <empty>
Rule 324   ImportSpec -> PeriodPackageNamePlus ImportPath
Rule 325   PeriodPackageNamePlus -> PeriodPackageNameOr
Rule 326   PeriodPackageNamePlus -> <empty>
Rule 327   PeriodPackageNameOr -> PERIOD
Rule 328   PeriodPackageNameOr -> PackageName
Rule 329   ImportPath -> STRING

Terminals, with rules where they appear

ADD                  : 188 199
ADD_ASSIGNMENT       : 
AND                  : 197 204
AND_ASSIGNMENT       : 
AND_NOT              : 198
AND_NOT_ASSIGNMENT   : 
ARROW                : 59 60 205 232
ASSIGNMENT           : 76 93 101 102 238 288
BREAK                : 305
CASE                 : 258 267 296
CHAN                 : 58 59 60
CHAR                 : 
COLON                : 141 160 161 161 229 257 266 295
COMMA                : 37 41 81 84 135 138 168 206 270
COMMENT              : 
CONST                : 70
CONTINUE             : 308
DECREMENT            : 236
DEFAULT              : 259 268 297
DEFER                : 311
DEFINE               : 104 264 289
ELLIPSIS             : 45 129
ELSE                 : 246
EOF                  : 
EQUAL                : 182
FALLTHROUGH          : 310
FLOAT                : 119
FOR                  : 272
FUNCTION             : 30 105 110 149
GO                   : 291
GOTO                 : 309
GREATER_THAN         : 186
GREATER_THAN_EQUAL   : 187
IDENT                : 4 53 80 81 93 94 108 123 125 146 158 230 264 318
IF                   : 243
IMAGINARY            : 120
IMPORT               : 319
INCREMENT            : 235
INT                  : 118
INTERFACE            : 47
LEFT_BRACE           : 18 47 61 252 260 292
LEFT_BRACKET         : 14 17 55 129 133 159 160 161
LEFT_PARENTHESIS     : 3 36 72 88 96 114 162 163 206 207 263 321
LESS_THAN            : 184
LESS_THAN_EQUAL      : 185
LOGICAL_AND          : 178
LOGICAL_OR           : 177
MAP                  : 55
MULTIPLY             : 25 28 192 203
MUL_ASSIGNMENT       : 
NEWLINE              : 
NOT                  : 201
NOT_EQUAL            : 183
OR                   : 190
OR_ASSIGNMENT        : 
PACKAGE              : 317
PERIOD               : 125 158 162 171 263 327
QUOTIENT             : 193
QUO_ASSIGNMENT       : 
RANGE                : 287
REMAINDER            : 194
REM_ASSIGNMENT       : 
RETURN               : 302
RIGHT_BRACE          : 18 47 61 252 260 292
RIGHT_BRACKET        : 14 17 55 129 133 159 160 161
RIGHT_PARENTHESIS    : 3 36 72 88 96 114 162 163 206 207 263 321
RUNE                 : 121
SELECT               : 292
SEMICOLON            : 19 48 62 73 89 97 244 278 278 312 313 315 322
SHIFT_LEFT           : 195
SHIFT_LEFT_ASSIGNMENT : 
SHIFT_RIGHT          : 196
SHIFT_RIGHT_ASSIGNMENT : 
STRING               : 27 122 329
STRUCT               : 18
SUBTRACT             : 189 200
SUB_ASSIGNMENT       : 
SWITCH               : 252 260
TYPE                 : 86 263 270
VARIABLE             : 95 96
XOR                  : 191 202
XOR_ASSIGNMENT       : 
error                : 

Nonterminals, with rules where they appear

AliasDecl            : 91
Arguments            : 157
ArgumentsInOr        : 164
ArgumentsPlus        : 163
ArrayLength          : 14
ArrayType            : 6 128
Assignment           : 226
AssignmentExpressionListPlus : 100
BaseType             : 28
BasicLit             : 115
Block                : 109 217 243 249 272
BreakStmt            : 213
Channel              : 232
ChannelType          : 13
ChannelTypeOr        : 57
CommCase             : 295
CommClause           : 293
CommClausePlus       : 292 293
CommaExpressionListPlus : 167
CommaTypePlus        : 269 270
CompositeLit         : 116
Condition            : 273 281
ConditionPlus        : 278
ConstDecl            : 64
ConstSpec            : 71 73
ConstSpecOr          : 70
ConstSpecStar        : 72 73
ContinueStmt         : 214
Conversion           : 151
Declaration          : 67 208
DeferStmt            : 222
Element              : 140
ElementList          : 134 135
ElementListPlus      : 133
ElementType          : 14 17 55 57 129
EllipsisPlus         : 42
ElsePlus             : 243
EmbeddedField        : 22
ExpListAssignIdListDefOrPlus : 287 300
ExprCaseClause       : 255
ExprCaseClauseStar   : 252 255
ExprSwitchCase       : 257
ExprSwitchStmt       : 250
Expression           : 15 83 84 102 114 144 147 159 161 161 174 174 206 207 231 232 233 234 243 253 277 287 291 301 311
ExpressionList       : 76 101 104 166 168 169 237 237 258 288 303
ExpressionListPlus   : 302
ExpressionPlus       : 160 160 161 252
ExpressionStar       : 83 84
ExpressionStmt       : 223
FallthroughStmt      : 216
FieldDecl            : 19
FieldName            : 143
ForClause            : 274
ForInternal          : 272
ForStmt              : 221
FunctionBody         : 106 149
FunctionBodyPlus     : 105 110
FunctionDecl         : 68
FunctionLit          : 117
FunctionName         : 105
FunctionType         : 9
GoStmt               : 211
GotoStmt             : 215
IdentDefinePlus      : 263
IdentStar            : 80 81
IdentifierList       : 21 43 75 99 104 289
IdentifierListPlus   : 42
IfStmt               : 218 248
ImportDecl           : 313
ImportDeclStar       : 312 313
ImportPath           : 324
ImportSpec           : 320 322
ImportSpecOr         : 319
ImportSpecSemicolonStar : 321 322
IncDecOr             : 234
IncDecStmt           : 225
Index                : 154
InitStmt             : 279
InitStmtPlus         : 278
InterfaceType        : 10
InterfaceTypeMethod  : 48
InterfaceTypeName    : 51
InterfaceTypePlus    : 47 48
Key                  : 141
KeyPlus              : 140
KeyType              : 55
KeyedElement         : 137 138
KeyedElementStar     : 137 138
Label                : 229 306 309
LabelPlus            : 305 308
LabeledStmt          : 209
Literal              : 112
LiteralType          : 126
LiteralValue         : 126 145 148
ManyFieldDecl        : 18 19
MapType              : 12 131
MethodDecl           : 69
MethodExpr           : 152
MethodName           : 52 110 171
MethodSpec           : 50
Nested_if_block      : 246
Operand              : 150
OperandName          : 113
PackageClause        : 312
PackageName          : 125 317 328
ParameterDecl        : 40 41
ParameterList        : 37 38 41
ParameterListPlus    : 36
Parameters           : 31 34 111
PeriodPackageNameOr  : 325
PeriodPackageNamePlus : 324
PointerType          : 8
PostStmt             : 283
PostStmtPlus         : 278
PrimaryExpr          : 153 154 155 156 157 175 263
QualifiedIdent       : 5 124
RangeClause          : 275
Receiver             : 110
ReceiverType         : 171
RecvExpr             : 300
RecvStmt             : 299
Result               : 32
ResultPlus           : 31
ReturnStmt           : 212
SelectStmt           : 220
Selector             : 153
SendStmt             : 224 298
SentStmtRecvStmtOr   : 296
ShortVarDecl         : 227
Signature            : 30 52 105 110 149
SimpleStmt           : 210 244 285 286
SimpleStmtSemicolonPlus : 243 252 260
Slice                : 155
SliceType            : 11 130
SourceFile           : 
Statement            : 62 229
StatementList        : 61 62 257 266 295
StructType           : 7 127
SwitchStmt           : 219
Tag                  : 23
TagPlus              : 21 22
TopLevelDecl         : 315
TopLevelDeclStar     : 312 315
Type                 : 3 16 21 29 35 42 56 78 93 94 100 162 167 172 206 207 269 0
TypeAssertion        : 156
TypeAssignmentExpressionListPlus : 75
TypeCaseClause       : 261
TypeCaseClauseStar   : 260 261
TypeDecl             : 65
TypeDef              : 92
TypeExpressionListOr : 99
TypeList             : 267
TypeLit              : 2
TypeName             : 1 25 26 54 132
TypePlus             : 76
TypeSpec             : 87 89
TypeSpecOr           : 86
TypeSpecStar         : 88 89
TypeSwitchCase       : 266
TypeSwitchGuard      : 260
TypeSwitchStmt       : 251
UnaryExpr            : 173 176
VarDecl              : 66
VarSpec              : 95 97
VarSpecStar          : 96 97
add_op               : 180 241
add_op_mul_op_or     : 239
add_op_mul_op_or_plus : 238
assign_op            : 237
binary_op            : 174
mul_op               : 181 242
rel_op               : 179
unary_op             : 176

Parsing method: LALR

state 0

    (0) S' -> . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    Type                           shift and go to state 1
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 1

    (0) S' -> Type .



state 2

    (1) Type -> TypeName .

    $end            reduce using rule 1 (Type -> TypeName .)
    RIGHT_PARENTHESIS reduce using rule 1 (Type -> TypeName .)
    LEFT_PARENTHESIS reduce using rule 1 (Type -> TypeName .)
    PERIOD          reduce using rule 1 (Type -> TypeName .)
    LEFT_BRACKET    reduce using rule 1 (Type -> TypeName .)
    RIGHT_BRACKET   reduce using rule 1 (Type -> TypeName .)
    COMMA           reduce using rule 1 (Type -> TypeName .)
    ADD             reduce using rule 1 (Type -> TypeName .)
    SUBTRACT        reduce using rule 1 (Type -> TypeName .)
    NOT             reduce using rule 1 (Type -> TypeName .)
    XOR             reduce using rule 1 (Type -> TypeName .)
    MULTIPLY        reduce using rule 1 (Type -> TypeName .)
    AND             reduce using rule 1 (Type -> TypeName .)
    ARROW           reduce using rule 1 (Type -> TypeName .)
    IDENT           reduce using rule 1 (Type -> TypeName .)
    INT             reduce using rule 1 (Type -> TypeName .)
    FLOAT           reduce using rule 1 (Type -> TypeName .)
    IMAGINARY       reduce using rule 1 (Type -> TypeName .)
    RUNE            reduce using rule 1 (Type -> TypeName .)
    STRING          reduce using rule 1 (Type -> TypeName .)
    FUNCTION        reduce using rule 1 (Type -> TypeName .)
    STRUCT          reduce using rule 1 (Type -> TypeName .)
    INTERFACE       reduce using rule 1 (Type -> TypeName .)
    MAP             reduce using rule 1 (Type -> TypeName .)
    CHAN            reduce using rule 1 (Type -> TypeName .)
    SEMICOLON       reduce using rule 1 (Type -> TypeName .)
    ASSIGNMENT      reduce using rule 1 (Type -> TypeName .)
    COLON           reduce using rule 1 (Type -> TypeName .)
    LEFT_BRACE      reduce using rule 1 (Type -> TypeName .)


state 3

    (2) Type -> TypeLit .

    $end            reduce using rule 2 (Type -> TypeLit .)
    RIGHT_PARENTHESIS reduce using rule 2 (Type -> TypeLit .)
    LEFT_PARENTHESIS reduce using rule 2 (Type -> TypeLit .)
    PERIOD          reduce using rule 2 (Type -> TypeLit .)
    LEFT_BRACKET    reduce using rule 2 (Type -> TypeLit .)
    RIGHT_BRACKET   reduce using rule 2 (Type -> TypeLit .)
    COMMA           reduce using rule 2 (Type -> TypeLit .)
    ADD             reduce using rule 2 (Type -> TypeLit .)
    SUBTRACT        reduce using rule 2 (Type -> TypeLit .)
    NOT             reduce using rule 2 (Type -> TypeLit .)
    XOR             reduce using rule 2 (Type -> TypeLit .)
    MULTIPLY        reduce using rule 2 (Type -> TypeLit .)
    AND             reduce using rule 2 (Type -> TypeLit .)
    ARROW           reduce using rule 2 (Type -> TypeLit .)
    IDENT           reduce using rule 2 (Type -> TypeLit .)
    INT             reduce using rule 2 (Type -> TypeLit .)
    FLOAT           reduce using rule 2 (Type -> TypeLit .)
    IMAGINARY       reduce using rule 2 (Type -> TypeLit .)
    RUNE            reduce using rule 2 (Type -> TypeLit .)
    STRING          reduce using rule 2 (Type -> TypeLit .)
    FUNCTION        reduce using rule 2 (Type -> TypeLit .)
    STRUCT          reduce using rule 2 (Type -> TypeLit .)
    INTERFACE       reduce using rule 2 (Type -> TypeLit .)
    MAP             reduce using rule 2 (Type -> TypeLit .)
    CHAN            reduce using rule 2 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 2 (Type -> TypeLit .)
    ASSIGNMENT      reduce using rule 2 (Type -> TypeLit .)
    COLON           reduce using rule 2 (Type -> TypeLit .)
    LEFT_BRACE      reduce using rule 2 (Type -> TypeLit .)


state 4

    (3) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    Type                           shift and go to state 25
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 5

    (4) TypeName -> IDENT .
    (318) PackageName -> IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
    $end            reduce using rule 4 (TypeName -> IDENT .)
    RIGHT_PARENTHESIS reduce using rule 4 (TypeName -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 4 (TypeName -> IDENT .)
    PERIOD          reduce using rule 4 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 4 (TypeName -> IDENT .)
    RIGHT_BRACKET   reduce using rule 4 (TypeName -> IDENT .)
    COMMA           reduce using rule 4 (TypeName -> IDENT .)
    ADD             reduce using rule 4 (TypeName -> IDENT .)
    SUBTRACT        reduce using rule 4 (TypeName -> IDENT .)
    NOT             reduce using rule 4 (TypeName -> IDENT .)
    XOR             reduce using rule 4 (TypeName -> IDENT .)
    MULTIPLY        reduce using rule 4 (TypeName -> IDENT .)
    AND             reduce using rule 4 (TypeName -> IDENT .)
    ARROW           reduce using rule 4 (TypeName -> IDENT .)
    IDENT           reduce using rule 4 (TypeName -> IDENT .)
    INT             reduce using rule 4 (TypeName -> IDENT .)
    FLOAT           reduce using rule 4 (TypeName -> IDENT .)
    IMAGINARY       reduce using rule 4 (TypeName -> IDENT .)
    RUNE            reduce using rule 4 (TypeName -> IDENT .)
    STRING          reduce using rule 4 (TypeName -> IDENT .)
    FUNCTION        reduce using rule 4 (TypeName -> IDENT .)
    STRUCT          reduce using rule 4 (TypeName -> IDENT .)
    INTERFACE       reduce using rule 4 (TypeName -> IDENT .)
    MAP             reduce using rule 4 (TypeName -> IDENT .)
    CHAN            reduce using rule 4 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 4 (TypeName -> IDENT .)
    ASSIGNMENT      reduce using rule 4 (TypeName -> IDENT .)
    COLON           reduce using rule 4 (TypeName -> IDENT .)
    LEFT_BRACE      reduce using rule 4 (TypeName -> IDENT .)

  ! PERIOD          [ reduce using rule 318 (PackageName -> IDENT .) ]


state 6

    (5) TypeName -> QualifiedIdent .

    $end            reduce using rule 5 (TypeName -> QualifiedIdent .)
    RIGHT_PARENTHESIS reduce using rule 5 (TypeName -> QualifiedIdent .)
    LEFT_PARENTHESIS reduce using rule 5 (TypeName -> QualifiedIdent .)
    PERIOD          reduce using rule 5 (TypeName -> QualifiedIdent .)
    LEFT_BRACKET    reduce using rule 5 (TypeName -> QualifiedIdent .)
    RIGHT_BRACKET   reduce using rule 5 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 5 (TypeName -> QualifiedIdent .)
    ADD             reduce using rule 5 (TypeName -> QualifiedIdent .)
    SUBTRACT        reduce using rule 5 (TypeName -> QualifiedIdent .)
    NOT             reduce using rule 5 (TypeName -> QualifiedIdent .)
    XOR             reduce using rule 5 (TypeName -> QualifiedIdent .)
    MULTIPLY        reduce using rule 5 (TypeName -> QualifiedIdent .)
    AND             reduce using rule 5 (TypeName -> QualifiedIdent .)
    ARROW           reduce using rule 5 (TypeName -> QualifiedIdent .)
    IDENT           reduce using rule 5 (TypeName -> QualifiedIdent .)
    INT             reduce using rule 5 (TypeName -> QualifiedIdent .)
    FLOAT           reduce using rule 5 (TypeName -> QualifiedIdent .)
    IMAGINARY       reduce using rule 5 (TypeName -> QualifiedIdent .)
    RUNE            reduce using rule 5 (TypeName -> QualifiedIdent .)
    STRING          reduce using rule 5 (TypeName -> QualifiedIdent .)
    FUNCTION        reduce using rule 5 (TypeName -> QualifiedIdent .)
    STRUCT          reduce using rule 5 (TypeName -> QualifiedIdent .)
    INTERFACE       reduce using rule 5 (TypeName -> QualifiedIdent .)
    MAP             reduce using rule 5 (TypeName -> QualifiedIdent .)
    CHAN            reduce using rule 5 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 5 (TypeName -> QualifiedIdent .)
    ASSIGNMENT      reduce using rule 5 (TypeName -> QualifiedIdent .)
    COLON           reduce using rule 5 (TypeName -> QualifiedIdent .)
    LEFT_BRACE      reduce using rule 5 (TypeName -> QualifiedIdent .)


state 7

    (6) TypeLit -> ArrayType .

    $end            reduce using rule 6 (TypeLit -> ArrayType .)
    RIGHT_PARENTHESIS reduce using rule 6 (TypeLit -> ArrayType .)
    LEFT_PARENTHESIS reduce using rule 6 (TypeLit -> ArrayType .)
    PERIOD          reduce using rule 6 (TypeLit -> ArrayType .)
    LEFT_BRACKET    reduce using rule 6 (TypeLit -> ArrayType .)
    RIGHT_BRACKET   reduce using rule 6 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 6 (TypeLit -> ArrayType .)
    ADD             reduce using rule 6 (TypeLit -> ArrayType .)
    SUBTRACT        reduce using rule 6 (TypeLit -> ArrayType .)
    NOT             reduce using rule 6 (TypeLit -> ArrayType .)
    XOR             reduce using rule 6 (TypeLit -> ArrayType .)
    MULTIPLY        reduce using rule 6 (TypeLit -> ArrayType .)
    AND             reduce using rule 6 (TypeLit -> ArrayType .)
    ARROW           reduce using rule 6 (TypeLit -> ArrayType .)
    IDENT           reduce using rule 6 (TypeLit -> ArrayType .)
    INT             reduce using rule 6 (TypeLit -> ArrayType .)
    FLOAT           reduce using rule 6 (TypeLit -> ArrayType .)
    IMAGINARY       reduce using rule 6 (TypeLit -> ArrayType .)
    RUNE            reduce using rule 6 (TypeLit -> ArrayType .)
    STRING          reduce using rule 6 (TypeLit -> ArrayType .)
    FUNCTION        reduce using rule 6 (TypeLit -> ArrayType .)
    STRUCT          reduce using rule 6 (TypeLit -> ArrayType .)
    INTERFACE       reduce using rule 6 (TypeLit -> ArrayType .)
    MAP             reduce using rule 6 (TypeLit -> ArrayType .)
    CHAN            reduce using rule 6 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 6 (TypeLit -> ArrayType .)
    ASSIGNMENT      reduce using rule 6 (TypeLit -> ArrayType .)
    COLON           reduce using rule 6 (TypeLit -> ArrayType .)
    LEFT_BRACE      reduce using rule 6 (TypeLit -> ArrayType .)


state 8

    (7) TypeLit -> StructType .

    $end            reduce using rule 7 (TypeLit -> StructType .)
    RIGHT_PARENTHESIS reduce using rule 7 (TypeLit -> StructType .)
    LEFT_PARENTHESIS reduce using rule 7 (TypeLit -> StructType .)
    PERIOD          reduce using rule 7 (TypeLit -> StructType .)
    LEFT_BRACKET    reduce using rule 7 (TypeLit -> StructType .)
    RIGHT_BRACKET   reduce using rule 7 (TypeLit -> StructType .)
    COMMA           reduce using rule 7 (TypeLit -> StructType .)
    ADD             reduce using rule 7 (TypeLit -> StructType .)
    SUBTRACT        reduce using rule 7 (TypeLit -> StructType .)
    NOT             reduce using rule 7 (TypeLit -> StructType .)
    XOR             reduce using rule 7 (TypeLit -> StructType .)
    MULTIPLY        reduce using rule 7 (TypeLit -> StructType .)
    AND             reduce using rule 7 (TypeLit -> StructType .)
    ARROW           reduce using rule 7 (TypeLit -> StructType .)
    IDENT           reduce using rule 7 (TypeLit -> StructType .)
    INT             reduce using rule 7 (TypeLit -> StructType .)
    FLOAT           reduce using rule 7 (TypeLit -> StructType .)
    IMAGINARY       reduce using rule 7 (TypeLit -> StructType .)
    RUNE            reduce using rule 7 (TypeLit -> StructType .)
    STRING          reduce using rule 7 (TypeLit -> StructType .)
    FUNCTION        reduce using rule 7 (TypeLit -> StructType .)
    STRUCT          reduce using rule 7 (TypeLit -> StructType .)
    INTERFACE       reduce using rule 7 (TypeLit -> StructType .)
    MAP             reduce using rule 7 (TypeLit -> StructType .)
    CHAN            reduce using rule 7 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 7 (TypeLit -> StructType .)
    ASSIGNMENT      reduce using rule 7 (TypeLit -> StructType .)
    COLON           reduce using rule 7 (TypeLit -> StructType .)
    LEFT_BRACE      reduce using rule 7 (TypeLit -> StructType .)


state 9

    (8) TypeLit -> PointerType .

    $end            reduce using rule 8 (TypeLit -> PointerType .)
    RIGHT_PARENTHESIS reduce using rule 8 (TypeLit -> PointerType .)
    LEFT_PARENTHESIS reduce using rule 8 (TypeLit -> PointerType .)
    PERIOD          reduce using rule 8 (TypeLit -> PointerType .)
    LEFT_BRACKET    reduce using rule 8 (TypeLit -> PointerType .)
    RIGHT_BRACKET   reduce using rule 8 (TypeLit -> PointerType .)
    COMMA           reduce using rule 8 (TypeLit -> PointerType .)
    ADD             reduce using rule 8 (TypeLit -> PointerType .)
    SUBTRACT        reduce using rule 8 (TypeLit -> PointerType .)
    NOT             reduce using rule 8 (TypeLit -> PointerType .)
    XOR             reduce using rule 8 (TypeLit -> PointerType .)
    MULTIPLY        reduce using rule 8 (TypeLit -> PointerType .)
    AND             reduce using rule 8 (TypeLit -> PointerType .)
    ARROW           reduce using rule 8 (TypeLit -> PointerType .)
    IDENT           reduce using rule 8 (TypeLit -> PointerType .)
    INT             reduce using rule 8 (TypeLit -> PointerType .)
    FLOAT           reduce using rule 8 (TypeLit -> PointerType .)
    IMAGINARY       reduce using rule 8 (TypeLit -> PointerType .)
    RUNE            reduce using rule 8 (TypeLit -> PointerType .)
    STRING          reduce using rule 8 (TypeLit -> PointerType .)
    FUNCTION        reduce using rule 8 (TypeLit -> PointerType .)
    STRUCT          reduce using rule 8 (TypeLit -> PointerType .)
    INTERFACE       reduce using rule 8 (TypeLit -> PointerType .)
    MAP             reduce using rule 8 (TypeLit -> PointerType .)
    CHAN            reduce using rule 8 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 8 (TypeLit -> PointerType .)
    ASSIGNMENT      reduce using rule 8 (TypeLit -> PointerType .)
    COLON           reduce using rule 8 (TypeLit -> PointerType .)
    LEFT_BRACE      reduce using rule 8 (TypeLit -> PointerType .)


state 10

    (9) TypeLit -> FunctionType .

    $end            reduce using rule 9 (TypeLit -> FunctionType .)
    RIGHT_PARENTHESIS reduce using rule 9 (TypeLit -> FunctionType .)
    LEFT_PARENTHESIS reduce using rule 9 (TypeLit -> FunctionType .)
    PERIOD          reduce using rule 9 (TypeLit -> FunctionType .)
    LEFT_BRACKET    reduce using rule 9 (TypeLit -> FunctionType .)
    RIGHT_BRACKET   reduce using rule 9 (TypeLit -> FunctionType .)
    COMMA           reduce using rule 9 (TypeLit -> FunctionType .)
    ADD             reduce using rule 9 (TypeLit -> FunctionType .)
    SUBTRACT        reduce using rule 9 (TypeLit -> FunctionType .)
    NOT             reduce using rule 9 (TypeLit -> FunctionType .)
    XOR             reduce using rule 9 (TypeLit -> FunctionType .)
    MULTIPLY        reduce using rule 9 (TypeLit -> FunctionType .)
    AND             reduce using rule 9 (TypeLit -> FunctionType .)
    ARROW           reduce using rule 9 (TypeLit -> FunctionType .)
    IDENT           reduce using rule 9 (TypeLit -> FunctionType .)
    INT             reduce using rule 9 (TypeLit -> FunctionType .)
    FLOAT           reduce using rule 9 (TypeLit -> FunctionType .)
    IMAGINARY       reduce using rule 9 (TypeLit -> FunctionType .)
    RUNE            reduce using rule 9 (TypeLit -> FunctionType .)
    STRING          reduce using rule 9 (TypeLit -> FunctionType .)
    FUNCTION        reduce using rule 9 (TypeLit -> FunctionType .)
    STRUCT          reduce using rule 9 (TypeLit -> FunctionType .)
    INTERFACE       reduce using rule 9 (TypeLit -> FunctionType .)
    MAP             reduce using rule 9 (TypeLit -> FunctionType .)
    CHAN            reduce using rule 9 (TypeLit -> FunctionType .)
    SEMICOLON       reduce using rule 9 (TypeLit -> FunctionType .)
    ASSIGNMENT      reduce using rule 9 (TypeLit -> FunctionType .)
    COLON           reduce using rule 9 (TypeLit -> FunctionType .)
    LEFT_BRACE      reduce using rule 9 (TypeLit -> FunctionType .)


state 11

    (10) TypeLit -> InterfaceType .

    $end            reduce using rule 10 (TypeLit -> InterfaceType .)
    RIGHT_PARENTHESIS reduce using rule 10 (TypeLit -> InterfaceType .)
    LEFT_PARENTHESIS reduce using rule 10 (TypeLit -> InterfaceType .)
    PERIOD          reduce using rule 10 (TypeLit -> InterfaceType .)
    LEFT_BRACKET    reduce using rule 10 (TypeLit -> InterfaceType .)
    RIGHT_BRACKET   reduce using rule 10 (TypeLit -> InterfaceType .)
    COMMA           reduce using rule 10 (TypeLit -> InterfaceType .)
    ADD             reduce using rule 10 (TypeLit -> InterfaceType .)
    SUBTRACT        reduce using rule 10 (TypeLit -> InterfaceType .)
    NOT             reduce using rule 10 (TypeLit -> InterfaceType .)
    XOR             reduce using rule 10 (TypeLit -> InterfaceType .)
    MULTIPLY        reduce using rule 10 (TypeLit -> InterfaceType .)
    AND             reduce using rule 10 (TypeLit -> InterfaceType .)
    ARROW           reduce using rule 10 (TypeLit -> InterfaceType .)
    IDENT           reduce using rule 10 (TypeLit -> InterfaceType .)
    INT             reduce using rule 10 (TypeLit -> InterfaceType .)
    FLOAT           reduce using rule 10 (TypeLit -> InterfaceType .)
    IMAGINARY       reduce using rule 10 (TypeLit -> InterfaceType .)
    RUNE            reduce using rule 10 (TypeLit -> InterfaceType .)
    STRING          reduce using rule 10 (TypeLit -> InterfaceType .)
    FUNCTION        reduce using rule 10 (TypeLit -> InterfaceType .)
    STRUCT          reduce using rule 10 (TypeLit -> InterfaceType .)
    INTERFACE       reduce using rule 10 (TypeLit -> InterfaceType .)
    MAP             reduce using rule 10 (TypeLit -> InterfaceType .)
    CHAN            reduce using rule 10 (TypeLit -> InterfaceType .)
    SEMICOLON       reduce using rule 10 (TypeLit -> InterfaceType .)
    ASSIGNMENT      reduce using rule 10 (TypeLit -> InterfaceType .)
    COLON           reduce using rule 10 (TypeLit -> InterfaceType .)
    LEFT_BRACE      reduce using rule 10 (TypeLit -> InterfaceType .)


state 12

    (11) TypeLit -> SliceType .

    $end            reduce using rule 11 (TypeLit -> SliceType .)
    RIGHT_PARENTHESIS reduce using rule 11 (TypeLit -> SliceType .)
    LEFT_PARENTHESIS reduce using rule 11 (TypeLit -> SliceType .)
    PERIOD          reduce using rule 11 (TypeLit -> SliceType .)
    LEFT_BRACKET    reduce using rule 11 (TypeLit -> SliceType .)
    RIGHT_BRACKET   reduce using rule 11 (TypeLit -> SliceType .)
    COMMA           reduce using rule 11 (TypeLit -> SliceType .)
    ADD             reduce using rule 11 (TypeLit -> SliceType .)
    SUBTRACT        reduce using rule 11 (TypeLit -> SliceType .)
    NOT             reduce using rule 11 (TypeLit -> SliceType .)
    XOR             reduce using rule 11 (TypeLit -> SliceType .)
    MULTIPLY        reduce using rule 11 (TypeLit -> SliceType .)
    AND             reduce using rule 11 (TypeLit -> SliceType .)
    ARROW           reduce using rule 11 (TypeLit -> SliceType .)
    IDENT           reduce using rule 11 (TypeLit -> SliceType .)
    INT             reduce using rule 11 (TypeLit -> SliceType .)
    FLOAT           reduce using rule 11 (TypeLit -> SliceType .)
    IMAGINARY       reduce using rule 11 (TypeLit -> SliceType .)
    RUNE            reduce using rule 11 (TypeLit -> SliceType .)
    STRING          reduce using rule 11 (TypeLit -> SliceType .)
    FUNCTION        reduce using rule 11 (TypeLit -> SliceType .)
    STRUCT          reduce using rule 11 (TypeLit -> SliceType .)
    INTERFACE       reduce using rule 11 (TypeLit -> SliceType .)
    MAP             reduce using rule 11 (TypeLit -> SliceType .)
    CHAN            reduce using rule 11 (TypeLit -> SliceType .)
    SEMICOLON       reduce using rule 11 (TypeLit -> SliceType .)
    ASSIGNMENT      reduce using rule 11 (TypeLit -> SliceType .)
    COLON           reduce using rule 11 (TypeLit -> SliceType .)
    LEFT_BRACE      reduce using rule 11 (TypeLit -> SliceType .)


state 13

    (12) TypeLit -> MapType .

    $end            reduce using rule 12 (TypeLit -> MapType .)
    RIGHT_PARENTHESIS reduce using rule 12 (TypeLit -> MapType .)
    LEFT_PARENTHESIS reduce using rule 12 (TypeLit -> MapType .)
    PERIOD          reduce using rule 12 (TypeLit -> MapType .)
    LEFT_BRACKET    reduce using rule 12 (TypeLit -> MapType .)
    RIGHT_BRACKET   reduce using rule 12 (TypeLit -> MapType .)
    COMMA           reduce using rule 12 (TypeLit -> MapType .)
    ADD             reduce using rule 12 (TypeLit -> MapType .)
    SUBTRACT        reduce using rule 12 (TypeLit -> MapType .)
    NOT             reduce using rule 12 (TypeLit -> MapType .)
    XOR             reduce using rule 12 (TypeLit -> MapType .)
    MULTIPLY        reduce using rule 12 (TypeLit -> MapType .)
    AND             reduce using rule 12 (TypeLit -> MapType .)
    ARROW           reduce using rule 12 (TypeLit -> MapType .)
    IDENT           reduce using rule 12 (TypeLit -> MapType .)
    INT             reduce using rule 12 (TypeLit -> MapType .)
    FLOAT           reduce using rule 12 (TypeLit -> MapType .)
    IMAGINARY       reduce using rule 12 (TypeLit -> MapType .)
    RUNE            reduce using rule 12 (TypeLit -> MapType .)
    STRING          reduce using rule 12 (TypeLit -> MapType .)
    FUNCTION        reduce using rule 12 (TypeLit -> MapType .)
    STRUCT          reduce using rule 12 (TypeLit -> MapType .)
    INTERFACE       reduce using rule 12 (TypeLit -> MapType .)
    MAP             reduce using rule 12 (TypeLit -> MapType .)
    CHAN            reduce using rule 12 (TypeLit -> MapType .)
    SEMICOLON       reduce using rule 12 (TypeLit -> MapType .)
    ASSIGNMENT      reduce using rule 12 (TypeLit -> MapType .)
    COLON           reduce using rule 12 (TypeLit -> MapType .)
    LEFT_BRACE      reduce using rule 12 (TypeLit -> MapType .)


state 14

    (13) TypeLit -> ChannelType .

    $end            reduce using rule 13 (TypeLit -> ChannelType .)
    RIGHT_PARENTHESIS reduce using rule 13 (TypeLit -> ChannelType .)
    LEFT_PARENTHESIS reduce using rule 13 (TypeLit -> ChannelType .)
    PERIOD          reduce using rule 13 (TypeLit -> ChannelType .)
    LEFT_BRACKET    reduce using rule 13 (TypeLit -> ChannelType .)
    RIGHT_BRACKET   reduce using rule 13 (TypeLit -> ChannelType .)
    COMMA           reduce using rule 13 (TypeLit -> ChannelType .)
    ADD             reduce using rule 13 (TypeLit -> ChannelType .)
    SUBTRACT        reduce using rule 13 (TypeLit -> ChannelType .)
    NOT             reduce using rule 13 (TypeLit -> ChannelType .)
    XOR             reduce using rule 13 (TypeLit -> ChannelType .)
    MULTIPLY        reduce using rule 13 (TypeLit -> ChannelType .)
    AND             reduce using rule 13 (TypeLit -> ChannelType .)
    ARROW           reduce using rule 13 (TypeLit -> ChannelType .)
    IDENT           reduce using rule 13 (TypeLit -> ChannelType .)
    INT             reduce using rule 13 (TypeLit -> ChannelType .)
    FLOAT           reduce using rule 13 (TypeLit -> ChannelType .)
    IMAGINARY       reduce using rule 13 (TypeLit -> ChannelType .)
    RUNE            reduce using rule 13 (TypeLit -> ChannelType .)
    STRING          reduce using rule 13 (TypeLit -> ChannelType .)
    FUNCTION        reduce using rule 13 (TypeLit -> ChannelType .)
    STRUCT          reduce using rule 13 (TypeLit -> ChannelType .)
    INTERFACE       reduce using rule 13 (TypeLit -> ChannelType .)
    MAP             reduce using rule 13 (TypeLit -> ChannelType .)
    CHAN            reduce using rule 13 (TypeLit -> ChannelType .)
    SEMICOLON       reduce using rule 13 (TypeLit -> ChannelType .)
    ASSIGNMENT      reduce using rule 13 (TypeLit -> ChannelType .)
    COLON           reduce using rule 13 (TypeLit -> ChannelType .)
    LEFT_BRACE      reduce using rule 13 (TypeLit -> ChannelType .)


state 15

    (125) QualifiedIdent -> PackageName . PERIOD IDENT

    PERIOD          shift and go to state 26


state 16

    (14) ArrayType -> LEFT_BRACKET . ArrayLength RIGHT_BRACKET ElementType
    (17) SliceType -> LEFT_BRACKET . RIGHT_BRACKET ElementType
    (15) ArrayLength -> . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACKET   shift and go to state 29
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ArrayLength                    shift and go to state 28
    Expression                     shift and go to state 30
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 17

    (18) StructType -> STRUCT . LEFT_BRACE ManyFieldDecl RIGHT_BRACE

    LEFT_BRACE      shift and go to state 66


state 18

    (28) PointerType -> MULTIPLY . BaseType
    (29) BaseType -> . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    BaseType                       shift and go to state 67
    Type                           shift and go to state 68
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 19

    (30) FunctionType -> FUNCTION . Signature
    (31) Signature -> . Parameters ResultPlus
    (36) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 71

    Signature                      shift and go to state 69
    Parameters                     shift and go to state 70

state 20

    (47) InterfaceType -> INTERFACE . LEFT_BRACE InterfaceTypePlus RIGHT_BRACE

    LEFT_BRACE      shift and go to state 72


state 21

    (55) MapType -> MAP . LEFT_BRACKET KeyType RIGHT_BRACKET ElementType

    LEFT_BRACKET    shift and go to state 73


state 22

    (57) ChannelType -> ChannelTypeOr . ElementType
    (16) ElementType -> . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    ChannelTypeOr                  shift and go to state 22
    ElementType                    shift and go to state 74
    Type                           shift and go to state 75
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15

state 23

    (58) ChannelTypeOr -> CHAN .
    (59) ChannelTypeOr -> CHAN . ARROW

  ! shift/reduce conflict for ARROW resolved as shift
    LEFT_PARENTHESIS reduce using rule 58 (ChannelTypeOr -> CHAN .)
    IDENT           reduce using rule 58 (ChannelTypeOr -> CHAN .)
    LEFT_BRACKET    reduce using rule 58 (ChannelTypeOr -> CHAN .)
    STRUCT          reduce using rule 58 (ChannelTypeOr -> CHAN .)
    MULTIPLY        reduce using rule 58 (ChannelTypeOr -> CHAN .)
    FUNCTION        reduce using rule 58 (ChannelTypeOr -> CHAN .)
    INTERFACE       reduce using rule 58 (ChannelTypeOr -> CHAN .)
    MAP             reduce using rule 58 (ChannelTypeOr -> CHAN .)
    CHAN            reduce using rule 58 (ChannelTypeOr -> CHAN .)
    ARROW           shift and go to state 76

  ! ARROW           [ reduce using rule 58 (ChannelTypeOr -> CHAN .) ]


state 24

    (60) ChannelTypeOr -> ARROW . CHAN

    CHAN            shift and go to state 77


state 25

    (3) Type -> LEFT_PARENTHESIS Type . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 78


state 26

    (125) QualifiedIdent -> PackageName PERIOD . IDENT

    IDENT           shift and go to state 79


state 27

    (129) LiteralType -> LEFT_BRACKET . ELLIPSIS RIGHT_BRACKET ElementType
    (14) ArrayType -> LEFT_BRACKET . ArrayLength RIGHT_BRACKET ElementType
    (17) SliceType -> LEFT_BRACKET . RIGHT_BRACKET ElementType
    (15) ArrayLength -> . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ELLIPSIS        shift and go to state 80
    RIGHT_BRACKET   shift and go to state 29
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ArrayLength                    shift and go to state 28
    Expression                     shift and go to state 30
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 28

    (14) ArrayType -> LEFT_BRACKET ArrayLength . RIGHT_BRACKET ElementType

    RIGHT_BRACKET   shift and go to state 81


state 29

    (17) SliceType -> LEFT_BRACKET RIGHT_BRACKET . ElementType
    (16) ElementType -> . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    ElementType                    shift and go to state 82
    Type                           shift and go to state 75
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 30

    (15) ArrayLength -> Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    RIGHT_BRACKET   reduce using rule 15 (ArrayLength -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 31

    (173) Expression -> UnaryExpr .

    LOGICAL_OR      reduce using rule 173 (Expression -> UnaryExpr .)
    LOGICAL_AND     reduce using rule 173 (Expression -> UnaryExpr .)
    EQUAL           reduce using rule 173 (Expression -> UnaryExpr .)
    NOT_EQUAL       reduce using rule 173 (Expression -> UnaryExpr .)
    LESS_THAN       reduce using rule 173 (Expression -> UnaryExpr .)
    LESS_THAN_EQUAL reduce using rule 173 (Expression -> UnaryExpr .)
    GREATER_THAN    reduce using rule 173 (Expression -> UnaryExpr .)
    GREATER_THAN_EQUAL reduce using rule 173 (Expression -> UnaryExpr .)
    ADD             reduce using rule 173 (Expression -> UnaryExpr .)
    SUBTRACT        reduce using rule 173 (Expression -> UnaryExpr .)
    OR              reduce using rule 173 (Expression -> UnaryExpr .)
    XOR             reduce using rule 173 (Expression -> UnaryExpr .)
    MULTIPLY        reduce using rule 173 (Expression -> UnaryExpr .)
    QUOTIENT        reduce using rule 173 (Expression -> UnaryExpr .)
    REMAINDER       reduce using rule 173 (Expression -> UnaryExpr .)
    SHIFT_LEFT      reduce using rule 173 (Expression -> UnaryExpr .)
    SHIFT_RIGHT     reduce using rule 173 (Expression -> UnaryExpr .)
    AND             reduce using rule 173 (Expression -> UnaryExpr .)
    AND_NOT         reduce using rule 173 (Expression -> UnaryExpr .)
    RIGHT_BRACKET   reduce using rule 173 (Expression -> UnaryExpr .)
    RIGHT_PARENTHESIS reduce using rule 173 (Expression -> UnaryExpr .)
    COLON           reduce using rule 173 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 173 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 173 (Expression -> UnaryExpr .)
    LEFT_BRACE      reduce using rule 173 (Expression -> UnaryExpr .)
    ASSIGNMENT      reduce using rule 173 (Expression -> UnaryExpr .)
    INCREMENT       reduce using rule 173 (Expression -> UnaryExpr .)
    DECREMENT       reduce using rule 173 (Expression -> UnaryExpr .)
    ARROW           reduce using rule 173 (Expression -> UnaryExpr .)


state 32

    (175) UnaryExpr -> PrimaryExpr .
    (153) PrimaryExpr -> PrimaryExpr . Selector
    (154) PrimaryExpr -> PrimaryExpr . Index
    (155) PrimaryExpr -> PrimaryExpr . Slice
    (156) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (157) PrimaryExpr -> PrimaryExpr . Arguments
    (158) Selector -> . PERIOD IDENT
    (159) Index -> . LEFT_BRACKET Expression RIGHT_BRACKET
    (160) Slice -> . LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET
    (161) Slice -> . LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET
    (162) TypeAssertion -> . PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (163) Arguments -> . LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS

    LOGICAL_OR      reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    LOGICAL_AND     reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    NOT_EQUAL       reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    LESS_THAN       reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    LESS_THAN_EQUAL reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    GREATER_THAN    reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    GREATER_THAN_EQUAL reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    SUBTRACT        reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    MULTIPLY        reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    QUOTIENT        reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    REMAINDER       reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    SHIFT_LEFT      reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    SHIFT_RIGHT     reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    RIGHT_BRACKET   reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    RIGHT_PARENTHESIS reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    LEFT_BRACE      reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    ASSIGNMENT      reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    INCREMENT       reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    DECREMENT       reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    ARROW           reduce using rule 175 (UnaryExpr -> PrimaryExpr .)
    PERIOD          shift and go to state 111
    LEFT_BRACKET    shift and go to state 112
    LEFT_PARENTHESIS shift and go to state 113

    Selector                       shift and go to state 106
    Index                          shift and go to state 107
    Slice                          shift and go to state 108
    TypeAssertion                  shift and go to state 109
    Arguments                      shift and go to state 110

state 33

    (176) UnaryExpr -> unary_op . UnaryExpr
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    unary_op                       shift and go to state 33
    UnaryExpr                      shift and go to state 114
    PrimaryExpr                    shift and go to state 32
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 34

    (150) PrimaryExpr -> Operand .

    PERIOD          reduce using rule 150 (PrimaryExpr -> Operand .)
    LEFT_BRACKET    reduce using rule 150 (PrimaryExpr -> Operand .)
    LEFT_PARENTHESIS reduce using rule 150 (PrimaryExpr -> Operand .)
    LOGICAL_OR      reduce using rule 150 (PrimaryExpr -> Operand .)
    LOGICAL_AND     reduce using rule 150 (PrimaryExpr -> Operand .)
    EQUAL           reduce using rule 150 (PrimaryExpr -> Operand .)
    NOT_EQUAL       reduce using rule 150 (PrimaryExpr -> Operand .)
    LESS_THAN       reduce using rule 150 (PrimaryExpr -> Operand .)
    LESS_THAN_EQUAL reduce using rule 150 (PrimaryExpr -> Operand .)
    GREATER_THAN    reduce using rule 150 (PrimaryExpr -> Operand .)
    GREATER_THAN_EQUAL reduce using rule 150 (PrimaryExpr -> Operand .)
    ADD             reduce using rule 150 (PrimaryExpr -> Operand .)
    SUBTRACT        reduce using rule 150 (PrimaryExpr -> Operand .)
    OR              reduce using rule 150 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 150 (PrimaryExpr -> Operand .)
    MULTIPLY        reduce using rule 150 (PrimaryExpr -> Operand .)
    QUOTIENT        reduce using rule 150 (PrimaryExpr -> Operand .)
    REMAINDER       reduce using rule 150 (PrimaryExpr -> Operand .)
    SHIFT_LEFT      reduce using rule 150 (PrimaryExpr -> Operand .)
    SHIFT_RIGHT     reduce using rule 150 (PrimaryExpr -> Operand .)
    AND             reduce using rule 150 (PrimaryExpr -> Operand .)
    AND_NOT         reduce using rule 150 (PrimaryExpr -> Operand .)
    RIGHT_BRACKET   reduce using rule 150 (PrimaryExpr -> Operand .)
    RIGHT_PARENTHESIS reduce using rule 150 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 150 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 150 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 150 (PrimaryExpr -> Operand .)
    LEFT_BRACE      reduce using rule 150 (PrimaryExpr -> Operand .)
    ASSIGNMENT      reduce using rule 150 (PrimaryExpr -> Operand .)
    INCREMENT       reduce using rule 150 (PrimaryExpr -> Operand .)
    DECREMENT       reduce using rule 150 (PrimaryExpr -> Operand .)
    ARROW           reduce using rule 150 (PrimaryExpr -> Operand .)


state 35

    (151) PrimaryExpr -> Conversion .

    PERIOD          reduce using rule 151 (PrimaryExpr -> Conversion .)
    LEFT_BRACKET    reduce using rule 151 (PrimaryExpr -> Conversion .)
    LEFT_PARENTHESIS reduce using rule 151 (PrimaryExpr -> Conversion .)
    LOGICAL_OR      reduce using rule 151 (PrimaryExpr -> Conversion .)
    LOGICAL_AND     reduce using rule 151 (PrimaryExpr -> Conversion .)
    EQUAL           reduce using rule 151 (PrimaryExpr -> Conversion .)
    NOT_EQUAL       reduce using rule 151 (PrimaryExpr -> Conversion .)
    LESS_THAN       reduce using rule 151 (PrimaryExpr -> Conversion .)
    LESS_THAN_EQUAL reduce using rule 151 (PrimaryExpr -> Conversion .)
    GREATER_THAN    reduce using rule 151 (PrimaryExpr -> Conversion .)
    GREATER_THAN_EQUAL reduce using rule 151 (PrimaryExpr -> Conversion .)
    ADD             reduce using rule 151 (PrimaryExpr -> Conversion .)
    SUBTRACT        reduce using rule 151 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 151 (PrimaryExpr -> Conversion .)
    XOR             reduce using rule 151 (PrimaryExpr -> Conversion .)
    MULTIPLY        reduce using rule 151 (PrimaryExpr -> Conversion .)
    QUOTIENT        reduce using rule 151 (PrimaryExpr -> Conversion .)
    REMAINDER       reduce using rule 151 (PrimaryExpr -> Conversion .)
    SHIFT_LEFT      reduce using rule 151 (PrimaryExpr -> Conversion .)
    SHIFT_RIGHT     reduce using rule 151 (PrimaryExpr -> Conversion .)
    AND             reduce using rule 151 (PrimaryExpr -> Conversion .)
    AND_NOT         reduce using rule 151 (PrimaryExpr -> Conversion .)
    RIGHT_BRACKET   reduce using rule 151 (PrimaryExpr -> Conversion .)
    RIGHT_PARENTHESIS reduce using rule 151 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 151 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 151 (PrimaryExpr -> Conversion .)
    SEMICOLON       reduce using rule 151 (PrimaryExpr -> Conversion .)
    LEFT_BRACE      reduce using rule 151 (PrimaryExpr -> Conversion .)
    ASSIGNMENT      reduce using rule 151 (PrimaryExpr -> Conversion .)
    INCREMENT       reduce using rule 151 (PrimaryExpr -> Conversion .)
    DECREMENT       reduce using rule 151 (PrimaryExpr -> Conversion .)
    ARROW           reduce using rule 151 (PrimaryExpr -> Conversion .)


state 36

    (152) PrimaryExpr -> MethodExpr .

    PERIOD          reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    LEFT_BRACKET    reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    LEFT_PARENTHESIS reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    LOGICAL_OR      reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    LOGICAL_AND     reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    EQUAL           reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    NOT_EQUAL       reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    LESS_THAN       reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    LESS_THAN_EQUAL reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    GREATER_THAN    reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    GREATER_THAN_EQUAL reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    ADD             reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    SUBTRACT        reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    OR              reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    XOR             reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    MULTIPLY        reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    QUOTIENT        reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    REMAINDER       reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    SHIFT_LEFT      reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    SHIFT_RIGHT     reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    AND             reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    AND_NOT         reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    RIGHT_BRACKET   reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    RIGHT_PARENTHESIS reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    COLON           reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    COMMA           reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    SEMICOLON       reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    LEFT_BRACE      reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    ASSIGNMENT      reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    INCREMENT       reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    DECREMENT       reduce using rule 152 (PrimaryExpr -> MethodExpr .)
    ARROW           reduce using rule 152 (PrimaryExpr -> MethodExpr .)


state 37

    (199) unary_op -> ADD .

    ADD             reduce using rule 199 (unary_op -> ADD .)
    SUBTRACT        reduce using rule 199 (unary_op -> ADD .)
    NOT             reduce using rule 199 (unary_op -> ADD .)
    XOR             reduce using rule 199 (unary_op -> ADD .)
    MULTIPLY        reduce using rule 199 (unary_op -> ADD .)
    AND             reduce using rule 199 (unary_op -> ADD .)
    ARROW           reduce using rule 199 (unary_op -> ADD .)
    LEFT_PARENTHESIS reduce using rule 199 (unary_op -> ADD .)
    IDENT           reduce using rule 199 (unary_op -> ADD .)
    INT             reduce using rule 199 (unary_op -> ADD .)
    FLOAT           reduce using rule 199 (unary_op -> ADD .)
    IMAGINARY       reduce using rule 199 (unary_op -> ADD .)
    RUNE            reduce using rule 199 (unary_op -> ADD .)
    STRING          reduce using rule 199 (unary_op -> ADD .)
    FUNCTION        reduce using rule 199 (unary_op -> ADD .)
    LEFT_BRACKET    reduce using rule 199 (unary_op -> ADD .)
    STRUCT          reduce using rule 199 (unary_op -> ADD .)
    INTERFACE       reduce using rule 199 (unary_op -> ADD .)
    MAP             reduce using rule 199 (unary_op -> ADD .)
    CHAN            reduce using rule 199 (unary_op -> ADD .)


state 38

    (200) unary_op -> SUBTRACT .

    ADD             reduce using rule 200 (unary_op -> SUBTRACT .)
    SUBTRACT        reduce using rule 200 (unary_op -> SUBTRACT .)
    NOT             reduce using rule 200 (unary_op -> SUBTRACT .)
    XOR             reduce using rule 200 (unary_op -> SUBTRACT .)
    MULTIPLY        reduce using rule 200 (unary_op -> SUBTRACT .)
    AND             reduce using rule 200 (unary_op -> SUBTRACT .)
    ARROW           reduce using rule 200 (unary_op -> SUBTRACT .)
    LEFT_PARENTHESIS reduce using rule 200 (unary_op -> SUBTRACT .)
    IDENT           reduce using rule 200 (unary_op -> SUBTRACT .)
    INT             reduce using rule 200 (unary_op -> SUBTRACT .)
    FLOAT           reduce using rule 200 (unary_op -> SUBTRACT .)
    IMAGINARY       reduce using rule 200 (unary_op -> SUBTRACT .)
    RUNE            reduce using rule 200 (unary_op -> SUBTRACT .)
    STRING          reduce using rule 200 (unary_op -> SUBTRACT .)
    FUNCTION        reduce using rule 200 (unary_op -> SUBTRACT .)
    LEFT_BRACKET    reduce using rule 200 (unary_op -> SUBTRACT .)
    STRUCT          reduce using rule 200 (unary_op -> SUBTRACT .)
    INTERFACE       reduce using rule 200 (unary_op -> SUBTRACT .)
    MAP             reduce using rule 200 (unary_op -> SUBTRACT .)
    CHAN            reduce using rule 200 (unary_op -> SUBTRACT .)


state 39

    (201) unary_op -> NOT .

    ADD             reduce using rule 201 (unary_op -> NOT .)
    SUBTRACT        reduce using rule 201 (unary_op -> NOT .)
    NOT             reduce using rule 201 (unary_op -> NOT .)
    XOR             reduce using rule 201 (unary_op -> NOT .)
    MULTIPLY        reduce using rule 201 (unary_op -> NOT .)
    AND             reduce using rule 201 (unary_op -> NOT .)
    ARROW           reduce using rule 201 (unary_op -> NOT .)
    LEFT_PARENTHESIS reduce using rule 201 (unary_op -> NOT .)
    IDENT           reduce using rule 201 (unary_op -> NOT .)
    INT             reduce using rule 201 (unary_op -> NOT .)
    FLOAT           reduce using rule 201 (unary_op -> NOT .)
    IMAGINARY       reduce using rule 201 (unary_op -> NOT .)
    RUNE            reduce using rule 201 (unary_op -> NOT .)
    STRING          reduce using rule 201 (unary_op -> NOT .)
    FUNCTION        reduce using rule 201 (unary_op -> NOT .)
    LEFT_BRACKET    reduce using rule 201 (unary_op -> NOT .)
    STRUCT          reduce using rule 201 (unary_op -> NOT .)
    INTERFACE       reduce using rule 201 (unary_op -> NOT .)
    MAP             reduce using rule 201 (unary_op -> NOT .)
    CHAN            reduce using rule 201 (unary_op -> NOT .)


state 40

    (202) unary_op -> XOR .

    ADD             reduce using rule 202 (unary_op -> XOR .)
    SUBTRACT        reduce using rule 202 (unary_op -> XOR .)
    NOT             reduce using rule 202 (unary_op -> XOR .)
    XOR             reduce using rule 202 (unary_op -> XOR .)
    MULTIPLY        reduce using rule 202 (unary_op -> XOR .)
    AND             reduce using rule 202 (unary_op -> XOR .)
    ARROW           reduce using rule 202 (unary_op -> XOR .)
    LEFT_PARENTHESIS reduce using rule 202 (unary_op -> XOR .)
    IDENT           reduce using rule 202 (unary_op -> XOR .)
    INT             reduce using rule 202 (unary_op -> XOR .)
    FLOAT           reduce using rule 202 (unary_op -> XOR .)
    IMAGINARY       reduce using rule 202 (unary_op -> XOR .)
    RUNE            reduce using rule 202 (unary_op -> XOR .)
    STRING          reduce using rule 202 (unary_op -> XOR .)
    FUNCTION        reduce using rule 202 (unary_op -> XOR .)
    LEFT_BRACKET    reduce using rule 202 (unary_op -> XOR .)
    STRUCT          reduce using rule 202 (unary_op -> XOR .)
    INTERFACE       reduce using rule 202 (unary_op -> XOR .)
    MAP             reduce using rule 202 (unary_op -> XOR .)
    CHAN            reduce using rule 202 (unary_op -> XOR .)


state 41

    (203) unary_op -> MULTIPLY .
    (28) PointerType -> MULTIPLY . BaseType
    (29) BaseType -> . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             reduce using rule 203 (unary_op -> MULTIPLY .)
    SUBTRACT        reduce using rule 203 (unary_op -> MULTIPLY .)
    NOT             reduce using rule 203 (unary_op -> MULTIPLY .)
    XOR             reduce using rule 203 (unary_op -> MULTIPLY .)
    MULTIPLY        reduce using rule 203 (unary_op -> MULTIPLY .)
    AND             reduce using rule 203 (unary_op -> MULTIPLY .)
    ARROW           reduce using rule 203 (unary_op -> MULTIPLY .)
    LEFT_PARENTHESIS reduce using rule 203 (unary_op -> MULTIPLY .)
    IDENT           reduce using rule 203 (unary_op -> MULTIPLY .)
    INT             reduce using rule 203 (unary_op -> MULTIPLY .)
    FLOAT           reduce using rule 203 (unary_op -> MULTIPLY .)
    IMAGINARY       reduce using rule 203 (unary_op -> MULTIPLY .)
    RUNE            reduce using rule 203 (unary_op -> MULTIPLY .)
    STRING          reduce using rule 203 (unary_op -> MULTIPLY .)
    FUNCTION        reduce using rule 203 (unary_op -> MULTIPLY .)
    LEFT_BRACKET    reduce using rule 203 (unary_op -> MULTIPLY .)
    STRUCT          reduce using rule 203 (unary_op -> MULTIPLY .)
    INTERFACE       reduce using rule 203 (unary_op -> MULTIPLY .)
    MAP             reduce using rule 203 (unary_op -> MULTIPLY .)
    CHAN            reduce using rule 203 (unary_op -> MULTIPLY .)

  ! LEFT_PARENTHESIS [ shift and go to state 4 ]
  ! IDENT           [ shift and go to state 5 ]
  ! LEFT_BRACKET    [ shift and go to state 16 ]
  ! STRUCT          [ shift and go to state 17 ]
  ! MULTIPLY        [ shift and go to state 18 ]
  ! FUNCTION        [ shift and go to state 19 ]
  ! INTERFACE       [ shift and go to state 20 ]
  ! MAP             [ shift and go to state 21 ]
  ! CHAN            [ shift and go to state 23 ]
  ! ARROW           [ shift and go to state 24 ]

    BaseType                       shift and go to state 67
    Type                           shift and go to state 68
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 42

    (204) unary_op -> AND .

    ADD             reduce using rule 204 (unary_op -> AND .)
    SUBTRACT        reduce using rule 204 (unary_op -> AND .)
    NOT             reduce using rule 204 (unary_op -> AND .)
    XOR             reduce using rule 204 (unary_op -> AND .)
    MULTIPLY        reduce using rule 204 (unary_op -> AND .)
    AND             reduce using rule 204 (unary_op -> AND .)
    ARROW           reduce using rule 204 (unary_op -> AND .)
    LEFT_PARENTHESIS reduce using rule 204 (unary_op -> AND .)
    IDENT           reduce using rule 204 (unary_op -> AND .)
    INT             reduce using rule 204 (unary_op -> AND .)
    FLOAT           reduce using rule 204 (unary_op -> AND .)
    IMAGINARY       reduce using rule 204 (unary_op -> AND .)
    RUNE            reduce using rule 204 (unary_op -> AND .)
    STRING          reduce using rule 204 (unary_op -> AND .)
    FUNCTION        reduce using rule 204 (unary_op -> AND .)
    LEFT_BRACKET    reduce using rule 204 (unary_op -> AND .)
    STRUCT          reduce using rule 204 (unary_op -> AND .)
    INTERFACE       reduce using rule 204 (unary_op -> AND .)
    MAP             reduce using rule 204 (unary_op -> AND .)
    CHAN            reduce using rule 204 (unary_op -> AND .)


state 43

    (205) unary_op -> ARROW .
    (60) ChannelTypeOr -> ARROW . CHAN

  ! shift/reduce conflict for CHAN resolved as shift
    ADD             reduce using rule 205 (unary_op -> ARROW .)
    SUBTRACT        reduce using rule 205 (unary_op -> ARROW .)
    NOT             reduce using rule 205 (unary_op -> ARROW .)
    XOR             reduce using rule 205 (unary_op -> ARROW .)
    MULTIPLY        reduce using rule 205 (unary_op -> ARROW .)
    AND             reduce using rule 205 (unary_op -> ARROW .)
    ARROW           reduce using rule 205 (unary_op -> ARROW .)
    LEFT_PARENTHESIS reduce using rule 205 (unary_op -> ARROW .)
    IDENT           reduce using rule 205 (unary_op -> ARROW .)
    INT             reduce using rule 205 (unary_op -> ARROW .)
    FLOAT           reduce using rule 205 (unary_op -> ARROW .)
    IMAGINARY       reduce using rule 205 (unary_op -> ARROW .)
    RUNE            reduce using rule 205 (unary_op -> ARROW .)
    STRING          reduce using rule 205 (unary_op -> ARROW .)
    FUNCTION        reduce using rule 205 (unary_op -> ARROW .)
    LEFT_BRACKET    reduce using rule 205 (unary_op -> ARROW .)
    STRUCT          reduce using rule 205 (unary_op -> ARROW .)
    INTERFACE       reduce using rule 205 (unary_op -> ARROW .)
    MAP             reduce using rule 205 (unary_op -> ARROW .)
    CHAN            shift and go to state 77

  ! CHAN            [ reduce using rule 205 (unary_op -> ARROW .) ]


state 44

    (112) Operand -> Literal .

    PERIOD          reduce using rule 112 (Operand -> Literal .)
    LEFT_BRACKET    reduce using rule 112 (Operand -> Literal .)
    LEFT_PARENTHESIS reduce using rule 112 (Operand -> Literal .)
    LOGICAL_OR      reduce using rule 112 (Operand -> Literal .)
    LOGICAL_AND     reduce using rule 112 (Operand -> Literal .)
    EQUAL           reduce using rule 112 (Operand -> Literal .)
    NOT_EQUAL       reduce using rule 112 (Operand -> Literal .)
    LESS_THAN       reduce using rule 112 (Operand -> Literal .)
    LESS_THAN_EQUAL reduce using rule 112 (Operand -> Literal .)
    GREATER_THAN    reduce using rule 112 (Operand -> Literal .)
    GREATER_THAN_EQUAL reduce using rule 112 (Operand -> Literal .)
    ADD             reduce using rule 112 (Operand -> Literal .)
    SUBTRACT        reduce using rule 112 (Operand -> Literal .)
    OR              reduce using rule 112 (Operand -> Literal .)
    XOR             reduce using rule 112 (Operand -> Literal .)
    MULTIPLY        reduce using rule 112 (Operand -> Literal .)
    QUOTIENT        reduce using rule 112 (Operand -> Literal .)
    REMAINDER       reduce using rule 112 (Operand -> Literal .)
    SHIFT_LEFT      reduce using rule 112 (Operand -> Literal .)
    SHIFT_RIGHT     reduce using rule 112 (Operand -> Literal .)
    AND             reduce using rule 112 (Operand -> Literal .)
    AND_NOT         reduce using rule 112 (Operand -> Literal .)
    RIGHT_BRACKET   reduce using rule 112 (Operand -> Literal .)
    RIGHT_PARENTHESIS reduce using rule 112 (Operand -> Literal .)
    COLON           reduce using rule 112 (Operand -> Literal .)
    COMMA           reduce using rule 112 (Operand -> Literal .)
    SEMICOLON       reduce using rule 112 (Operand -> Literal .)
    LEFT_BRACE      reduce using rule 112 (Operand -> Literal .)
    ASSIGNMENT      reduce using rule 112 (Operand -> Literal .)
    INCREMENT       reduce using rule 112 (Operand -> Literal .)
    DECREMENT       reduce using rule 112 (Operand -> Literal .)
    ARROW           reduce using rule 112 (Operand -> Literal .)


state 45

    (113) Operand -> OperandName .

    PERIOD          reduce using rule 113 (Operand -> OperandName .)
    LEFT_BRACKET    reduce using rule 113 (Operand -> OperandName .)
    LEFT_PARENTHESIS reduce using rule 113 (Operand -> OperandName .)
    LOGICAL_OR      reduce using rule 113 (Operand -> OperandName .)
    LOGICAL_AND     reduce using rule 113 (Operand -> OperandName .)
    EQUAL           reduce using rule 113 (Operand -> OperandName .)
    NOT_EQUAL       reduce using rule 113 (Operand -> OperandName .)
    LESS_THAN       reduce using rule 113 (Operand -> OperandName .)
    LESS_THAN_EQUAL reduce using rule 113 (Operand -> OperandName .)
    GREATER_THAN    reduce using rule 113 (Operand -> OperandName .)
    GREATER_THAN_EQUAL reduce using rule 113 (Operand -> OperandName .)
    ADD             reduce using rule 113 (Operand -> OperandName .)
    SUBTRACT        reduce using rule 113 (Operand -> OperandName .)
    OR              reduce using rule 113 (Operand -> OperandName .)
    XOR             reduce using rule 113 (Operand -> OperandName .)
    MULTIPLY        reduce using rule 113 (Operand -> OperandName .)
    QUOTIENT        reduce using rule 113 (Operand -> OperandName .)
    REMAINDER       reduce using rule 113 (Operand -> OperandName .)
    SHIFT_LEFT      reduce using rule 113 (Operand -> OperandName .)
    SHIFT_RIGHT     reduce using rule 113 (Operand -> OperandName .)
    AND             reduce using rule 113 (Operand -> OperandName .)
    AND_NOT         reduce using rule 113 (Operand -> OperandName .)
    RIGHT_BRACKET   reduce using rule 113 (Operand -> OperandName .)
    RIGHT_PARENTHESIS reduce using rule 113 (Operand -> OperandName .)
    COLON           reduce using rule 113 (Operand -> OperandName .)
    COMMA           reduce using rule 113 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 113 (Operand -> OperandName .)
    LEFT_BRACE      reduce using rule 113 (Operand -> OperandName .)
    ASSIGNMENT      reduce using rule 113 (Operand -> OperandName .)
    INCREMENT       reduce using rule 113 (Operand -> OperandName .)
    DECREMENT       reduce using rule 113 (Operand -> OperandName .)
    ARROW           reduce using rule 113 (Operand -> OperandName .)


state 46

    (114) Operand -> LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (3) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName

    LEFT_PARENTHESIS shift and go to state 115
    IDENT           shift and go to state 118
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_BRACKET    shift and go to state 120
    STRUCT          shift and go to state 17
    FUNCTION        shift and go to state 121
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59

    Expression                     shift and go to state 116
    Type                           shift and go to state 117
    UnaryExpr                      shift and go to state 31
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    QualifiedIdent                 shift and go to state 119
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    LiteralType                    shift and go to state 60

state 47

    (206) Conversion -> Type . LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> Type . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (172) ReceiverType -> Type .

    LEFT_PARENTHESIS shift and go to state 122
    PERIOD          reduce using rule 172 (ReceiverType -> Type .)


state 48

    (171) MethodExpr -> ReceiverType . PERIOD MethodName

    PERIOD          shift and go to state 123


state 49

    (115) Literal -> BasicLit .

    PERIOD          reduce using rule 115 (Literal -> BasicLit .)
    LEFT_BRACKET    reduce using rule 115 (Literal -> BasicLit .)
    LEFT_PARENTHESIS reduce using rule 115 (Literal -> BasicLit .)
    LOGICAL_OR      reduce using rule 115 (Literal -> BasicLit .)
    LOGICAL_AND     reduce using rule 115 (Literal -> BasicLit .)
    EQUAL           reduce using rule 115 (Literal -> BasicLit .)
    NOT_EQUAL       reduce using rule 115 (Literal -> BasicLit .)
    LESS_THAN       reduce using rule 115 (Literal -> BasicLit .)
    LESS_THAN_EQUAL reduce using rule 115 (Literal -> BasicLit .)
    GREATER_THAN    reduce using rule 115 (Literal -> BasicLit .)
    GREATER_THAN_EQUAL reduce using rule 115 (Literal -> BasicLit .)
    ADD             reduce using rule 115 (Literal -> BasicLit .)
    SUBTRACT        reduce using rule 115 (Literal -> BasicLit .)
    OR              reduce using rule 115 (Literal -> BasicLit .)
    XOR             reduce using rule 115 (Literal -> BasicLit .)
    MULTIPLY        reduce using rule 115 (Literal -> BasicLit .)
    QUOTIENT        reduce using rule 115 (Literal -> BasicLit .)
    REMAINDER       reduce using rule 115 (Literal -> BasicLit .)
    SHIFT_LEFT      reduce using rule 115 (Literal -> BasicLit .)
    SHIFT_RIGHT     reduce using rule 115 (Literal -> BasicLit .)
    AND             reduce using rule 115 (Literal -> BasicLit .)
    AND_NOT         reduce using rule 115 (Literal -> BasicLit .)
    RIGHT_BRACKET   reduce using rule 115 (Literal -> BasicLit .)
    RIGHT_PARENTHESIS reduce using rule 115 (Literal -> BasicLit .)
    COLON           reduce using rule 115 (Literal -> BasicLit .)
    COMMA           reduce using rule 115 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 115 (Literal -> BasicLit .)
    LEFT_BRACE      reduce using rule 115 (Literal -> BasicLit .)
    ASSIGNMENT      reduce using rule 115 (Literal -> BasicLit .)
    INCREMENT       reduce using rule 115 (Literal -> BasicLit .)
    DECREMENT       reduce using rule 115 (Literal -> BasicLit .)
    ARROW           reduce using rule 115 (Literal -> BasicLit .)


state 50

    (116) Literal -> CompositeLit .

    PERIOD          reduce using rule 116 (Literal -> CompositeLit .)
    LEFT_BRACKET    reduce using rule 116 (Literal -> CompositeLit .)
    LEFT_PARENTHESIS reduce using rule 116 (Literal -> CompositeLit .)
    LOGICAL_OR      reduce using rule 116 (Literal -> CompositeLit .)
    LOGICAL_AND     reduce using rule 116 (Literal -> CompositeLit .)
    EQUAL           reduce using rule 116 (Literal -> CompositeLit .)
    NOT_EQUAL       reduce using rule 116 (Literal -> CompositeLit .)
    LESS_THAN       reduce using rule 116 (Literal -> CompositeLit .)
    LESS_THAN_EQUAL reduce using rule 116 (Literal -> CompositeLit .)
    GREATER_THAN    reduce using rule 116 (Literal -> CompositeLit .)
    GREATER_THAN_EQUAL reduce using rule 116 (Literal -> CompositeLit .)
    ADD             reduce using rule 116 (Literal -> CompositeLit .)
    SUBTRACT        reduce using rule 116 (Literal -> CompositeLit .)
    OR              reduce using rule 116 (Literal -> CompositeLit .)
    XOR             reduce using rule 116 (Literal -> CompositeLit .)
    MULTIPLY        reduce using rule 116 (Literal -> CompositeLit .)
    QUOTIENT        reduce using rule 116 (Literal -> CompositeLit .)
    REMAINDER       reduce using rule 116 (Literal -> CompositeLit .)
    SHIFT_LEFT      reduce using rule 116 (Literal -> CompositeLit .)
    SHIFT_RIGHT     reduce using rule 116 (Literal -> CompositeLit .)
    AND             reduce using rule 116 (Literal -> CompositeLit .)
    AND_NOT         reduce using rule 116 (Literal -> CompositeLit .)
    RIGHT_BRACKET   reduce using rule 116 (Literal -> CompositeLit .)
    RIGHT_PARENTHESIS reduce using rule 116 (Literal -> CompositeLit .)
    COLON           reduce using rule 116 (Literal -> CompositeLit .)
    COMMA           reduce using rule 116 (Literal -> CompositeLit .)
    SEMICOLON       reduce using rule 116 (Literal -> CompositeLit .)
    LEFT_BRACE      reduce using rule 116 (Literal -> CompositeLit .)
    ASSIGNMENT      reduce using rule 116 (Literal -> CompositeLit .)
    INCREMENT       reduce using rule 116 (Literal -> CompositeLit .)
    DECREMENT       reduce using rule 116 (Literal -> CompositeLit .)
    ARROW           reduce using rule 116 (Literal -> CompositeLit .)


state 51

    (117) Literal -> FunctionLit .

    PERIOD          reduce using rule 117 (Literal -> FunctionLit .)
    LEFT_BRACKET    reduce using rule 117 (Literal -> FunctionLit .)
    LEFT_PARENTHESIS reduce using rule 117 (Literal -> FunctionLit .)
    LOGICAL_OR      reduce using rule 117 (Literal -> FunctionLit .)
    LOGICAL_AND     reduce using rule 117 (Literal -> FunctionLit .)
    EQUAL           reduce using rule 117 (Literal -> FunctionLit .)
    NOT_EQUAL       reduce using rule 117 (Literal -> FunctionLit .)
    LESS_THAN       reduce using rule 117 (Literal -> FunctionLit .)
    LESS_THAN_EQUAL reduce using rule 117 (Literal -> FunctionLit .)
    GREATER_THAN    reduce using rule 117 (Literal -> FunctionLit .)
    GREATER_THAN_EQUAL reduce using rule 117 (Literal -> FunctionLit .)
    ADD             reduce using rule 117 (Literal -> FunctionLit .)
    SUBTRACT        reduce using rule 117 (Literal -> FunctionLit .)
    OR              reduce using rule 117 (Literal -> FunctionLit .)
    XOR             reduce using rule 117 (Literal -> FunctionLit .)
    MULTIPLY        reduce using rule 117 (Literal -> FunctionLit .)
    QUOTIENT        reduce using rule 117 (Literal -> FunctionLit .)
    REMAINDER       reduce using rule 117 (Literal -> FunctionLit .)
    SHIFT_LEFT      reduce using rule 117 (Literal -> FunctionLit .)
    SHIFT_RIGHT     reduce using rule 117 (Literal -> FunctionLit .)
    AND             reduce using rule 117 (Literal -> FunctionLit .)
    AND_NOT         reduce using rule 117 (Literal -> FunctionLit .)
    RIGHT_BRACKET   reduce using rule 117 (Literal -> FunctionLit .)
    RIGHT_PARENTHESIS reduce using rule 117 (Literal -> FunctionLit .)
    COLON           reduce using rule 117 (Literal -> FunctionLit .)
    COMMA           reduce using rule 117 (Literal -> FunctionLit .)
    SEMICOLON       reduce using rule 117 (Literal -> FunctionLit .)
    LEFT_BRACE      reduce using rule 117 (Literal -> FunctionLit .)
    ASSIGNMENT      reduce using rule 117 (Literal -> FunctionLit .)
    INCREMENT       reduce using rule 117 (Literal -> FunctionLit .)
    DECREMENT       reduce using rule 117 (Literal -> FunctionLit .)
    ARROW           reduce using rule 117 (Literal -> FunctionLit .)


state 52

    (123) OperandName -> IDENT .
    (4) TypeName -> IDENT .
    (318) PackageName -> IDENT .

  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
    LOGICAL_OR      reduce using rule 123 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 123 (OperandName -> IDENT .)
    EQUAL           reduce using rule 123 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUBTRACT        reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MULTIPLY        reduce using rule 123 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 123 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)
    RIGHT_BRACKET   reduce using rule 123 (OperandName -> IDENT .)
    RIGHT_PARENTHESIS reduce using rule 123 (OperandName -> IDENT .)
    COLON           reduce using rule 123 (OperandName -> IDENT .)
    COMMA           reduce using rule 123 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 123 (OperandName -> IDENT .)
    LEFT_BRACE      reduce using rule 123 (OperandName -> IDENT .)
    ASSIGNMENT      reduce using rule 123 (OperandName -> IDENT .)
    INCREMENT       reduce using rule 123 (OperandName -> IDENT .)
    DECREMENT       reduce using rule 123 (OperandName -> IDENT .)
    ARROW           reduce using rule 123 (OperandName -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 4 (TypeName -> IDENT .)
    PERIOD          reduce using rule 4 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 4 (TypeName -> IDENT .)

  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 318 (PackageName -> IDENT .) ]


state 53

    (124) OperandName -> QualifiedIdent .
    (5) TypeName -> QualifiedIdent .

  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for PERIOD resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 5 (TypeName -> QualifiedIdent .)
    LOGICAL_OR      reduce using rule 124 (OperandName -> QualifiedIdent .)
    LOGICAL_AND     reduce using rule 124 (OperandName -> QualifiedIdent .)
    EQUAL           reduce using rule 124 (OperandName -> QualifiedIdent .)
    NOT_EQUAL       reduce using rule 124 (OperandName -> QualifiedIdent .)
    LESS_THAN       reduce using rule 124 (OperandName -> QualifiedIdent .)
    LESS_THAN_EQUAL reduce using rule 124 (OperandName -> QualifiedIdent .)
    GREATER_THAN    reduce using rule 124 (OperandName -> QualifiedIdent .)
    GREATER_THAN_EQUAL reduce using rule 124 (OperandName -> QualifiedIdent .)
    ADD             reduce using rule 124 (OperandName -> QualifiedIdent .)
    SUBTRACT        reduce using rule 124 (OperandName -> QualifiedIdent .)
    OR              reduce using rule 124 (OperandName -> QualifiedIdent .)
    XOR             reduce using rule 124 (OperandName -> QualifiedIdent .)
    MULTIPLY        reduce using rule 124 (OperandName -> QualifiedIdent .)
    QUOTIENT        reduce using rule 124 (OperandName -> QualifiedIdent .)
    REMAINDER       reduce using rule 124 (OperandName -> QualifiedIdent .)
    SHIFT_LEFT      reduce using rule 124 (OperandName -> QualifiedIdent .)
    SHIFT_RIGHT     reduce using rule 124 (OperandName -> QualifiedIdent .)
    AND             reduce using rule 124 (OperandName -> QualifiedIdent .)
    AND_NOT         reduce using rule 124 (OperandName -> QualifiedIdent .)
    RIGHT_BRACKET   reduce using rule 124 (OperandName -> QualifiedIdent .)
    RIGHT_PARENTHESIS reduce using rule 124 (OperandName -> QualifiedIdent .)
    COLON           reduce using rule 124 (OperandName -> QualifiedIdent .)
    COMMA           reduce using rule 124 (OperandName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 124 (OperandName -> QualifiedIdent .)
    LEFT_BRACE      reduce using rule 124 (OperandName -> QualifiedIdent .)
    ASSIGNMENT      reduce using rule 124 (OperandName -> QualifiedIdent .)
    INCREMENT       reduce using rule 124 (OperandName -> QualifiedIdent .)
    DECREMENT       reduce using rule 124 (OperandName -> QualifiedIdent .)
    ARROW           reduce using rule 124 (OperandName -> QualifiedIdent .)
    LEFT_PARENTHESIS reduce using rule 5 (TypeName -> QualifiedIdent .)
    PERIOD          reduce using rule 5 (TypeName -> QualifiedIdent .)
    LEFT_BRACKET    reduce using rule 5 (TypeName -> QualifiedIdent .)

  ! PERIOD          [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! LEFT_BRACKET    [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]


state 54

    (1) Type -> TypeName .
    (132) LiteralType -> TypeName .

  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 1 (Type -> TypeName .)
    LEFT_PARENTHESIS reduce using rule 1 (Type -> TypeName .)
    PERIOD          reduce using rule 1 (Type -> TypeName .)
    RIGHT_PARENTHESIS reduce using rule 1 (Type -> TypeName .)
    COMMA           reduce using rule 1 (Type -> TypeName .)
    ADD             reduce using rule 1 (Type -> TypeName .)
    SUBTRACT        reduce using rule 1 (Type -> TypeName .)
    NOT             reduce using rule 1 (Type -> TypeName .)
    XOR             reduce using rule 1 (Type -> TypeName .)
    MULTIPLY        reduce using rule 1 (Type -> TypeName .)
    AND             reduce using rule 1 (Type -> TypeName .)
    ARROW           reduce using rule 1 (Type -> TypeName .)
    IDENT           reduce using rule 1 (Type -> TypeName .)
    INT             reduce using rule 1 (Type -> TypeName .)
    FLOAT           reduce using rule 1 (Type -> TypeName .)
    IMAGINARY       reduce using rule 1 (Type -> TypeName .)
    RUNE            reduce using rule 1 (Type -> TypeName .)
    STRING          reduce using rule 1 (Type -> TypeName .)
    FUNCTION        reduce using rule 1 (Type -> TypeName .)
    LEFT_BRACKET    reduce using rule 1 (Type -> TypeName .)
    STRUCT          reduce using rule 1 (Type -> TypeName .)
    INTERFACE       reduce using rule 1 (Type -> TypeName .)
    MAP             reduce using rule 1 (Type -> TypeName .)
    CHAN            reduce using rule 1 (Type -> TypeName .)

  ! LEFT_BRACKET    [ reduce using rule 132 (LiteralType -> TypeName .) ]


state 55

    (118) BasicLit -> INT .

    PERIOD          reduce using rule 118 (BasicLit -> INT .)
    LEFT_BRACKET    reduce using rule 118 (BasicLit -> INT .)
    LEFT_PARENTHESIS reduce using rule 118 (BasicLit -> INT .)
    LOGICAL_OR      reduce using rule 118 (BasicLit -> INT .)
    LOGICAL_AND     reduce using rule 118 (BasicLit -> INT .)
    EQUAL           reduce using rule 118 (BasicLit -> INT .)
    NOT_EQUAL       reduce using rule 118 (BasicLit -> INT .)
    LESS_THAN       reduce using rule 118 (BasicLit -> INT .)
    LESS_THAN_EQUAL reduce using rule 118 (BasicLit -> INT .)
    GREATER_THAN    reduce using rule 118 (BasicLit -> INT .)
    GREATER_THAN_EQUAL reduce using rule 118 (BasicLit -> INT .)
    ADD             reduce using rule 118 (BasicLit -> INT .)
    SUBTRACT        reduce using rule 118 (BasicLit -> INT .)
    OR              reduce using rule 118 (BasicLit -> INT .)
    XOR             reduce using rule 118 (BasicLit -> INT .)
    MULTIPLY        reduce using rule 118 (BasicLit -> INT .)
    QUOTIENT        reduce using rule 118 (BasicLit -> INT .)
    REMAINDER       reduce using rule 118 (BasicLit -> INT .)
    SHIFT_LEFT      reduce using rule 118 (BasicLit -> INT .)
    SHIFT_RIGHT     reduce using rule 118 (BasicLit -> INT .)
    AND             reduce using rule 118 (BasicLit -> INT .)
    AND_NOT         reduce using rule 118 (BasicLit -> INT .)
    RIGHT_BRACKET   reduce using rule 118 (BasicLit -> INT .)
    RIGHT_PARENTHESIS reduce using rule 118 (BasicLit -> INT .)
    COLON           reduce using rule 118 (BasicLit -> INT .)
    COMMA           reduce using rule 118 (BasicLit -> INT .)
    SEMICOLON       reduce using rule 118 (BasicLit -> INT .)
    LEFT_BRACE      reduce using rule 118 (BasicLit -> INT .)
    ASSIGNMENT      reduce using rule 118 (BasicLit -> INT .)
    INCREMENT       reduce using rule 118 (BasicLit -> INT .)
    DECREMENT       reduce using rule 118 (BasicLit -> INT .)
    ARROW           reduce using rule 118 (BasicLit -> INT .)


state 56

    (119) BasicLit -> FLOAT .

    PERIOD          reduce using rule 119 (BasicLit -> FLOAT .)
    LEFT_BRACKET    reduce using rule 119 (BasicLit -> FLOAT .)
    LEFT_PARENTHESIS reduce using rule 119 (BasicLit -> FLOAT .)
    LOGICAL_OR      reduce using rule 119 (BasicLit -> FLOAT .)
    LOGICAL_AND     reduce using rule 119 (BasicLit -> FLOAT .)
    EQUAL           reduce using rule 119 (BasicLit -> FLOAT .)
    NOT_EQUAL       reduce using rule 119 (BasicLit -> FLOAT .)
    LESS_THAN       reduce using rule 119 (BasicLit -> FLOAT .)
    LESS_THAN_EQUAL reduce using rule 119 (BasicLit -> FLOAT .)
    GREATER_THAN    reduce using rule 119 (BasicLit -> FLOAT .)
    GREATER_THAN_EQUAL reduce using rule 119 (BasicLit -> FLOAT .)
    ADD             reduce using rule 119 (BasicLit -> FLOAT .)
    SUBTRACT        reduce using rule 119 (BasicLit -> FLOAT .)
    OR              reduce using rule 119 (BasicLit -> FLOAT .)
    XOR             reduce using rule 119 (BasicLit -> FLOAT .)
    MULTIPLY        reduce using rule 119 (BasicLit -> FLOAT .)
    QUOTIENT        reduce using rule 119 (BasicLit -> FLOAT .)
    REMAINDER       reduce using rule 119 (BasicLit -> FLOAT .)
    SHIFT_LEFT      reduce using rule 119 (BasicLit -> FLOAT .)
    SHIFT_RIGHT     reduce using rule 119 (BasicLit -> FLOAT .)
    AND             reduce using rule 119 (BasicLit -> FLOAT .)
    AND_NOT         reduce using rule 119 (BasicLit -> FLOAT .)
    RIGHT_BRACKET   reduce using rule 119 (BasicLit -> FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 119 (BasicLit -> FLOAT .)
    COLON           reduce using rule 119 (BasicLit -> FLOAT .)
    COMMA           reduce using rule 119 (BasicLit -> FLOAT .)
    SEMICOLON       reduce using rule 119 (BasicLit -> FLOAT .)
    LEFT_BRACE      reduce using rule 119 (BasicLit -> FLOAT .)
    ASSIGNMENT      reduce using rule 119 (BasicLit -> FLOAT .)
    INCREMENT       reduce using rule 119 (BasicLit -> FLOAT .)
    DECREMENT       reduce using rule 119 (BasicLit -> FLOAT .)
    ARROW           reduce using rule 119 (BasicLit -> FLOAT .)


state 57

    (120) BasicLit -> IMAGINARY .

    PERIOD          reduce using rule 120 (BasicLit -> IMAGINARY .)
    LEFT_BRACKET    reduce using rule 120 (BasicLit -> IMAGINARY .)
    LEFT_PARENTHESIS reduce using rule 120 (BasicLit -> IMAGINARY .)
    LOGICAL_OR      reduce using rule 120 (BasicLit -> IMAGINARY .)
    LOGICAL_AND     reduce using rule 120 (BasicLit -> IMAGINARY .)
    EQUAL           reduce using rule 120 (BasicLit -> IMAGINARY .)
    NOT_EQUAL       reduce using rule 120 (BasicLit -> IMAGINARY .)
    LESS_THAN       reduce using rule 120 (BasicLit -> IMAGINARY .)
    LESS_THAN_EQUAL reduce using rule 120 (BasicLit -> IMAGINARY .)
    GREATER_THAN    reduce using rule 120 (BasicLit -> IMAGINARY .)
    GREATER_THAN_EQUAL reduce using rule 120 (BasicLit -> IMAGINARY .)
    ADD             reduce using rule 120 (BasicLit -> IMAGINARY .)
    SUBTRACT        reduce using rule 120 (BasicLit -> IMAGINARY .)
    OR              reduce using rule 120 (BasicLit -> IMAGINARY .)
    XOR             reduce using rule 120 (BasicLit -> IMAGINARY .)
    MULTIPLY        reduce using rule 120 (BasicLit -> IMAGINARY .)
    QUOTIENT        reduce using rule 120 (BasicLit -> IMAGINARY .)
    REMAINDER       reduce using rule 120 (BasicLit -> IMAGINARY .)
    SHIFT_LEFT      reduce using rule 120 (BasicLit -> IMAGINARY .)
    SHIFT_RIGHT     reduce using rule 120 (BasicLit -> IMAGINARY .)
    AND             reduce using rule 120 (BasicLit -> IMAGINARY .)
    AND_NOT         reduce using rule 120 (BasicLit -> IMAGINARY .)
    RIGHT_BRACKET   reduce using rule 120 (BasicLit -> IMAGINARY .)
    RIGHT_PARENTHESIS reduce using rule 120 (BasicLit -> IMAGINARY .)
    COLON           reduce using rule 120 (BasicLit -> IMAGINARY .)
    COMMA           reduce using rule 120 (BasicLit -> IMAGINARY .)
    SEMICOLON       reduce using rule 120 (BasicLit -> IMAGINARY .)
    LEFT_BRACE      reduce using rule 120 (BasicLit -> IMAGINARY .)
    ASSIGNMENT      reduce using rule 120 (BasicLit -> IMAGINARY .)
    INCREMENT       reduce using rule 120 (BasicLit -> IMAGINARY .)
    DECREMENT       reduce using rule 120 (BasicLit -> IMAGINARY .)
    ARROW           reduce using rule 120 (BasicLit -> IMAGINARY .)


state 58

    (121) BasicLit -> RUNE .

    PERIOD          reduce using rule 121 (BasicLit -> RUNE .)
    LEFT_BRACKET    reduce using rule 121 (BasicLit -> RUNE .)
    LEFT_PARENTHESIS reduce using rule 121 (BasicLit -> RUNE .)
    LOGICAL_OR      reduce using rule 121 (BasicLit -> RUNE .)
    LOGICAL_AND     reduce using rule 121 (BasicLit -> RUNE .)
    EQUAL           reduce using rule 121 (BasicLit -> RUNE .)
    NOT_EQUAL       reduce using rule 121 (BasicLit -> RUNE .)
    LESS_THAN       reduce using rule 121 (BasicLit -> RUNE .)
    LESS_THAN_EQUAL reduce using rule 121 (BasicLit -> RUNE .)
    GREATER_THAN    reduce using rule 121 (BasicLit -> RUNE .)
    GREATER_THAN_EQUAL reduce using rule 121 (BasicLit -> RUNE .)
    ADD             reduce using rule 121 (BasicLit -> RUNE .)
    SUBTRACT        reduce using rule 121 (BasicLit -> RUNE .)
    OR              reduce using rule 121 (BasicLit -> RUNE .)
    XOR             reduce using rule 121 (BasicLit -> RUNE .)
    MULTIPLY        reduce using rule 121 (BasicLit -> RUNE .)
    QUOTIENT        reduce using rule 121 (BasicLit -> RUNE .)
    REMAINDER       reduce using rule 121 (BasicLit -> RUNE .)
    SHIFT_LEFT      reduce using rule 121 (BasicLit -> RUNE .)
    SHIFT_RIGHT     reduce using rule 121 (BasicLit -> RUNE .)
    AND             reduce using rule 121 (BasicLit -> RUNE .)
    AND_NOT         reduce using rule 121 (BasicLit -> RUNE .)
    RIGHT_BRACKET   reduce using rule 121 (BasicLit -> RUNE .)
    RIGHT_PARENTHESIS reduce using rule 121 (BasicLit -> RUNE .)
    COLON           reduce using rule 121 (BasicLit -> RUNE .)
    COMMA           reduce using rule 121 (BasicLit -> RUNE .)
    SEMICOLON       reduce using rule 121 (BasicLit -> RUNE .)
    LEFT_BRACE      reduce using rule 121 (BasicLit -> RUNE .)
    ASSIGNMENT      reduce using rule 121 (BasicLit -> RUNE .)
    INCREMENT       reduce using rule 121 (BasicLit -> RUNE .)
    DECREMENT       reduce using rule 121 (BasicLit -> RUNE .)
    ARROW           reduce using rule 121 (BasicLit -> RUNE .)


state 59

    (122) BasicLit -> STRING .

    PERIOD          reduce using rule 122 (BasicLit -> STRING .)
    LEFT_BRACKET    reduce using rule 122 (BasicLit -> STRING .)
    LEFT_PARENTHESIS reduce using rule 122 (BasicLit -> STRING .)
    LOGICAL_OR      reduce using rule 122 (BasicLit -> STRING .)
    LOGICAL_AND     reduce using rule 122 (BasicLit -> STRING .)
    EQUAL           reduce using rule 122 (BasicLit -> STRING .)
    NOT_EQUAL       reduce using rule 122 (BasicLit -> STRING .)
    LESS_THAN       reduce using rule 122 (BasicLit -> STRING .)
    LESS_THAN_EQUAL reduce using rule 122 (BasicLit -> STRING .)
    GREATER_THAN    reduce using rule 122 (BasicLit -> STRING .)
    GREATER_THAN_EQUAL reduce using rule 122 (BasicLit -> STRING .)
    ADD             reduce using rule 122 (BasicLit -> STRING .)
    SUBTRACT        reduce using rule 122 (BasicLit -> STRING .)
    OR              reduce using rule 122 (BasicLit -> STRING .)
    XOR             reduce using rule 122 (BasicLit -> STRING .)
    MULTIPLY        reduce using rule 122 (BasicLit -> STRING .)
    QUOTIENT        reduce using rule 122 (BasicLit -> STRING .)
    REMAINDER       reduce using rule 122 (BasicLit -> STRING .)
    SHIFT_LEFT      reduce using rule 122 (BasicLit -> STRING .)
    SHIFT_RIGHT     reduce using rule 122 (BasicLit -> STRING .)
    AND             reduce using rule 122 (BasicLit -> STRING .)
    AND_NOT         reduce using rule 122 (BasicLit -> STRING .)
    RIGHT_BRACKET   reduce using rule 122 (BasicLit -> STRING .)
    RIGHT_PARENTHESIS reduce using rule 122 (BasicLit -> STRING .)
    COLON           reduce using rule 122 (BasicLit -> STRING .)
    COMMA           reduce using rule 122 (BasicLit -> STRING .)
    SEMICOLON       reduce using rule 122 (BasicLit -> STRING .)
    LEFT_BRACE      reduce using rule 122 (BasicLit -> STRING .)
    ASSIGNMENT      reduce using rule 122 (BasicLit -> STRING .)
    INCREMENT       reduce using rule 122 (BasicLit -> STRING .)
    DECREMENT       reduce using rule 122 (BasicLit -> STRING .)
    ARROW           reduce using rule 122 (BasicLit -> STRING .)


state 60

    (126) CompositeLit -> LiteralType . LiteralValue
    (133) LiteralValue -> . LEFT_BRACKET ElementListPlus RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 125

    LiteralValue                   shift and go to state 124

state 61

    (149) FunctionLit -> FUNCTION . Signature FunctionBody
    (30) FunctionType -> FUNCTION . Signature
    (31) Signature -> . Parameters ResultPlus
    (36) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 71

    Signature                      shift and go to state 126
    Parameters                     shift and go to state 70

state 62

    (6) TypeLit -> ArrayType .
    (128) LiteralType -> ArrayType .

  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 6 (TypeLit -> ArrayType .)
    LEFT_PARENTHESIS reduce using rule 6 (TypeLit -> ArrayType .)
    PERIOD          reduce using rule 6 (TypeLit -> ArrayType .)
    RIGHT_PARENTHESIS reduce using rule 6 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 6 (TypeLit -> ArrayType .)
    ADD             reduce using rule 6 (TypeLit -> ArrayType .)
    SUBTRACT        reduce using rule 6 (TypeLit -> ArrayType .)
    NOT             reduce using rule 6 (TypeLit -> ArrayType .)
    XOR             reduce using rule 6 (TypeLit -> ArrayType .)
    MULTIPLY        reduce using rule 6 (TypeLit -> ArrayType .)
    AND             reduce using rule 6 (TypeLit -> ArrayType .)
    ARROW           reduce using rule 6 (TypeLit -> ArrayType .)
    IDENT           reduce using rule 6 (TypeLit -> ArrayType .)
    INT             reduce using rule 6 (TypeLit -> ArrayType .)
    FLOAT           reduce using rule 6 (TypeLit -> ArrayType .)
    IMAGINARY       reduce using rule 6 (TypeLit -> ArrayType .)
    RUNE            reduce using rule 6 (TypeLit -> ArrayType .)
    STRING          reduce using rule 6 (TypeLit -> ArrayType .)
    FUNCTION        reduce using rule 6 (TypeLit -> ArrayType .)
    LEFT_BRACKET    reduce using rule 6 (TypeLit -> ArrayType .)
    STRUCT          reduce using rule 6 (TypeLit -> ArrayType .)
    INTERFACE       reduce using rule 6 (TypeLit -> ArrayType .)
    MAP             reduce using rule 6 (TypeLit -> ArrayType .)
    CHAN            reduce using rule 6 (TypeLit -> ArrayType .)

  ! LEFT_BRACKET    [ reduce using rule 128 (LiteralType -> ArrayType .) ]


state 63

    (7) TypeLit -> StructType .
    (127) LiteralType -> StructType .

  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 7 (TypeLit -> StructType .)
    LEFT_PARENTHESIS reduce using rule 7 (TypeLit -> StructType .)
    PERIOD          reduce using rule 7 (TypeLit -> StructType .)
    RIGHT_PARENTHESIS reduce using rule 7 (TypeLit -> StructType .)
    COMMA           reduce using rule 7 (TypeLit -> StructType .)
    ADD             reduce using rule 7 (TypeLit -> StructType .)
    SUBTRACT        reduce using rule 7 (TypeLit -> StructType .)
    NOT             reduce using rule 7 (TypeLit -> StructType .)
    XOR             reduce using rule 7 (TypeLit -> StructType .)
    MULTIPLY        reduce using rule 7 (TypeLit -> StructType .)
    AND             reduce using rule 7 (TypeLit -> StructType .)
    ARROW           reduce using rule 7 (TypeLit -> StructType .)
    IDENT           reduce using rule 7 (TypeLit -> StructType .)
    INT             reduce using rule 7 (TypeLit -> StructType .)
    FLOAT           reduce using rule 7 (TypeLit -> StructType .)
    IMAGINARY       reduce using rule 7 (TypeLit -> StructType .)
    RUNE            reduce using rule 7 (TypeLit -> StructType .)
    STRING          reduce using rule 7 (TypeLit -> StructType .)
    FUNCTION        reduce using rule 7 (TypeLit -> StructType .)
    LEFT_BRACKET    reduce using rule 7 (TypeLit -> StructType .)
    STRUCT          reduce using rule 7 (TypeLit -> StructType .)
    INTERFACE       reduce using rule 7 (TypeLit -> StructType .)
    MAP             reduce using rule 7 (TypeLit -> StructType .)
    CHAN            reduce using rule 7 (TypeLit -> StructType .)

  ! LEFT_BRACKET    [ reduce using rule 127 (LiteralType -> StructType .) ]


state 64

    (11) TypeLit -> SliceType .
    (130) LiteralType -> SliceType .

  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 11 (TypeLit -> SliceType .)
    LEFT_PARENTHESIS reduce using rule 11 (TypeLit -> SliceType .)
    PERIOD          reduce using rule 11 (TypeLit -> SliceType .)
    RIGHT_PARENTHESIS reduce using rule 11 (TypeLit -> SliceType .)
    COMMA           reduce using rule 11 (TypeLit -> SliceType .)
    ADD             reduce using rule 11 (TypeLit -> SliceType .)
    SUBTRACT        reduce using rule 11 (TypeLit -> SliceType .)
    NOT             reduce using rule 11 (TypeLit -> SliceType .)
    XOR             reduce using rule 11 (TypeLit -> SliceType .)
    MULTIPLY        reduce using rule 11 (TypeLit -> SliceType .)
    AND             reduce using rule 11 (TypeLit -> SliceType .)
    ARROW           reduce using rule 11 (TypeLit -> SliceType .)
    IDENT           reduce using rule 11 (TypeLit -> SliceType .)
    INT             reduce using rule 11 (TypeLit -> SliceType .)
    FLOAT           reduce using rule 11 (TypeLit -> SliceType .)
    IMAGINARY       reduce using rule 11 (TypeLit -> SliceType .)
    RUNE            reduce using rule 11 (TypeLit -> SliceType .)
    STRING          reduce using rule 11 (TypeLit -> SliceType .)
    FUNCTION        reduce using rule 11 (TypeLit -> SliceType .)
    LEFT_BRACKET    reduce using rule 11 (TypeLit -> SliceType .)
    STRUCT          reduce using rule 11 (TypeLit -> SliceType .)
    INTERFACE       reduce using rule 11 (TypeLit -> SliceType .)
    MAP             reduce using rule 11 (TypeLit -> SliceType .)
    CHAN            reduce using rule 11 (TypeLit -> SliceType .)

  ! LEFT_BRACKET    [ reduce using rule 130 (LiteralType -> SliceType .) ]


state 65

    (12) TypeLit -> MapType .
    (131) LiteralType -> MapType .

  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 12 (TypeLit -> MapType .)
    LEFT_PARENTHESIS reduce using rule 12 (TypeLit -> MapType .)
    PERIOD          reduce using rule 12 (TypeLit -> MapType .)
    RIGHT_PARENTHESIS reduce using rule 12 (TypeLit -> MapType .)
    COMMA           reduce using rule 12 (TypeLit -> MapType .)
    ADD             reduce using rule 12 (TypeLit -> MapType .)
    SUBTRACT        reduce using rule 12 (TypeLit -> MapType .)
    NOT             reduce using rule 12 (TypeLit -> MapType .)
    XOR             reduce using rule 12 (TypeLit -> MapType .)
    MULTIPLY        reduce using rule 12 (TypeLit -> MapType .)
    AND             reduce using rule 12 (TypeLit -> MapType .)
    ARROW           reduce using rule 12 (TypeLit -> MapType .)
    IDENT           reduce using rule 12 (TypeLit -> MapType .)
    INT             reduce using rule 12 (TypeLit -> MapType .)
    FLOAT           reduce using rule 12 (TypeLit -> MapType .)
    IMAGINARY       reduce using rule 12 (TypeLit -> MapType .)
    RUNE            reduce using rule 12 (TypeLit -> MapType .)
    STRING          reduce using rule 12 (TypeLit -> MapType .)
    FUNCTION        reduce using rule 12 (TypeLit -> MapType .)
    LEFT_BRACKET    reduce using rule 12 (TypeLit -> MapType .)
    STRUCT          reduce using rule 12 (TypeLit -> MapType .)
    INTERFACE       reduce using rule 12 (TypeLit -> MapType .)
    MAP             reduce using rule 12 (TypeLit -> MapType .)
    CHAN            reduce using rule 12 (TypeLit -> MapType .)

  ! LEFT_BRACKET    [ reduce using rule 131 (LiteralType -> MapType .) ]


state 66

    (18) StructType -> STRUCT LEFT_BRACE . ManyFieldDecl RIGHT_BRACE
    (19) ManyFieldDecl -> . ManyFieldDecl FieldDecl SEMICOLON
    (20) ManyFieldDecl -> .

    RIGHT_BRACE     reduce using rule 20 (ManyFieldDecl -> .)
    IDENT           reduce using rule 20 (ManyFieldDecl -> .)
    MULTIPLY        reduce using rule 20 (ManyFieldDecl -> .)

    ManyFieldDecl                  shift and go to state 127

state 67

    (28) PointerType -> MULTIPLY BaseType .

    $end            reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    RIGHT_PARENTHESIS reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    LEFT_PARENTHESIS reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    PERIOD          reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    LEFT_BRACKET    reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    RIGHT_BRACKET   reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    COMMA           reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    ADD             reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    SUBTRACT        reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    NOT             reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    XOR             reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    MULTIPLY        reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    AND             reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    ARROW           reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    IDENT           reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    INT             reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    FLOAT           reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    IMAGINARY       reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    RUNE            reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    STRING          reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    FUNCTION        reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    STRUCT          reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    INTERFACE       reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    MAP             reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    CHAN            reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    SEMICOLON       reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    ASSIGNMENT      reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    COLON           reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    LEFT_BRACE      reduce using rule 28 (PointerType -> MULTIPLY BaseType .)


state 68

    (29) BaseType -> Type .

    $end            reduce using rule 29 (BaseType -> Type .)
    RIGHT_PARENTHESIS reduce using rule 29 (BaseType -> Type .)
    LEFT_PARENTHESIS reduce using rule 29 (BaseType -> Type .)
    PERIOD          reduce using rule 29 (BaseType -> Type .)
    LEFT_BRACKET    reduce using rule 29 (BaseType -> Type .)
    RIGHT_BRACKET   reduce using rule 29 (BaseType -> Type .)
    COMMA           reduce using rule 29 (BaseType -> Type .)
    ADD             reduce using rule 29 (BaseType -> Type .)
    SUBTRACT        reduce using rule 29 (BaseType -> Type .)
    NOT             reduce using rule 29 (BaseType -> Type .)
    XOR             reduce using rule 29 (BaseType -> Type .)
    MULTIPLY        reduce using rule 29 (BaseType -> Type .)
    AND             reduce using rule 29 (BaseType -> Type .)
    ARROW           reduce using rule 29 (BaseType -> Type .)
    IDENT           reduce using rule 29 (BaseType -> Type .)
    INT             reduce using rule 29 (BaseType -> Type .)
    FLOAT           reduce using rule 29 (BaseType -> Type .)
    IMAGINARY       reduce using rule 29 (BaseType -> Type .)
    RUNE            reduce using rule 29 (BaseType -> Type .)
    STRING          reduce using rule 29 (BaseType -> Type .)
    FUNCTION        reduce using rule 29 (BaseType -> Type .)
    STRUCT          reduce using rule 29 (BaseType -> Type .)
    INTERFACE       reduce using rule 29 (BaseType -> Type .)
    MAP             reduce using rule 29 (BaseType -> Type .)
    CHAN            reduce using rule 29 (BaseType -> Type .)
    SEMICOLON       reduce using rule 29 (BaseType -> Type .)
    ASSIGNMENT      reduce using rule 29 (BaseType -> Type .)
    COLON           reduce using rule 29 (BaseType -> Type .)
    LEFT_BRACE      reduce using rule 29 (BaseType -> Type .)


state 69

    (30) FunctionType -> FUNCTION Signature .

    $end            reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    RIGHT_PARENTHESIS reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    LEFT_PARENTHESIS reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    PERIOD          reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    LEFT_BRACKET    reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    RIGHT_BRACKET   reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    COMMA           reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    ADD             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    SUBTRACT        reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    NOT             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    XOR             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    MULTIPLY        reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    AND             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    ARROW           reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    IDENT           reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    INT             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    FLOAT           reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    IMAGINARY       reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    RUNE            reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    STRING          reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    FUNCTION        reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    STRUCT          reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    INTERFACE       reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    MAP             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    CHAN            reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    SEMICOLON       reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    ASSIGNMENT      reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    COLON           reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    LEFT_BRACE      reduce using rule 30 (FunctionType -> FUNCTION Signature .)


state 70

    (31) Signature -> Parameters . ResultPlus
    (32) ResultPlus -> . Result
    (33) ResultPlus -> .
    (34) Result -> . Parameters
    (35) Result -> . Type
    (36) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
    $end            reduce using rule 33 (ResultPlus -> .)
    RIGHT_PARENTHESIS reduce using rule 33 (ResultPlus -> .)
    PERIOD          reduce using rule 33 (ResultPlus -> .)
    RIGHT_BRACKET   reduce using rule 33 (ResultPlus -> .)
    COMMA           reduce using rule 33 (ResultPlus -> .)
    ADD             reduce using rule 33 (ResultPlus -> .)
    SUBTRACT        reduce using rule 33 (ResultPlus -> .)
    NOT             reduce using rule 33 (ResultPlus -> .)
    XOR             reduce using rule 33 (ResultPlus -> .)
    AND             reduce using rule 33 (ResultPlus -> .)
    INT             reduce using rule 33 (ResultPlus -> .)
    FLOAT           reduce using rule 33 (ResultPlus -> .)
    IMAGINARY       reduce using rule 33 (ResultPlus -> .)
    RUNE            reduce using rule 33 (ResultPlus -> .)
    STRING          reduce using rule 33 (ResultPlus -> .)
    SEMICOLON       reduce using rule 33 (ResultPlus -> .)
    ASSIGNMENT      reduce using rule 33 (ResultPlus -> .)
    COLON           reduce using rule 33 (ResultPlus -> .)
    LEFT_BRACE      reduce using rule 33 (ResultPlus -> .)
    LEFT_PARENTHESIS shift and go to state 132
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

  ! LEFT_PARENTHESIS [ reduce using rule 33 (ResultPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 33 (ResultPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 33 (ResultPlus -> .) ]
  ! ARROW           [ reduce using rule 33 (ResultPlus -> .) ]
  ! IDENT           [ reduce using rule 33 (ResultPlus -> .) ]
  ! FUNCTION        [ reduce using rule 33 (ResultPlus -> .) ]
  ! STRUCT          [ reduce using rule 33 (ResultPlus -> .) ]
  ! INTERFACE       [ reduce using rule 33 (ResultPlus -> .) ]
  ! MAP             [ reduce using rule 33 (ResultPlus -> .) ]
  ! CHAN            [ reduce using rule 33 (ResultPlus -> .) ]

    Parameters                     shift and go to state 128
    ResultPlus                     shift and go to state 129
    Result                         shift and go to state 130
    Type                           shift and go to state 131
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 71

    (36) Parameters -> LEFT_PARENTHESIS . ParameterListPlus RIGHT_PARENTHESIS
    (37) ParameterListPlus -> . ParameterList COMMA
    (38) ParameterListPlus -> . ParameterList
    (39) ParameterListPlus -> .
    (40) ParameterList -> . ParameterDecl
    (41) ParameterList -> . ParameterDecl COMMA ParameterList
    (42) ParameterDecl -> . IdentifierListPlus EllipsisPlus Type
    (43) IdentifierListPlus -> . IdentifierList
    (44) IdentifierListPlus -> .
    (80) IdentifierList -> . IDENT IdentStar

  ! shift/reduce conflict for IDENT resolved as shift
    RIGHT_PARENTHESIS reduce using rule 39 (ParameterListPlus -> .)
    ELLIPSIS        reduce using rule 44 (IdentifierListPlus -> .)
    LEFT_PARENTHESIS reduce using rule 44 (IdentifierListPlus -> .)
    LEFT_BRACKET    reduce using rule 44 (IdentifierListPlus -> .)
    STRUCT          reduce using rule 44 (IdentifierListPlus -> .)
    MULTIPLY        reduce using rule 44 (IdentifierListPlus -> .)
    FUNCTION        reduce using rule 44 (IdentifierListPlus -> .)
    INTERFACE       reduce using rule 44 (IdentifierListPlus -> .)
    MAP             reduce using rule 44 (IdentifierListPlus -> .)
    CHAN            reduce using rule 44 (IdentifierListPlus -> .)
    ARROW           reduce using rule 44 (IdentifierListPlus -> .)
    IDENT           shift and go to state 138

  ! IDENT           [ reduce using rule 44 (IdentifierListPlus -> .) ]

    ParameterListPlus              shift and go to state 133
    ParameterList                  shift and go to state 134
    ParameterDecl                  shift and go to state 135
    IdentifierListPlus             shift and go to state 136
    IdentifierList                 shift and go to state 137

state 72

    (47) InterfaceType -> INTERFACE LEFT_BRACE . InterfaceTypePlus RIGHT_BRACE
    (48) InterfaceTypePlus -> . InterfaceTypePlus InterfaceTypeMethod SEMICOLON
    (49) InterfaceTypePlus -> .

    RIGHT_BRACE     reduce using rule 49 (InterfaceTypePlus -> .)
    IDENT           reduce using rule 49 (InterfaceTypePlus -> .)

    InterfaceTypePlus              shift and go to state 139

state 73

    (55) MapType -> MAP LEFT_BRACKET . KeyType RIGHT_BRACKET ElementType
    (56) KeyType -> . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    KeyType                        shift and go to state 140
    Type                           shift and go to state 141
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 74

    (57) ChannelType -> ChannelTypeOr ElementType .

    $end            reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    RIGHT_PARENTHESIS reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    LEFT_PARENTHESIS reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    PERIOD          reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    LEFT_BRACKET    reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    RIGHT_BRACKET   reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    COMMA           reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    ADD             reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    SUBTRACT        reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    NOT             reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    XOR             reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    MULTIPLY        reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    AND             reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    ARROW           reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    IDENT           reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    INT             reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    FLOAT           reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    IMAGINARY       reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    RUNE            reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    STRING          reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    FUNCTION        reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    STRUCT          reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    INTERFACE       reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    MAP             reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    CHAN            reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    SEMICOLON       reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    ASSIGNMENT      reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    COLON           reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)
    LEFT_BRACE      reduce using rule 57 (ChannelType -> ChannelTypeOr ElementType .)


state 75

    (16) ElementType -> Type .

    $end            reduce using rule 16 (ElementType -> Type .)
    RIGHT_PARENTHESIS reduce using rule 16 (ElementType -> Type .)
    LEFT_PARENTHESIS reduce using rule 16 (ElementType -> Type .)
    PERIOD          reduce using rule 16 (ElementType -> Type .)
    LEFT_BRACKET    reduce using rule 16 (ElementType -> Type .)
    RIGHT_BRACKET   reduce using rule 16 (ElementType -> Type .)
    COMMA           reduce using rule 16 (ElementType -> Type .)
    ADD             reduce using rule 16 (ElementType -> Type .)
    SUBTRACT        reduce using rule 16 (ElementType -> Type .)
    NOT             reduce using rule 16 (ElementType -> Type .)
    XOR             reduce using rule 16 (ElementType -> Type .)
    MULTIPLY        reduce using rule 16 (ElementType -> Type .)
    AND             reduce using rule 16 (ElementType -> Type .)
    ARROW           reduce using rule 16 (ElementType -> Type .)
    IDENT           reduce using rule 16 (ElementType -> Type .)
    INT             reduce using rule 16 (ElementType -> Type .)
    FLOAT           reduce using rule 16 (ElementType -> Type .)
    IMAGINARY       reduce using rule 16 (ElementType -> Type .)
    RUNE            reduce using rule 16 (ElementType -> Type .)
    STRING          reduce using rule 16 (ElementType -> Type .)
    FUNCTION        reduce using rule 16 (ElementType -> Type .)
    STRUCT          reduce using rule 16 (ElementType -> Type .)
    INTERFACE       reduce using rule 16 (ElementType -> Type .)
    MAP             reduce using rule 16 (ElementType -> Type .)
    CHAN            reduce using rule 16 (ElementType -> Type .)
    SEMICOLON       reduce using rule 16 (ElementType -> Type .)
    ASSIGNMENT      reduce using rule 16 (ElementType -> Type .)
    COLON           reduce using rule 16 (ElementType -> Type .)
    LEFT_BRACE      reduce using rule 16 (ElementType -> Type .)


state 76

    (59) ChannelTypeOr -> CHAN ARROW .

    LEFT_PARENTHESIS reduce using rule 59 (ChannelTypeOr -> CHAN ARROW .)
    IDENT           reduce using rule 59 (ChannelTypeOr -> CHAN ARROW .)
    LEFT_BRACKET    reduce using rule 59 (ChannelTypeOr -> CHAN ARROW .)
    STRUCT          reduce using rule 59 (ChannelTypeOr -> CHAN ARROW .)
    MULTIPLY        reduce using rule 59 (ChannelTypeOr -> CHAN ARROW .)
    FUNCTION        reduce using rule 59 (ChannelTypeOr -> CHAN ARROW .)
    INTERFACE       reduce using rule 59 (ChannelTypeOr -> CHAN ARROW .)
    MAP             reduce using rule 59 (ChannelTypeOr -> CHAN ARROW .)
    CHAN            reduce using rule 59 (ChannelTypeOr -> CHAN ARROW .)
    ARROW           reduce using rule 59 (ChannelTypeOr -> CHAN ARROW .)


state 77

    (60) ChannelTypeOr -> ARROW CHAN .

    LEFT_PARENTHESIS reduce using rule 60 (ChannelTypeOr -> ARROW CHAN .)
    IDENT           reduce using rule 60 (ChannelTypeOr -> ARROW CHAN .)
    LEFT_BRACKET    reduce using rule 60 (ChannelTypeOr -> ARROW CHAN .)
    STRUCT          reduce using rule 60 (ChannelTypeOr -> ARROW CHAN .)
    MULTIPLY        reduce using rule 60 (ChannelTypeOr -> ARROW CHAN .)
    FUNCTION        reduce using rule 60 (ChannelTypeOr -> ARROW CHAN .)
    INTERFACE       reduce using rule 60 (ChannelTypeOr -> ARROW CHAN .)
    MAP             reduce using rule 60 (ChannelTypeOr -> ARROW CHAN .)
    CHAN            reduce using rule 60 (ChannelTypeOr -> ARROW CHAN .)
    ARROW           reduce using rule 60 (ChannelTypeOr -> ARROW CHAN .)


state 78

    (3) Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .

    $end            reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    PERIOD          reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ADD             reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    NOT             reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    XOR             reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    AND             reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    IDENT           reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    INT             reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    FLOAT           reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    IMAGINARY       reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RUNE            reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    STRING          reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    FUNCTION        reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    STRUCT          reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    INTERFACE       reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    MAP             reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    CHAN            reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    COLON           reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 3 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)


state 79

    (125) QualifiedIdent -> PackageName PERIOD IDENT .

    $end            reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    RIGHT_PARENTHESIS reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    PERIOD          reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    LEFT_BRACKET    reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    LEFT_PARENTHESIS reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    LOGICAL_OR      reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    LOGICAL_AND     reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    EQUAL           reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    NOT_EQUAL       reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    LESS_THAN       reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    LESS_THAN_EQUAL reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    GREATER_THAN    reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    GREATER_THAN_EQUAL reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    ADD             reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    SUBTRACT        reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    OR              reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    XOR             reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    MULTIPLY        reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    QUOTIENT        reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    REMAINDER       reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    SHIFT_LEFT      reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    SHIFT_RIGHT     reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    AND             reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    AND_NOT         reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    RIGHT_BRACKET   reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    COMMA           reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    NOT             reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    ARROW           reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    IDENT           reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    INT             reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    FLOAT           reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    IMAGINARY       reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    RUNE            reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    STRING          reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    FUNCTION        reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    STRUCT          reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    INTERFACE       reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    MAP             reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    CHAN            reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    SEMICOLON       reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    ASSIGNMENT      reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    COLON           reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    LEFT_BRACE      reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    INCREMENT       reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)
    DECREMENT       reduce using rule 125 (QualifiedIdent -> PackageName PERIOD IDENT .)


state 80

    (129) LiteralType -> LEFT_BRACKET ELLIPSIS . RIGHT_BRACKET ElementType

    RIGHT_BRACKET   shift and go to state 142


state 81

    (14) ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET . ElementType
    (16) ElementType -> . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    ElementType                    shift and go to state 143
    Type                           shift and go to state 75
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 82

    (17) SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .

    $end            reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    RIGHT_PARENTHESIS reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    LEFT_PARENTHESIS reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    PERIOD          reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    LEFT_BRACKET    reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    RIGHT_BRACKET   reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    COMMA           reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    ADD             reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    SUBTRACT        reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    NOT             reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    XOR             reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    MULTIPLY        reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    AND             reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    ARROW           reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    IDENT           reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    INT             reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    FLOAT           reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    IMAGINARY       reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    RUNE            reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    STRING          reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    FUNCTION        reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    STRUCT          reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    INTERFACE       reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    MAP             reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    CHAN            reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    SEMICOLON       reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    ASSIGNMENT      reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    COLON           reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)
    LEFT_BRACE      reduce using rule 17 (SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType .)


state 83

    (174) Expression -> Expression binary_op . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Expression                     shift and go to state 144
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 84

    (177) binary_op -> LOGICAL_OR .

    ADD             reduce using rule 177 (binary_op -> LOGICAL_OR .)
    SUBTRACT        reduce using rule 177 (binary_op -> LOGICAL_OR .)
    NOT             reduce using rule 177 (binary_op -> LOGICAL_OR .)
    XOR             reduce using rule 177 (binary_op -> LOGICAL_OR .)
    MULTIPLY        reduce using rule 177 (binary_op -> LOGICAL_OR .)
    AND             reduce using rule 177 (binary_op -> LOGICAL_OR .)
    ARROW           reduce using rule 177 (binary_op -> LOGICAL_OR .)
    LEFT_PARENTHESIS reduce using rule 177 (binary_op -> LOGICAL_OR .)
    IDENT           reduce using rule 177 (binary_op -> LOGICAL_OR .)
    INT             reduce using rule 177 (binary_op -> LOGICAL_OR .)
    FLOAT           reduce using rule 177 (binary_op -> LOGICAL_OR .)
    IMAGINARY       reduce using rule 177 (binary_op -> LOGICAL_OR .)
    RUNE            reduce using rule 177 (binary_op -> LOGICAL_OR .)
    STRING          reduce using rule 177 (binary_op -> LOGICAL_OR .)
    FUNCTION        reduce using rule 177 (binary_op -> LOGICAL_OR .)
    LEFT_BRACKET    reduce using rule 177 (binary_op -> LOGICAL_OR .)
    STRUCT          reduce using rule 177 (binary_op -> LOGICAL_OR .)
    INTERFACE       reduce using rule 177 (binary_op -> LOGICAL_OR .)
    MAP             reduce using rule 177 (binary_op -> LOGICAL_OR .)
    CHAN            reduce using rule 177 (binary_op -> LOGICAL_OR .)


state 85

    (178) binary_op -> LOGICAL_AND .

    ADD             reduce using rule 178 (binary_op -> LOGICAL_AND .)
    SUBTRACT        reduce using rule 178 (binary_op -> LOGICAL_AND .)
    NOT             reduce using rule 178 (binary_op -> LOGICAL_AND .)
    XOR             reduce using rule 178 (binary_op -> LOGICAL_AND .)
    MULTIPLY        reduce using rule 178 (binary_op -> LOGICAL_AND .)
    AND             reduce using rule 178 (binary_op -> LOGICAL_AND .)
    ARROW           reduce using rule 178 (binary_op -> LOGICAL_AND .)
    LEFT_PARENTHESIS reduce using rule 178 (binary_op -> LOGICAL_AND .)
    IDENT           reduce using rule 178 (binary_op -> LOGICAL_AND .)
    INT             reduce using rule 178 (binary_op -> LOGICAL_AND .)
    FLOAT           reduce using rule 178 (binary_op -> LOGICAL_AND .)
    IMAGINARY       reduce using rule 178 (binary_op -> LOGICAL_AND .)
    RUNE            reduce using rule 178 (binary_op -> LOGICAL_AND .)
    STRING          reduce using rule 178 (binary_op -> LOGICAL_AND .)
    FUNCTION        reduce using rule 178 (binary_op -> LOGICAL_AND .)
    LEFT_BRACKET    reduce using rule 178 (binary_op -> LOGICAL_AND .)
    STRUCT          reduce using rule 178 (binary_op -> LOGICAL_AND .)
    INTERFACE       reduce using rule 178 (binary_op -> LOGICAL_AND .)
    MAP             reduce using rule 178 (binary_op -> LOGICAL_AND .)
    CHAN            reduce using rule 178 (binary_op -> LOGICAL_AND .)


state 86

    (179) binary_op -> rel_op .

    ADD             reduce using rule 179 (binary_op -> rel_op .)
    SUBTRACT        reduce using rule 179 (binary_op -> rel_op .)
    NOT             reduce using rule 179 (binary_op -> rel_op .)
    XOR             reduce using rule 179 (binary_op -> rel_op .)
    MULTIPLY        reduce using rule 179 (binary_op -> rel_op .)
    AND             reduce using rule 179 (binary_op -> rel_op .)
    ARROW           reduce using rule 179 (binary_op -> rel_op .)
    LEFT_PARENTHESIS reduce using rule 179 (binary_op -> rel_op .)
    IDENT           reduce using rule 179 (binary_op -> rel_op .)
    INT             reduce using rule 179 (binary_op -> rel_op .)
    FLOAT           reduce using rule 179 (binary_op -> rel_op .)
    IMAGINARY       reduce using rule 179 (binary_op -> rel_op .)
    RUNE            reduce using rule 179 (binary_op -> rel_op .)
    STRING          reduce using rule 179 (binary_op -> rel_op .)
    FUNCTION        reduce using rule 179 (binary_op -> rel_op .)
    LEFT_BRACKET    reduce using rule 179 (binary_op -> rel_op .)
    STRUCT          reduce using rule 179 (binary_op -> rel_op .)
    INTERFACE       reduce using rule 179 (binary_op -> rel_op .)
    MAP             reduce using rule 179 (binary_op -> rel_op .)
    CHAN            reduce using rule 179 (binary_op -> rel_op .)


state 87

    (180) binary_op -> add_op .

    ADD             reduce using rule 180 (binary_op -> add_op .)
    SUBTRACT        reduce using rule 180 (binary_op -> add_op .)
    NOT             reduce using rule 180 (binary_op -> add_op .)
    XOR             reduce using rule 180 (binary_op -> add_op .)
    MULTIPLY        reduce using rule 180 (binary_op -> add_op .)
    AND             reduce using rule 180 (binary_op -> add_op .)
    ARROW           reduce using rule 180 (binary_op -> add_op .)
    LEFT_PARENTHESIS reduce using rule 180 (binary_op -> add_op .)
    IDENT           reduce using rule 180 (binary_op -> add_op .)
    INT             reduce using rule 180 (binary_op -> add_op .)
    FLOAT           reduce using rule 180 (binary_op -> add_op .)
    IMAGINARY       reduce using rule 180 (binary_op -> add_op .)
    RUNE            reduce using rule 180 (binary_op -> add_op .)
    STRING          reduce using rule 180 (binary_op -> add_op .)
    FUNCTION        reduce using rule 180 (binary_op -> add_op .)
    LEFT_BRACKET    reduce using rule 180 (binary_op -> add_op .)
    STRUCT          reduce using rule 180 (binary_op -> add_op .)
    INTERFACE       reduce using rule 180 (binary_op -> add_op .)
    MAP             reduce using rule 180 (binary_op -> add_op .)
    CHAN            reduce using rule 180 (binary_op -> add_op .)


state 88

    (181) binary_op -> mul_op .

    ADD             reduce using rule 181 (binary_op -> mul_op .)
    SUBTRACT        reduce using rule 181 (binary_op -> mul_op .)
    NOT             reduce using rule 181 (binary_op -> mul_op .)
    XOR             reduce using rule 181 (binary_op -> mul_op .)
    MULTIPLY        reduce using rule 181 (binary_op -> mul_op .)
    AND             reduce using rule 181 (binary_op -> mul_op .)
    ARROW           reduce using rule 181 (binary_op -> mul_op .)
    LEFT_PARENTHESIS reduce using rule 181 (binary_op -> mul_op .)
    IDENT           reduce using rule 181 (binary_op -> mul_op .)
    INT             reduce using rule 181 (binary_op -> mul_op .)
    FLOAT           reduce using rule 181 (binary_op -> mul_op .)
    IMAGINARY       reduce using rule 181 (binary_op -> mul_op .)
    RUNE            reduce using rule 181 (binary_op -> mul_op .)
    STRING          reduce using rule 181 (binary_op -> mul_op .)
    FUNCTION        reduce using rule 181 (binary_op -> mul_op .)
    LEFT_BRACKET    reduce using rule 181 (binary_op -> mul_op .)
    STRUCT          reduce using rule 181 (binary_op -> mul_op .)
    INTERFACE       reduce using rule 181 (binary_op -> mul_op .)
    MAP             reduce using rule 181 (binary_op -> mul_op .)
    CHAN            reduce using rule 181 (binary_op -> mul_op .)


state 89

    (182) rel_op -> EQUAL .

    ADD             reduce using rule 182 (rel_op -> EQUAL .)
    SUBTRACT        reduce using rule 182 (rel_op -> EQUAL .)
    NOT             reduce using rule 182 (rel_op -> EQUAL .)
    XOR             reduce using rule 182 (rel_op -> EQUAL .)
    MULTIPLY        reduce using rule 182 (rel_op -> EQUAL .)
    AND             reduce using rule 182 (rel_op -> EQUAL .)
    ARROW           reduce using rule 182 (rel_op -> EQUAL .)
    LEFT_PARENTHESIS reduce using rule 182 (rel_op -> EQUAL .)
    IDENT           reduce using rule 182 (rel_op -> EQUAL .)
    INT             reduce using rule 182 (rel_op -> EQUAL .)
    FLOAT           reduce using rule 182 (rel_op -> EQUAL .)
    IMAGINARY       reduce using rule 182 (rel_op -> EQUAL .)
    RUNE            reduce using rule 182 (rel_op -> EQUAL .)
    STRING          reduce using rule 182 (rel_op -> EQUAL .)
    FUNCTION        reduce using rule 182 (rel_op -> EQUAL .)
    LEFT_BRACKET    reduce using rule 182 (rel_op -> EQUAL .)
    STRUCT          reduce using rule 182 (rel_op -> EQUAL .)
    INTERFACE       reduce using rule 182 (rel_op -> EQUAL .)
    MAP             reduce using rule 182 (rel_op -> EQUAL .)
    CHAN            reduce using rule 182 (rel_op -> EQUAL .)


state 90

    (183) rel_op -> NOT_EQUAL .

    ADD             reduce using rule 183 (rel_op -> NOT_EQUAL .)
    SUBTRACT        reduce using rule 183 (rel_op -> NOT_EQUAL .)
    NOT             reduce using rule 183 (rel_op -> NOT_EQUAL .)
    XOR             reduce using rule 183 (rel_op -> NOT_EQUAL .)
    MULTIPLY        reduce using rule 183 (rel_op -> NOT_EQUAL .)
    AND             reduce using rule 183 (rel_op -> NOT_EQUAL .)
    ARROW           reduce using rule 183 (rel_op -> NOT_EQUAL .)
    LEFT_PARENTHESIS reduce using rule 183 (rel_op -> NOT_EQUAL .)
    IDENT           reduce using rule 183 (rel_op -> NOT_EQUAL .)
    INT             reduce using rule 183 (rel_op -> NOT_EQUAL .)
    FLOAT           reduce using rule 183 (rel_op -> NOT_EQUAL .)
    IMAGINARY       reduce using rule 183 (rel_op -> NOT_EQUAL .)
    RUNE            reduce using rule 183 (rel_op -> NOT_EQUAL .)
    STRING          reduce using rule 183 (rel_op -> NOT_EQUAL .)
    FUNCTION        reduce using rule 183 (rel_op -> NOT_EQUAL .)
    LEFT_BRACKET    reduce using rule 183 (rel_op -> NOT_EQUAL .)
    STRUCT          reduce using rule 183 (rel_op -> NOT_EQUAL .)
    INTERFACE       reduce using rule 183 (rel_op -> NOT_EQUAL .)
    MAP             reduce using rule 183 (rel_op -> NOT_EQUAL .)
    CHAN            reduce using rule 183 (rel_op -> NOT_EQUAL .)


state 91

    (184) rel_op -> LESS_THAN .

    ADD             reduce using rule 184 (rel_op -> LESS_THAN .)
    SUBTRACT        reduce using rule 184 (rel_op -> LESS_THAN .)
    NOT             reduce using rule 184 (rel_op -> LESS_THAN .)
    XOR             reduce using rule 184 (rel_op -> LESS_THAN .)
    MULTIPLY        reduce using rule 184 (rel_op -> LESS_THAN .)
    AND             reduce using rule 184 (rel_op -> LESS_THAN .)
    ARROW           reduce using rule 184 (rel_op -> LESS_THAN .)
    LEFT_PARENTHESIS reduce using rule 184 (rel_op -> LESS_THAN .)
    IDENT           reduce using rule 184 (rel_op -> LESS_THAN .)
    INT             reduce using rule 184 (rel_op -> LESS_THAN .)
    FLOAT           reduce using rule 184 (rel_op -> LESS_THAN .)
    IMAGINARY       reduce using rule 184 (rel_op -> LESS_THAN .)
    RUNE            reduce using rule 184 (rel_op -> LESS_THAN .)
    STRING          reduce using rule 184 (rel_op -> LESS_THAN .)
    FUNCTION        reduce using rule 184 (rel_op -> LESS_THAN .)
    LEFT_BRACKET    reduce using rule 184 (rel_op -> LESS_THAN .)
    STRUCT          reduce using rule 184 (rel_op -> LESS_THAN .)
    INTERFACE       reduce using rule 184 (rel_op -> LESS_THAN .)
    MAP             reduce using rule 184 (rel_op -> LESS_THAN .)
    CHAN            reduce using rule 184 (rel_op -> LESS_THAN .)


state 92

    (185) rel_op -> LESS_THAN_EQUAL .

    ADD             reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    SUBTRACT        reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    NOT             reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    XOR             reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    MULTIPLY        reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    AND             reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    ARROW           reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    LEFT_PARENTHESIS reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    IDENT           reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    INT             reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    FLOAT           reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    IMAGINARY       reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    RUNE            reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    STRING          reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    FUNCTION        reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    LEFT_BRACKET    reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    STRUCT          reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    INTERFACE       reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    MAP             reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)
    CHAN            reduce using rule 185 (rel_op -> LESS_THAN_EQUAL .)


state 93

    (186) rel_op -> GREATER_THAN .

    ADD             reduce using rule 186 (rel_op -> GREATER_THAN .)
    SUBTRACT        reduce using rule 186 (rel_op -> GREATER_THAN .)
    NOT             reduce using rule 186 (rel_op -> GREATER_THAN .)
    XOR             reduce using rule 186 (rel_op -> GREATER_THAN .)
    MULTIPLY        reduce using rule 186 (rel_op -> GREATER_THAN .)
    AND             reduce using rule 186 (rel_op -> GREATER_THAN .)
    ARROW           reduce using rule 186 (rel_op -> GREATER_THAN .)
    LEFT_PARENTHESIS reduce using rule 186 (rel_op -> GREATER_THAN .)
    IDENT           reduce using rule 186 (rel_op -> GREATER_THAN .)
    INT             reduce using rule 186 (rel_op -> GREATER_THAN .)
    FLOAT           reduce using rule 186 (rel_op -> GREATER_THAN .)
    IMAGINARY       reduce using rule 186 (rel_op -> GREATER_THAN .)
    RUNE            reduce using rule 186 (rel_op -> GREATER_THAN .)
    STRING          reduce using rule 186 (rel_op -> GREATER_THAN .)
    FUNCTION        reduce using rule 186 (rel_op -> GREATER_THAN .)
    LEFT_BRACKET    reduce using rule 186 (rel_op -> GREATER_THAN .)
    STRUCT          reduce using rule 186 (rel_op -> GREATER_THAN .)
    INTERFACE       reduce using rule 186 (rel_op -> GREATER_THAN .)
    MAP             reduce using rule 186 (rel_op -> GREATER_THAN .)
    CHAN            reduce using rule 186 (rel_op -> GREATER_THAN .)


state 94

    (187) rel_op -> GREATER_THAN_EQUAL .

    ADD             reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    SUBTRACT        reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    NOT             reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    XOR             reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    MULTIPLY        reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    AND             reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    ARROW           reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    LEFT_PARENTHESIS reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    IDENT           reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    INT             reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    FLOAT           reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    IMAGINARY       reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    RUNE            reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    STRING          reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    FUNCTION        reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    LEFT_BRACKET    reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    STRUCT          reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    INTERFACE       reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    MAP             reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)
    CHAN            reduce using rule 187 (rel_op -> GREATER_THAN_EQUAL .)


state 95

    (188) add_op -> ADD .

    ADD             reduce using rule 188 (add_op -> ADD .)
    SUBTRACT        reduce using rule 188 (add_op -> ADD .)
    NOT             reduce using rule 188 (add_op -> ADD .)
    XOR             reduce using rule 188 (add_op -> ADD .)
    MULTIPLY        reduce using rule 188 (add_op -> ADD .)
    AND             reduce using rule 188 (add_op -> ADD .)
    ARROW           reduce using rule 188 (add_op -> ADD .)
    LEFT_PARENTHESIS reduce using rule 188 (add_op -> ADD .)
    IDENT           reduce using rule 188 (add_op -> ADD .)
    INT             reduce using rule 188 (add_op -> ADD .)
    FLOAT           reduce using rule 188 (add_op -> ADD .)
    IMAGINARY       reduce using rule 188 (add_op -> ADD .)
    RUNE            reduce using rule 188 (add_op -> ADD .)
    STRING          reduce using rule 188 (add_op -> ADD .)
    FUNCTION        reduce using rule 188 (add_op -> ADD .)
    LEFT_BRACKET    reduce using rule 188 (add_op -> ADD .)
    STRUCT          reduce using rule 188 (add_op -> ADD .)
    INTERFACE       reduce using rule 188 (add_op -> ADD .)
    MAP             reduce using rule 188 (add_op -> ADD .)
    CHAN            reduce using rule 188 (add_op -> ADD .)
    ASSIGNMENT      reduce using rule 188 (add_op -> ADD .)


state 96

    (189) add_op -> SUBTRACT .

    ADD             reduce using rule 189 (add_op -> SUBTRACT .)
    SUBTRACT        reduce using rule 189 (add_op -> SUBTRACT .)
    NOT             reduce using rule 189 (add_op -> SUBTRACT .)
    XOR             reduce using rule 189 (add_op -> SUBTRACT .)
    MULTIPLY        reduce using rule 189 (add_op -> SUBTRACT .)
    AND             reduce using rule 189 (add_op -> SUBTRACT .)
    ARROW           reduce using rule 189 (add_op -> SUBTRACT .)
    LEFT_PARENTHESIS reduce using rule 189 (add_op -> SUBTRACT .)
    IDENT           reduce using rule 189 (add_op -> SUBTRACT .)
    INT             reduce using rule 189 (add_op -> SUBTRACT .)
    FLOAT           reduce using rule 189 (add_op -> SUBTRACT .)
    IMAGINARY       reduce using rule 189 (add_op -> SUBTRACT .)
    RUNE            reduce using rule 189 (add_op -> SUBTRACT .)
    STRING          reduce using rule 189 (add_op -> SUBTRACT .)
    FUNCTION        reduce using rule 189 (add_op -> SUBTRACT .)
    LEFT_BRACKET    reduce using rule 189 (add_op -> SUBTRACT .)
    STRUCT          reduce using rule 189 (add_op -> SUBTRACT .)
    INTERFACE       reduce using rule 189 (add_op -> SUBTRACT .)
    MAP             reduce using rule 189 (add_op -> SUBTRACT .)
    CHAN            reduce using rule 189 (add_op -> SUBTRACT .)
    ASSIGNMENT      reduce using rule 189 (add_op -> SUBTRACT .)


state 97

    (190) add_op -> OR .

    ADD             reduce using rule 190 (add_op -> OR .)
    SUBTRACT        reduce using rule 190 (add_op -> OR .)
    NOT             reduce using rule 190 (add_op -> OR .)
    XOR             reduce using rule 190 (add_op -> OR .)
    MULTIPLY        reduce using rule 190 (add_op -> OR .)
    AND             reduce using rule 190 (add_op -> OR .)
    ARROW           reduce using rule 190 (add_op -> OR .)
    LEFT_PARENTHESIS reduce using rule 190 (add_op -> OR .)
    IDENT           reduce using rule 190 (add_op -> OR .)
    INT             reduce using rule 190 (add_op -> OR .)
    FLOAT           reduce using rule 190 (add_op -> OR .)
    IMAGINARY       reduce using rule 190 (add_op -> OR .)
    RUNE            reduce using rule 190 (add_op -> OR .)
    STRING          reduce using rule 190 (add_op -> OR .)
    FUNCTION        reduce using rule 190 (add_op -> OR .)
    LEFT_BRACKET    reduce using rule 190 (add_op -> OR .)
    STRUCT          reduce using rule 190 (add_op -> OR .)
    INTERFACE       reduce using rule 190 (add_op -> OR .)
    MAP             reduce using rule 190 (add_op -> OR .)
    CHAN            reduce using rule 190 (add_op -> OR .)
    ASSIGNMENT      reduce using rule 190 (add_op -> OR .)


state 98

    (191) add_op -> XOR .

    ADD             reduce using rule 191 (add_op -> XOR .)
    SUBTRACT        reduce using rule 191 (add_op -> XOR .)
    NOT             reduce using rule 191 (add_op -> XOR .)
    XOR             reduce using rule 191 (add_op -> XOR .)
    MULTIPLY        reduce using rule 191 (add_op -> XOR .)
    AND             reduce using rule 191 (add_op -> XOR .)
    ARROW           reduce using rule 191 (add_op -> XOR .)
    LEFT_PARENTHESIS reduce using rule 191 (add_op -> XOR .)
    IDENT           reduce using rule 191 (add_op -> XOR .)
    INT             reduce using rule 191 (add_op -> XOR .)
    FLOAT           reduce using rule 191 (add_op -> XOR .)
    IMAGINARY       reduce using rule 191 (add_op -> XOR .)
    RUNE            reduce using rule 191 (add_op -> XOR .)
    STRING          reduce using rule 191 (add_op -> XOR .)
    FUNCTION        reduce using rule 191 (add_op -> XOR .)
    LEFT_BRACKET    reduce using rule 191 (add_op -> XOR .)
    STRUCT          reduce using rule 191 (add_op -> XOR .)
    INTERFACE       reduce using rule 191 (add_op -> XOR .)
    MAP             reduce using rule 191 (add_op -> XOR .)
    CHAN            reduce using rule 191 (add_op -> XOR .)
    ASSIGNMENT      reduce using rule 191 (add_op -> XOR .)


state 99

    (192) mul_op -> MULTIPLY .

    ADD             reduce using rule 192 (mul_op -> MULTIPLY .)
    SUBTRACT        reduce using rule 192 (mul_op -> MULTIPLY .)
    NOT             reduce using rule 192 (mul_op -> MULTIPLY .)
    XOR             reduce using rule 192 (mul_op -> MULTIPLY .)
    MULTIPLY        reduce using rule 192 (mul_op -> MULTIPLY .)
    AND             reduce using rule 192 (mul_op -> MULTIPLY .)
    ARROW           reduce using rule 192 (mul_op -> MULTIPLY .)
    LEFT_PARENTHESIS reduce using rule 192 (mul_op -> MULTIPLY .)
    IDENT           reduce using rule 192 (mul_op -> MULTIPLY .)
    INT             reduce using rule 192 (mul_op -> MULTIPLY .)
    FLOAT           reduce using rule 192 (mul_op -> MULTIPLY .)
    IMAGINARY       reduce using rule 192 (mul_op -> MULTIPLY .)
    RUNE            reduce using rule 192 (mul_op -> MULTIPLY .)
    STRING          reduce using rule 192 (mul_op -> MULTIPLY .)
    FUNCTION        reduce using rule 192 (mul_op -> MULTIPLY .)
    LEFT_BRACKET    reduce using rule 192 (mul_op -> MULTIPLY .)
    STRUCT          reduce using rule 192 (mul_op -> MULTIPLY .)
    INTERFACE       reduce using rule 192 (mul_op -> MULTIPLY .)
    MAP             reduce using rule 192 (mul_op -> MULTIPLY .)
    CHAN            reduce using rule 192 (mul_op -> MULTIPLY .)
    ASSIGNMENT      reduce using rule 192 (mul_op -> MULTIPLY .)


state 100

    (193) mul_op -> QUOTIENT .

    ADD             reduce using rule 193 (mul_op -> QUOTIENT .)
    SUBTRACT        reduce using rule 193 (mul_op -> QUOTIENT .)
    NOT             reduce using rule 193 (mul_op -> QUOTIENT .)
    XOR             reduce using rule 193 (mul_op -> QUOTIENT .)
    MULTIPLY        reduce using rule 193 (mul_op -> QUOTIENT .)
    AND             reduce using rule 193 (mul_op -> QUOTIENT .)
    ARROW           reduce using rule 193 (mul_op -> QUOTIENT .)
    LEFT_PARENTHESIS reduce using rule 193 (mul_op -> QUOTIENT .)
    IDENT           reduce using rule 193 (mul_op -> QUOTIENT .)
    INT             reduce using rule 193 (mul_op -> QUOTIENT .)
    FLOAT           reduce using rule 193 (mul_op -> QUOTIENT .)
    IMAGINARY       reduce using rule 193 (mul_op -> QUOTIENT .)
    RUNE            reduce using rule 193 (mul_op -> QUOTIENT .)
    STRING          reduce using rule 193 (mul_op -> QUOTIENT .)
    FUNCTION        reduce using rule 193 (mul_op -> QUOTIENT .)
    LEFT_BRACKET    reduce using rule 193 (mul_op -> QUOTIENT .)
    STRUCT          reduce using rule 193 (mul_op -> QUOTIENT .)
    INTERFACE       reduce using rule 193 (mul_op -> QUOTIENT .)
    MAP             reduce using rule 193 (mul_op -> QUOTIENT .)
    CHAN            reduce using rule 193 (mul_op -> QUOTIENT .)
    ASSIGNMENT      reduce using rule 193 (mul_op -> QUOTIENT .)


state 101

    (194) mul_op -> REMAINDER .

    ADD             reduce using rule 194 (mul_op -> REMAINDER .)
    SUBTRACT        reduce using rule 194 (mul_op -> REMAINDER .)
    NOT             reduce using rule 194 (mul_op -> REMAINDER .)
    XOR             reduce using rule 194 (mul_op -> REMAINDER .)
    MULTIPLY        reduce using rule 194 (mul_op -> REMAINDER .)
    AND             reduce using rule 194 (mul_op -> REMAINDER .)
    ARROW           reduce using rule 194 (mul_op -> REMAINDER .)
    LEFT_PARENTHESIS reduce using rule 194 (mul_op -> REMAINDER .)
    IDENT           reduce using rule 194 (mul_op -> REMAINDER .)
    INT             reduce using rule 194 (mul_op -> REMAINDER .)
    FLOAT           reduce using rule 194 (mul_op -> REMAINDER .)
    IMAGINARY       reduce using rule 194 (mul_op -> REMAINDER .)
    RUNE            reduce using rule 194 (mul_op -> REMAINDER .)
    STRING          reduce using rule 194 (mul_op -> REMAINDER .)
    FUNCTION        reduce using rule 194 (mul_op -> REMAINDER .)
    LEFT_BRACKET    reduce using rule 194 (mul_op -> REMAINDER .)
    STRUCT          reduce using rule 194 (mul_op -> REMAINDER .)
    INTERFACE       reduce using rule 194 (mul_op -> REMAINDER .)
    MAP             reduce using rule 194 (mul_op -> REMAINDER .)
    CHAN            reduce using rule 194 (mul_op -> REMAINDER .)
    ASSIGNMENT      reduce using rule 194 (mul_op -> REMAINDER .)


state 102

    (195) mul_op -> SHIFT_LEFT .

    ADD             reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    SUBTRACT        reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    NOT             reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    XOR             reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    MULTIPLY        reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    AND             reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    ARROW           reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    LEFT_PARENTHESIS reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    IDENT           reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    INT             reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    FLOAT           reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    IMAGINARY       reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    RUNE            reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    STRING          reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    FUNCTION        reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    LEFT_BRACKET    reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    STRUCT          reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    INTERFACE       reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    MAP             reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    CHAN            reduce using rule 195 (mul_op -> SHIFT_LEFT .)
    ASSIGNMENT      reduce using rule 195 (mul_op -> SHIFT_LEFT .)


state 103

    (196) mul_op -> SHIFT_RIGHT .

    ADD             reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    SUBTRACT        reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    NOT             reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    XOR             reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    MULTIPLY        reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    AND             reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    ARROW           reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    LEFT_PARENTHESIS reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    IDENT           reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    INT             reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    FLOAT           reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    IMAGINARY       reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    RUNE            reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    STRING          reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    FUNCTION        reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    LEFT_BRACKET    reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    STRUCT          reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    INTERFACE       reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    MAP             reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    CHAN            reduce using rule 196 (mul_op -> SHIFT_RIGHT .)
    ASSIGNMENT      reduce using rule 196 (mul_op -> SHIFT_RIGHT .)


state 104

    (197) mul_op -> AND .

    ADD             reduce using rule 197 (mul_op -> AND .)
    SUBTRACT        reduce using rule 197 (mul_op -> AND .)
    NOT             reduce using rule 197 (mul_op -> AND .)
    XOR             reduce using rule 197 (mul_op -> AND .)
    MULTIPLY        reduce using rule 197 (mul_op -> AND .)
    AND             reduce using rule 197 (mul_op -> AND .)
    ARROW           reduce using rule 197 (mul_op -> AND .)
    LEFT_PARENTHESIS reduce using rule 197 (mul_op -> AND .)
    IDENT           reduce using rule 197 (mul_op -> AND .)
    INT             reduce using rule 197 (mul_op -> AND .)
    FLOAT           reduce using rule 197 (mul_op -> AND .)
    IMAGINARY       reduce using rule 197 (mul_op -> AND .)
    RUNE            reduce using rule 197 (mul_op -> AND .)
    STRING          reduce using rule 197 (mul_op -> AND .)
    FUNCTION        reduce using rule 197 (mul_op -> AND .)
    LEFT_BRACKET    reduce using rule 197 (mul_op -> AND .)
    STRUCT          reduce using rule 197 (mul_op -> AND .)
    INTERFACE       reduce using rule 197 (mul_op -> AND .)
    MAP             reduce using rule 197 (mul_op -> AND .)
    CHAN            reduce using rule 197 (mul_op -> AND .)
    ASSIGNMENT      reduce using rule 197 (mul_op -> AND .)


state 105

    (198) mul_op -> AND_NOT .

    ADD             reduce using rule 198 (mul_op -> AND_NOT .)
    SUBTRACT        reduce using rule 198 (mul_op -> AND_NOT .)
    NOT             reduce using rule 198 (mul_op -> AND_NOT .)
    XOR             reduce using rule 198 (mul_op -> AND_NOT .)
    MULTIPLY        reduce using rule 198 (mul_op -> AND_NOT .)
    AND             reduce using rule 198 (mul_op -> AND_NOT .)
    ARROW           reduce using rule 198 (mul_op -> AND_NOT .)
    LEFT_PARENTHESIS reduce using rule 198 (mul_op -> AND_NOT .)
    IDENT           reduce using rule 198 (mul_op -> AND_NOT .)
    INT             reduce using rule 198 (mul_op -> AND_NOT .)
    FLOAT           reduce using rule 198 (mul_op -> AND_NOT .)
    IMAGINARY       reduce using rule 198 (mul_op -> AND_NOT .)
    RUNE            reduce using rule 198 (mul_op -> AND_NOT .)
    STRING          reduce using rule 198 (mul_op -> AND_NOT .)
    FUNCTION        reduce using rule 198 (mul_op -> AND_NOT .)
    LEFT_BRACKET    reduce using rule 198 (mul_op -> AND_NOT .)
    STRUCT          reduce using rule 198 (mul_op -> AND_NOT .)
    INTERFACE       reduce using rule 198 (mul_op -> AND_NOT .)
    MAP             reduce using rule 198 (mul_op -> AND_NOT .)
    CHAN            reduce using rule 198 (mul_op -> AND_NOT .)
    ASSIGNMENT      reduce using rule 198 (mul_op -> AND_NOT .)


state 106

    (153) PrimaryExpr -> PrimaryExpr Selector .

    PERIOD          reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    LEFT_BRACKET    reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    LEFT_PARENTHESIS reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    LOGICAL_OR      reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    LOGICAL_AND     reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUAL           reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    NOT_EQUAL       reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS_THAN       reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS_THAN_EQUAL reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    GREATER_THAN    reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    GREATER_THAN_EQUAL reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD             reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    SUBTRACT        reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    MULTIPLY        reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    QUOTIENT        reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    REMAINDER       reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    SHIFT_LEFT      reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    SHIFT_RIGHT     reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_NOT         reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    RIGHT_BRACKET   reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    RIGHT_PARENTHESIS reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    LEFT_BRACE      reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGNMENT      reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    INCREMENT       reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    DECREMENT       reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)
    ARROW           reduce using rule 153 (PrimaryExpr -> PrimaryExpr Selector .)


state 107

    (154) PrimaryExpr -> PrimaryExpr Index .

    PERIOD          reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    LEFT_BRACKET    reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    LEFT_PARENTHESIS reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    LOGICAL_OR      reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    LOGICAL_AND     reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    EQUAL           reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    NOT_EQUAL       reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    LESS_THAN       reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    LESS_THAN_EQUAL reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    GREATER_THAN    reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    GREATER_THAN_EQUAL reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    SUBTRACT        reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    MULTIPLY        reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    QUOTIENT        reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    REMAINDER       reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    SHIFT_LEFT      reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    SHIFT_RIGHT     reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    RIGHT_BRACKET   reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    RIGHT_PARENTHESIS reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    LEFT_BRACE      reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGNMENT      reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    INCREMENT       reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    DECREMENT       reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)
    ARROW           reduce using rule 154 (PrimaryExpr -> PrimaryExpr Index .)


state 108

    (155) PrimaryExpr -> PrimaryExpr Slice .

    PERIOD          reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    LEFT_BRACKET    reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    LEFT_PARENTHESIS reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    LOGICAL_OR      reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    LOGICAL_AND     reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUAL           reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    NOT_EQUAL       reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS_THAN       reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS_THAN_EQUAL reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATER_THAN    reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATER_THAN_EQUAL reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD             reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    SUBTRACT        reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    MULTIPLY        reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    QUOTIENT        reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    REMAINDER       reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    SHIFT_LEFT      reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    SHIFT_RIGHT     reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT         reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    RIGHT_BRACKET   reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    RIGHT_PARENTHESIS reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    LEFT_BRACE      reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGNMENT      reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    INCREMENT       reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    DECREMENT       reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)
    ARROW           reduce using rule 155 (PrimaryExpr -> PrimaryExpr Slice .)


state 109

    (156) PrimaryExpr -> PrimaryExpr TypeAssertion .

    PERIOD          reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LEFT_BRACKET    reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LEFT_PARENTHESIS reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOGICAL_OR      reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOGICAL_AND     reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQUAL           reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NOT_EQUAL       reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESS_THAN       reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESS_THAN_EQUAL reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATER_THAN    reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATER_THAN_EQUAL reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ADD             reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SUBTRACT        reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR              reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR             reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MULTIPLY        reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    QUOTIENT        reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    REMAINDER       reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHIFT_LEFT      reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHIFT_RIGHT     reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND             reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND_NOT         reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RIGHT_BRACKET   reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RIGHT_PARENTHESIS reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COLON           reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMMA           reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SEMICOLON       reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LEFT_BRACE      reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ASSIGNMENT      reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    INCREMENT       reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DECREMENT       reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ARROW           reduce using rule 156 (PrimaryExpr -> PrimaryExpr TypeAssertion .)


state 110

    (157) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEFT_BRACKET    reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEFT_PARENTHESIS reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOGICAL_OR      reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOGICAL_AND     reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUAL           reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    NOT_EQUAL       reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS_THAN       reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS_THAN_EQUAL reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREATER_THAN    reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREATER_THAN_EQUAL reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUBTRACT        reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    MULTIPLY        reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUOTIENT        reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    REMAINDER       reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHIFT_LEFT      reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHIFT_RIGHT     reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    RIGHT_BRACKET   reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    RIGHT_PARENTHESIS reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEFT_BRACE      reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGNMENT      reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    INCREMENT       reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    DECREMENT       reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)
    ARROW           reduce using rule 157 (PrimaryExpr -> PrimaryExpr Arguments .)


state 111

    (158) Selector -> PERIOD . IDENT
    (162) TypeAssertion -> PERIOD . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS

    IDENT           shift and go to state 145
    LEFT_PARENTHESIS shift and go to state 146


state 112

    (159) Index -> LEFT_BRACKET . Expression RIGHT_BRACKET
    (160) Slice -> LEFT_BRACKET . ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET
    (161) Slice -> LEFT_BRACKET . ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (253) ExpressionPlus -> . Expression
    (254) ExpressionPlus -> .
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    COLON           reduce using rule 254 (ExpressionPlus -> .)
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Expression                     shift and go to state 147
    ExpressionPlus                 shift and go to state 148
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 113

    (163) Arguments -> LEFT_PARENTHESIS . ArgumentsPlus RIGHT_PARENTHESIS
    (164) ArgumentsPlus -> . ArgumentsInOr
    (165) ArgumentsPlus -> .
    (166) ArgumentsInOr -> . ExpressionList
    (167) ArgumentsInOr -> . Type CommaExpressionListPlus
    (83) ExpressionList -> . Expression ExpressionStar
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName

    RIGHT_PARENTHESIS reduce using rule 165 (ArgumentsPlus -> .)
    LEFT_PARENTHESIS shift and go to state 115
    IDENT           shift and go to state 118
    LEFT_BRACKET    shift and go to state 120
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 154
    FUNCTION        shift and go to state 121
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    CHAN            shift and go to state 23
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59

    ArgumentsPlus                  shift and go to state 149
    ArgumentsInOr                  shift and go to state 150
    ExpressionList                 shift and go to state 151
    Type                           shift and go to state 152
    Expression                     shift and go to state 153
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    UnaryExpr                      shift and go to state 31
    QualifiedIdent                 shift and go to state 119
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    LiteralType                    shift and go to state 60

state 114

    (176) UnaryExpr -> unary_op UnaryExpr .

    LOGICAL_OR      reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    LOGICAL_AND     reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    EQUAL           reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    NOT_EQUAL       reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    LESS_THAN       reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    LESS_THAN_EQUAL reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    GREATER_THAN    reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    GREATER_THAN_EQUAL reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    ADD             reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    SUBTRACT        reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    OR              reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    XOR             reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    MULTIPLY        reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    QUOTIENT        reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    REMAINDER       reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    SHIFT_LEFT      reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    SHIFT_RIGHT     reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    AND             reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    AND_NOT         reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    RIGHT_BRACKET   reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    RIGHT_PARENTHESIS reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    COLON           reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    COMMA           reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    SEMICOLON       reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    LEFT_BRACE      reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    ASSIGNMENT      reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    INCREMENT       reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    DECREMENT       reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)
    ARROW           reduce using rule 176 (UnaryExpr -> unary_op UnaryExpr .)


state 115

    (3) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (114) Operand -> LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName

    LEFT_PARENTHESIS shift and go to state 115
    IDENT           shift and go to state 118
    LEFT_BRACKET    shift and go to state 120
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 154
    FUNCTION        shift and go to state 121
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    CHAN            shift and go to state 23
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59

    Type                           shift and go to state 117
    Expression                     shift and go to state 116
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    UnaryExpr                      shift and go to state 31
    QualifiedIdent                 shift and go to state 119
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    LiteralType                    shift and go to state 60

state 116

    (114) Operand -> LEFT_PARENTHESIS Expression . RIGHT_PARENTHESIS
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    RIGHT_PARENTHESIS shift and go to state 155
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 117

    (3) Type -> LEFT_PARENTHESIS Type . RIGHT_PARENTHESIS
    (206) Conversion -> Type . LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> Type . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (172) ReceiverType -> Type .

    RIGHT_PARENTHESIS shift and go to state 78
    LEFT_PARENTHESIS shift and go to state 122
    PERIOD          reduce using rule 172 (ReceiverType -> Type .)


state 118

    (4) TypeName -> IDENT .
    (318) PackageName -> IDENT .
    (123) OperandName -> IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for RIGHT_PARENTHESIS resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for ADD resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for XOR resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for MULTIPLY resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for AND resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for COMMA resolved using rule 4 (TypeName -> IDENT .)
    RIGHT_PARENTHESIS reduce using rule 4 (TypeName -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 4 (TypeName -> IDENT .)
    PERIOD          reduce using rule 4 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 4 (TypeName -> IDENT .)
    COMMA           reduce using rule 4 (TypeName -> IDENT .)
    ADD             reduce using rule 4 (TypeName -> IDENT .)
    SUBTRACT        reduce using rule 4 (TypeName -> IDENT .)
    NOT             reduce using rule 4 (TypeName -> IDENT .)
    XOR             reduce using rule 4 (TypeName -> IDENT .)
    MULTIPLY        reduce using rule 4 (TypeName -> IDENT .)
    AND             reduce using rule 4 (TypeName -> IDENT .)
    ARROW           reduce using rule 4 (TypeName -> IDENT .)
    IDENT           reduce using rule 4 (TypeName -> IDENT .)
    INT             reduce using rule 4 (TypeName -> IDENT .)
    FLOAT           reduce using rule 4 (TypeName -> IDENT .)
    IMAGINARY       reduce using rule 4 (TypeName -> IDENT .)
    RUNE            reduce using rule 4 (TypeName -> IDENT .)
    STRING          reduce using rule 4 (TypeName -> IDENT .)
    FUNCTION        reduce using rule 4 (TypeName -> IDENT .)
    STRUCT          reduce using rule 4 (TypeName -> IDENT .)
    INTERFACE       reduce using rule 4 (TypeName -> IDENT .)
    MAP             reduce using rule 4 (TypeName -> IDENT .)
    CHAN            reduce using rule 4 (TypeName -> IDENT .)
    LOGICAL_OR      reduce using rule 123 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 123 (OperandName -> IDENT .)
    EQUAL           reduce using rule 123 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 123 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)

  ! PERIOD          [ reduce using rule 318 (PackageName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! ADD             [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! SUBTRACT        [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! XOR             [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! MULTIPLY        [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! AND             [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 123 (OperandName -> IDENT .) ]


state 119

    (5) TypeName -> QualifiedIdent .
    (124) OperandName -> QualifiedIdent .

  ! reduce/reduce conflict for PERIOD resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for RIGHT_PARENTHESIS resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for ADD resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for XOR resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for MULTIPLY resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for AND resolved using rule 5 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for COMMA resolved using rule 5 (TypeName -> QualifiedIdent .)
    RIGHT_PARENTHESIS reduce using rule 5 (TypeName -> QualifiedIdent .)
    LEFT_PARENTHESIS reduce using rule 5 (TypeName -> QualifiedIdent .)
    PERIOD          reduce using rule 5 (TypeName -> QualifiedIdent .)
    LEFT_BRACKET    reduce using rule 5 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 5 (TypeName -> QualifiedIdent .)
    ADD             reduce using rule 5 (TypeName -> QualifiedIdent .)
    SUBTRACT        reduce using rule 5 (TypeName -> QualifiedIdent .)
    NOT             reduce using rule 5 (TypeName -> QualifiedIdent .)
    XOR             reduce using rule 5 (TypeName -> QualifiedIdent .)
    MULTIPLY        reduce using rule 5 (TypeName -> QualifiedIdent .)
    AND             reduce using rule 5 (TypeName -> QualifiedIdent .)
    ARROW           reduce using rule 5 (TypeName -> QualifiedIdent .)
    IDENT           reduce using rule 5 (TypeName -> QualifiedIdent .)
    INT             reduce using rule 5 (TypeName -> QualifiedIdent .)
    FLOAT           reduce using rule 5 (TypeName -> QualifiedIdent .)
    IMAGINARY       reduce using rule 5 (TypeName -> QualifiedIdent .)
    RUNE            reduce using rule 5 (TypeName -> QualifiedIdent .)
    STRING          reduce using rule 5 (TypeName -> QualifiedIdent .)
    FUNCTION        reduce using rule 5 (TypeName -> QualifiedIdent .)
    STRUCT          reduce using rule 5 (TypeName -> QualifiedIdent .)
    INTERFACE       reduce using rule 5 (TypeName -> QualifiedIdent .)
    MAP             reduce using rule 5 (TypeName -> QualifiedIdent .)
    CHAN            reduce using rule 5 (TypeName -> QualifiedIdent .)
    LOGICAL_OR      reduce using rule 124 (OperandName -> QualifiedIdent .)
    LOGICAL_AND     reduce using rule 124 (OperandName -> QualifiedIdent .)
    EQUAL           reduce using rule 124 (OperandName -> QualifiedIdent .)
    NOT_EQUAL       reduce using rule 124 (OperandName -> QualifiedIdent .)
    LESS_THAN       reduce using rule 124 (OperandName -> QualifiedIdent .)
    LESS_THAN_EQUAL reduce using rule 124 (OperandName -> QualifiedIdent .)
    GREATER_THAN    reduce using rule 124 (OperandName -> QualifiedIdent .)
    GREATER_THAN_EQUAL reduce using rule 124 (OperandName -> QualifiedIdent .)
    OR              reduce using rule 124 (OperandName -> QualifiedIdent .)
    QUOTIENT        reduce using rule 124 (OperandName -> QualifiedIdent .)
    REMAINDER       reduce using rule 124 (OperandName -> QualifiedIdent .)
    SHIFT_LEFT      reduce using rule 124 (OperandName -> QualifiedIdent .)
    SHIFT_RIGHT     reduce using rule 124 (OperandName -> QualifiedIdent .)
    AND_NOT         reduce using rule 124 (OperandName -> QualifiedIdent .)

  ! PERIOD          [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! LEFT_BRACKET    [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! ADD             [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! SUBTRACT        [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! XOR             [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! MULTIPLY        [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! AND             [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]
  ! COMMA           [ reduce using rule 124 (OperandName -> QualifiedIdent .) ]


state 120

    (14) ArrayType -> LEFT_BRACKET . ArrayLength RIGHT_BRACKET ElementType
    (17) SliceType -> LEFT_BRACKET . RIGHT_BRACKET ElementType
    (129) LiteralType -> LEFT_BRACKET . ELLIPSIS RIGHT_BRACKET ElementType
    (15) ArrayLength -> . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACKET   shift and go to state 29
    ELLIPSIS        shift and go to state 80
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ArrayLength                    shift and go to state 28
    Expression                     shift and go to state 30
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 121

    (30) FunctionType -> FUNCTION . Signature
    (149) FunctionLit -> FUNCTION . Signature FunctionBody
    (31) Signature -> . Parameters ResultPlus
    (36) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 71

    Signature                      shift and go to state 156
    Parameters                     shift and go to state 70

state 122

    (206) Conversion -> Type LEFT_PARENTHESIS . Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> Type LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Type                           shift and go to state 47
    Expression                     shift and go to state 157
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 123

    (171) MethodExpr -> ReceiverType PERIOD . MethodName
    (53) MethodName -> . IDENT

    IDENT           shift and go to state 159

    MethodName                     shift and go to state 158

state 124

    (126) CompositeLit -> LiteralType LiteralValue .

    PERIOD          reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    LEFT_BRACKET    reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    LEFT_PARENTHESIS reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    LOGICAL_OR      reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    LOGICAL_AND     reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    EQUAL           reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    NOT_EQUAL       reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    LESS_THAN       reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    LESS_THAN_EQUAL reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    GREATER_THAN    reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    GREATER_THAN_EQUAL reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    ADD             reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    SUBTRACT        reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    OR              reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    XOR             reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    MULTIPLY        reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    QUOTIENT        reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    REMAINDER       reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    SHIFT_LEFT      reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    SHIFT_RIGHT     reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    AND             reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    AND_NOT         reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    RIGHT_BRACKET   reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    RIGHT_PARENTHESIS reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    COLON           reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    COMMA           reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    SEMICOLON       reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    LEFT_BRACE      reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    ASSIGNMENT      reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    INCREMENT       reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    DECREMENT       reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)
    ARROW           reduce using rule 126 (CompositeLit -> LiteralType LiteralValue .)


state 125

    (133) LiteralValue -> LEFT_BRACKET . ElementListPlus RIGHT_BRACKET
    (134) ElementListPlus -> . ElementList
    (135) ElementListPlus -> . ElementList COMMA
    (136) ElementListPlus -> .
    (137) ElementList -> . KeyedElement KeyedElementStar
    (140) KeyedElement -> . KeyPlus Element
    (141) KeyPlus -> . Key COLON
    (142) KeyPlus -> .
    (143) Key -> . FieldName
    (144) Key -> . Expression
    (145) Key -> . LiteralValue
    (146) FieldName -> . IDENT
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (133) LiteralValue -> . LEFT_BRACKET ElementListPlus RIGHT_BRACKET
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    RIGHT_BRACKET   reduce using rule 136 (ElementListPlus -> .)
    IDENT           shift and go to state 169
    LEFT_BRACKET    shift and go to state 160
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

  ! LEFT_BRACKET    [ reduce using rule 142 (KeyPlus -> .) ]
  ! ADD             [ reduce using rule 142 (KeyPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 142 (KeyPlus -> .) ]
  ! NOT             [ reduce using rule 142 (KeyPlus -> .) ]
  ! XOR             [ reduce using rule 142 (KeyPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 142 (KeyPlus -> .) ]
  ! AND             [ reduce using rule 142 (KeyPlus -> .) ]
  ! ARROW           [ reduce using rule 142 (KeyPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 142 (KeyPlus -> .) ]
  ! IDENT           [ reduce using rule 142 (KeyPlus -> .) ]
  ! INT             [ reduce using rule 142 (KeyPlus -> .) ]
  ! FLOAT           [ reduce using rule 142 (KeyPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 142 (KeyPlus -> .) ]
  ! RUNE            [ reduce using rule 142 (KeyPlus -> .) ]
  ! STRING          [ reduce using rule 142 (KeyPlus -> .) ]
  ! FUNCTION        [ reduce using rule 142 (KeyPlus -> .) ]
  ! STRUCT          [ reduce using rule 142 (KeyPlus -> .) ]
  ! INTERFACE       [ reduce using rule 142 (KeyPlus -> .) ]
  ! MAP             [ reduce using rule 142 (KeyPlus -> .) ]
  ! CHAN            [ reduce using rule 142 (KeyPlus -> .) ]

    ElementListPlus                shift and go to state 161
    ElementList                    shift and go to state 162
    KeyedElement                   shift and go to state 163
    KeyPlus                        shift and go to state 164
    Key                            shift and go to state 165
    FieldName                      shift and go to state 166
    Expression                     shift and go to state 167
    LiteralValue                   shift and go to state 168
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 126

    (149) FunctionLit -> FUNCTION Signature . FunctionBody
    (30) FunctionType -> FUNCTION Signature .
    (109) FunctionBody -> . Block
    (61) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    LEFT_PARENTHESIS reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    PERIOD          reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    LEFT_BRACE      shift and go to state 172

    FunctionBody                   shift and go to state 170
    Block                          shift and go to state 171

state 127

    (18) StructType -> STRUCT LEFT_BRACE ManyFieldDecl . RIGHT_BRACE
    (19) ManyFieldDecl -> ManyFieldDecl . FieldDecl SEMICOLON
    (21) FieldDecl -> . IdentifierList Type TagPlus
    (22) FieldDecl -> . EmbeddedField TagPlus
    (80) IdentifierList -> . IDENT IdentStar
    (25) EmbeddedField -> . MULTIPLY TypeName
    (26) EmbeddedField -> . TypeName
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (318) PackageName -> . IDENT

    RIGHT_BRACE     shift and go to state 173
    IDENT           shift and go to state 177
    MULTIPLY        shift and go to state 178

    FieldDecl                      shift and go to state 174
    IdentifierList                 shift and go to state 175
    EmbeddedField                  shift and go to state 176
    TypeName                       shift and go to state 179
    QualifiedIdent                 shift and go to state 6
    PackageName                    shift and go to state 15

state 128

    (34) Result -> Parameters .

    $end            reduce using rule 34 (Result -> Parameters .)
    RIGHT_PARENTHESIS reduce using rule 34 (Result -> Parameters .)
    LEFT_PARENTHESIS reduce using rule 34 (Result -> Parameters .)
    PERIOD          reduce using rule 34 (Result -> Parameters .)
    LEFT_BRACKET    reduce using rule 34 (Result -> Parameters .)
    RIGHT_BRACKET   reduce using rule 34 (Result -> Parameters .)
    COMMA           reduce using rule 34 (Result -> Parameters .)
    ADD             reduce using rule 34 (Result -> Parameters .)
    SUBTRACT        reduce using rule 34 (Result -> Parameters .)
    NOT             reduce using rule 34 (Result -> Parameters .)
    XOR             reduce using rule 34 (Result -> Parameters .)
    MULTIPLY        reduce using rule 34 (Result -> Parameters .)
    AND             reduce using rule 34 (Result -> Parameters .)
    ARROW           reduce using rule 34 (Result -> Parameters .)
    IDENT           reduce using rule 34 (Result -> Parameters .)
    INT             reduce using rule 34 (Result -> Parameters .)
    FLOAT           reduce using rule 34 (Result -> Parameters .)
    IMAGINARY       reduce using rule 34 (Result -> Parameters .)
    RUNE            reduce using rule 34 (Result -> Parameters .)
    STRING          reduce using rule 34 (Result -> Parameters .)
    FUNCTION        reduce using rule 34 (Result -> Parameters .)
    STRUCT          reduce using rule 34 (Result -> Parameters .)
    INTERFACE       reduce using rule 34 (Result -> Parameters .)
    MAP             reduce using rule 34 (Result -> Parameters .)
    CHAN            reduce using rule 34 (Result -> Parameters .)
    SEMICOLON       reduce using rule 34 (Result -> Parameters .)
    ASSIGNMENT      reduce using rule 34 (Result -> Parameters .)
    COLON           reduce using rule 34 (Result -> Parameters .)
    LEFT_BRACE      reduce using rule 34 (Result -> Parameters .)


state 129

    (31) Signature -> Parameters ResultPlus .

    $end            reduce using rule 31 (Signature -> Parameters ResultPlus .)
    RIGHT_PARENTHESIS reduce using rule 31 (Signature -> Parameters ResultPlus .)
    LEFT_PARENTHESIS reduce using rule 31 (Signature -> Parameters ResultPlus .)
    PERIOD          reduce using rule 31 (Signature -> Parameters ResultPlus .)
    LEFT_BRACKET    reduce using rule 31 (Signature -> Parameters ResultPlus .)
    RIGHT_BRACKET   reduce using rule 31 (Signature -> Parameters ResultPlus .)
    COMMA           reduce using rule 31 (Signature -> Parameters ResultPlus .)
    ADD             reduce using rule 31 (Signature -> Parameters ResultPlus .)
    SUBTRACT        reduce using rule 31 (Signature -> Parameters ResultPlus .)
    NOT             reduce using rule 31 (Signature -> Parameters ResultPlus .)
    XOR             reduce using rule 31 (Signature -> Parameters ResultPlus .)
    MULTIPLY        reduce using rule 31 (Signature -> Parameters ResultPlus .)
    AND             reduce using rule 31 (Signature -> Parameters ResultPlus .)
    ARROW           reduce using rule 31 (Signature -> Parameters ResultPlus .)
    IDENT           reduce using rule 31 (Signature -> Parameters ResultPlus .)
    INT             reduce using rule 31 (Signature -> Parameters ResultPlus .)
    FLOAT           reduce using rule 31 (Signature -> Parameters ResultPlus .)
    IMAGINARY       reduce using rule 31 (Signature -> Parameters ResultPlus .)
    RUNE            reduce using rule 31 (Signature -> Parameters ResultPlus .)
    STRING          reduce using rule 31 (Signature -> Parameters ResultPlus .)
    FUNCTION        reduce using rule 31 (Signature -> Parameters ResultPlus .)
    STRUCT          reduce using rule 31 (Signature -> Parameters ResultPlus .)
    INTERFACE       reduce using rule 31 (Signature -> Parameters ResultPlus .)
    MAP             reduce using rule 31 (Signature -> Parameters ResultPlus .)
    CHAN            reduce using rule 31 (Signature -> Parameters ResultPlus .)
    SEMICOLON       reduce using rule 31 (Signature -> Parameters ResultPlus .)
    ASSIGNMENT      reduce using rule 31 (Signature -> Parameters ResultPlus .)
    COLON           reduce using rule 31 (Signature -> Parameters ResultPlus .)
    LEFT_BRACE      reduce using rule 31 (Signature -> Parameters ResultPlus .)


state 130

    (32) ResultPlus -> Result .

    $end            reduce using rule 32 (ResultPlus -> Result .)
    RIGHT_PARENTHESIS reduce using rule 32 (ResultPlus -> Result .)
    LEFT_PARENTHESIS reduce using rule 32 (ResultPlus -> Result .)
    PERIOD          reduce using rule 32 (ResultPlus -> Result .)
    LEFT_BRACKET    reduce using rule 32 (ResultPlus -> Result .)
    RIGHT_BRACKET   reduce using rule 32 (ResultPlus -> Result .)
    COMMA           reduce using rule 32 (ResultPlus -> Result .)
    ADD             reduce using rule 32 (ResultPlus -> Result .)
    SUBTRACT        reduce using rule 32 (ResultPlus -> Result .)
    NOT             reduce using rule 32 (ResultPlus -> Result .)
    XOR             reduce using rule 32 (ResultPlus -> Result .)
    MULTIPLY        reduce using rule 32 (ResultPlus -> Result .)
    AND             reduce using rule 32 (ResultPlus -> Result .)
    ARROW           reduce using rule 32 (ResultPlus -> Result .)
    IDENT           reduce using rule 32 (ResultPlus -> Result .)
    INT             reduce using rule 32 (ResultPlus -> Result .)
    FLOAT           reduce using rule 32 (ResultPlus -> Result .)
    IMAGINARY       reduce using rule 32 (ResultPlus -> Result .)
    RUNE            reduce using rule 32 (ResultPlus -> Result .)
    STRING          reduce using rule 32 (ResultPlus -> Result .)
    FUNCTION        reduce using rule 32 (ResultPlus -> Result .)
    STRUCT          reduce using rule 32 (ResultPlus -> Result .)
    INTERFACE       reduce using rule 32 (ResultPlus -> Result .)
    MAP             reduce using rule 32 (ResultPlus -> Result .)
    CHAN            reduce using rule 32 (ResultPlus -> Result .)
    SEMICOLON       reduce using rule 32 (ResultPlus -> Result .)
    ASSIGNMENT      reduce using rule 32 (ResultPlus -> Result .)
    COLON           reduce using rule 32 (ResultPlus -> Result .)
    LEFT_BRACE      reduce using rule 32 (ResultPlus -> Result .)


state 131

    (35) Result -> Type .

    $end            reduce using rule 35 (Result -> Type .)
    RIGHT_PARENTHESIS reduce using rule 35 (Result -> Type .)
    LEFT_PARENTHESIS reduce using rule 35 (Result -> Type .)
    PERIOD          reduce using rule 35 (Result -> Type .)
    LEFT_BRACKET    reduce using rule 35 (Result -> Type .)
    RIGHT_BRACKET   reduce using rule 35 (Result -> Type .)
    COMMA           reduce using rule 35 (Result -> Type .)
    ADD             reduce using rule 35 (Result -> Type .)
    SUBTRACT        reduce using rule 35 (Result -> Type .)
    NOT             reduce using rule 35 (Result -> Type .)
    XOR             reduce using rule 35 (Result -> Type .)
    MULTIPLY        reduce using rule 35 (Result -> Type .)
    AND             reduce using rule 35 (Result -> Type .)
    ARROW           reduce using rule 35 (Result -> Type .)
    IDENT           reduce using rule 35 (Result -> Type .)
    INT             reduce using rule 35 (Result -> Type .)
    FLOAT           reduce using rule 35 (Result -> Type .)
    IMAGINARY       reduce using rule 35 (Result -> Type .)
    RUNE            reduce using rule 35 (Result -> Type .)
    STRING          reduce using rule 35 (Result -> Type .)
    FUNCTION        reduce using rule 35 (Result -> Type .)
    STRUCT          reduce using rule 35 (Result -> Type .)
    INTERFACE       reduce using rule 35 (Result -> Type .)
    MAP             reduce using rule 35 (Result -> Type .)
    CHAN            reduce using rule 35 (Result -> Type .)
    SEMICOLON       reduce using rule 35 (Result -> Type .)
    ASSIGNMENT      reduce using rule 35 (Result -> Type .)
    COLON           reduce using rule 35 (Result -> Type .)
    LEFT_BRACE      reduce using rule 35 (Result -> Type .)


state 132

    (36) Parameters -> LEFT_PARENTHESIS . ParameterListPlus RIGHT_PARENTHESIS
    (3) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (37) ParameterListPlus -> . ParameterList COMMA
    (38) ParameterListPlus -> . ParameterList
    (39) ParameterListPlus -> .
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (40) ParameterList -> . ParameterDecl
    (41) ParameterList -> . ParameterDecl COMMA ParameterList
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (42) ParameterDecl -> . IdentifierListPlus EllipsisPlus Type
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (43) IdentifierListPlus -> . IdentifierList
    (44) IdentifierListPlus -> .
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN
    (80) IdentifierList -> . IDENT IdentStar

  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
    RIGHT_PARENTHESIS reduce using rule 39 (ParameterListPlus -> .)
    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 180
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    ELLIPSIS        reduce using rule 44 (IdentifierListPlus -> .)
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

  ! LEFT_PARENTHESIS [ reduce using rule 44 (IdentifierListPlus -> .) ]
  ! IDENT           [ reduce using rule 44 (IdentifierListPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 44 (IdentifierListPlus -> .) ]
  ! STRUCT          [ reduce using rule 44 (IdentifierListPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 44 (IdentifierListPlus -> .) ]
  ! FUNCTION        [ reduce using rule 44 (IdentifierListPlus -> .) ]
  ! INTERFACE       [ reduce using rule 44 (IdentifierListPlus -> .) ]
  ! MAP             [ reduce using rule 44 (IdentifierListPlus -> .) ]
  ! CHAN            [ reduce using rule 44 (IdentifierListPlus -> .) ]
  ! ARROW           [ reduce using rule 44 (IdentifierListPlus -> .) ]

    ParameterListPlus              shift and go to state 133
    Type                           shift and go to state 25
    ParameterList                  shift and go to state 134
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    ParameterDecl                  shift and go to state 135
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    IdentifierListPlus             shift and go to state 136
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22
    IdentifierList                 shift and go to state 137

state 133

    (36) Parameters -> LEFT_PARENTHESIS ParameterListPlus . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 181


state 134

    (37) ParameterListPlus -> ParameterList . COMMA
    (38) ParameterListPlus -> ParameterList .

    COMMA           shift and go to state 182
    RIGHT_PARENTHESIS reduce using rule 38 (ParameterListPlus -> ParameterList .)


state 135

    (40) ParameterList -> ParameterDecl .
    (41) ParameterList -> ParameterDecl . COMMA ParameterList

  ! shift/reduce conflict for COMMA resolved as shift
    RIGHT_PARENTHESIS reduce using rule 40 (ParameterList -> ParameterDecl .)
    COMMA           shift and go to state 183

  ! COMMA           [ reduce using rule 40 (ParameterList -> ParameterDecl .) ]


state 136

    (42) ParameterDecl -> IdentifierListPlus . EllipsisPlus Type
    (45) EllipsisPlus -> . ELLIPSIS
    (46) EllipsisPlus -> .

    ELLIPSIS        shift and go to state 185
    LEFT_PARENTHESIS reduce using rule 46 (EllipsisPlus -> .)
    IDENT           reduce using rule 46 (EllipsisPlus -> .)
    LEFT_BRACKET    reduce using rule 46 (EllipsisPlus -> .)
    STRUCT          reduce using rule 46 (EllipsisPlus -> .)
    MULTIPLY        reduce using rule 46 (EllipsisPlus -> .)
    FUNCTION        reduce using rule 46 (EllipsisPlus -> .)
    INTERFACE       reduce using rule 46 (EllipsisPlus -> .)
    MAP             reduce using rule 46 (EllipsisPlus -> .)
    CHAN            reduce using rule 46 (EllipsisPlus -> .)
    ARROW           reduce using rule 46 (EllipsisPlus -> .)

    EllipsisPlus                   shift and go to state 184

state 137

    (43) IdentifierListPlus -> IdentifierList .

    ELLIPSIS        reduce using rule 43 (IdentifierListPlus -> IdentifierList .)
    LEFT_PARENTHESIS reduce using rule 43 (IdentifierListPlus -> IdentifierList .)
    IDENT           reduce using rule 43 (IdentifierListPlus -> IdentifierList .)
    LEFT_BRACKET    reduce using rule 43 (IdentifierListPlus -> IdentifierList .)
    STRUCT          reduce using rule 43 (IdentifierListPlus -> IdentifierList .)
    MULTIPLY        reduce using rule 43 (IdentifierListPlus -> IdentifierList .)
    FUNCTION        reduce using rule 43 (IdentifierListPlus -> IdentifierList .)
    INTERFACE       reduce using rule 43 (IdentifierListPlus -> IdentifierList .)
    MAP             reduce using rule 43 (IdentifierListPlus -> IdentifierList .)
    CHAN            reduce using rule 43 (IdentifierListPlus -> IdentifierList .)
    ARROW           reduce using rule 43 (IdentifierListPlus -> IdentifierList .)


state 138

    (80) IdentifierList -> IDENT . IdentStar
    (81) IdentStar -> . COMMA IDENT IdentStar
    (82) IdentStar -> .

    COMMA           shift and go to state 187
    ELLIPSIS        reduce using rule 82 (IdentStar -> .)
    LEFT_PARENTHESIS reduce using rule 82 (IdentStar -> .)
    IDENT           reduce using rule 82 (IdentStar -> .)
    LEFT_BRACKET    reduce using rule 82 (IdentStar -> .)
    STRUCT          reduce using rule 82 (IdentStar -> .)
    MULTIPLY        reduce using rule 82 (IdentStar -> .)
    FUNCTION        reduce using rule 82 (IdentStar -> .)
    INTERFACE       reduce using rule 82 (IdentStar -> .)
    MAP             reduce using rule 82 (IdentStar -> .)
    CHAN            reduce using rule 82 (IdentStar -> .)
    ARROW           reduce using rule 82 (IdentStar -> .)
    ASSIGNMENT      reduce using rule 82 (IdentStar -> .)
    SEMICOLON       reduce using rule 82 (IdentStar -> .)

    IdentStar                      shift and go to state 186

state 139

    (47) InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus . RIGHT_BRACE
    (48) InterfaceTypePlus -> InterfaceTypePlus . InterfaceTypeMethod SEMICOLON
    (50) InterfaceTypeMethod -> . MethodSpec
    (51) InterfaceTypeMethod -> . InterfaceTypeName
    (52) MethodSpec -> . MethodName Signature
    (54) InterfaceTypeName -> . TypeName
    (53) MethodName -> . IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (318) PackageName -> . IDENT

    RIGHT_BRACE     shift and go to state 188
    IDENT           shift and go to state 194

    InterfaceTypeMethod            shift and go to state 189
    MethodSpec                     shift and go to state 190
    InterfaceTypeName              shift and go to state 191
    MethodName                     shift and go to state 192
    TypeName                       shift and go to state 193
    QualifiedIdent                 shift and go to state 6
    PackageName                    shift and go to state 15

state 140

    (55) MapType -> MAP LEFT_BRACKET KeyType . RIGHT_BRACKET ElementType

    RIGHT_BRACKET   shift and go to state 195


state 141

    (56) KeyType -> Type .

    RIGHT_BRACKET   reduce using rule 56 (KeyType -> Type .)


state 142

    (129) LiteralType -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET . ElementType
    (16) ElementType -> . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    ElementType                    shift and go to state 196
    Type                           shift and go to state 75
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 143

    (14) ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .

    $end            reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    RIGHT_PARENTHESIS reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    LEFT_PARENTHESIS reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    PERIOD          reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    LEFT_BRACKET    reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    RIGHT_BRACKET   reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    COMMA           reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    ADD             reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    SUBTRACT        reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    NOT             reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    XOR             reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    MULTIPLY        reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    AND             reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    ARROW           reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    IDENT           reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    INT             reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    FLOAT           reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    IMAGINARY       reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    RUNE            reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    STRING          reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    FUNCTION        reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    STRUCT          reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    INTERFACE       reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    MAP             reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    CHAN            reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    SEMICOLON       reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    ASSIGNMENT      reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    COLON           reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)
    LEFT_BRACE      reduce using rule 14 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType .)


state 144

    (174) Expression -> Expression binary_op Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

  ! shift/reduce conflict for LOGICAL_OR resolved as shift
  ! shift/reduce conflict for LOGICAL_AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for QUOTIENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for SHIFT_LEFT resolved as shift
  ! shift/reduce conflict for SHIFT_RIGHT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    RIGHT_BRACKET   reduce using rule 174 (Expression -> Expression binary_op Expression .)
    RIGHT_PARENTHESIS reduce using rule 174 (Expression -> Expression binary_op Expression .)
    COLON           reduce using rule 174 (Expression -> Expression binary_op Expression .)
    COMMA           reduce using rule 174 (Expression -> Expression binary_op Expression .)
    SEMICOLON       reduce using rule 174 (Expression -> Expression binary_op Expression .)
    LEFT_BRACE      reduce using rule 174 (Expression -> Expression binary_op Expression .)
    ASSIGNMENT      reduce using rule 174 (Expression -> Expression binary_op Expression .)
    INCREMENT       reduce using rule 174 (Expression -> Expression binary_op Expression .)
    DECREMENT       reduce using rule 174 (Expression -> Expression binary_op Expression .)
    ARROW           reduce using rule 174 (Expression -> Expression binary_op Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

  ! LOGICAL_OR      [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! LOGICAL_AND     [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! EQUAL           [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! NOT_EQUAL       [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! LESS_THAN       [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! GREATER_THAN    [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! ADD             [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! SUBTRACT        [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! OR              [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! XOR             [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! MULTIPLY        [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! QUOTIENT        [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! REMAINDER       [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! AND             [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]
  ! AND_NOT         [ reduce using rule 174 (Expression -> Expression binary_op Expression .) ]

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 145

    (158) Selector -> PERIOD IDENT .

    PERIOD          reduce using rule 158 (Selector -> PERIOD IDENT .)
    LEFT_BRACKET    reduce using rule 158 (Selector -> PERIOD IDENT .)
    LEFT_PARENTHESIS reduce using rule 158 (Selector -> PERIOD IDENT .)
    LOGICAL_OR      reduce using rule 158 (Selector -> PERIOD IDENT .)
    LOGICAL_AND     reduce using rule 158 (Selector -> PERIOD IDENT .)
    EQUAL           reduce using rule 158 (Selector -> PERIOD IDENT .)
    NOT_EQUAL       reduce using rule 158 (Selector -> PERIOD IDENT .)
    LESS_THAN       reduce using rule 158 (Selector -> PERIOD IDENT .)
    LESS_THAN_EQUAL reduce using rule 158 (Selector -> PERIOD IDENT .)
    GREATER_THAN    reduce using rule 158 (Selector -> PERIOD IDENT .)
    GREATER_THAN_EQUAL reduce using rule 158 (Selector -> PERIOD IDENT .)
    ADD             reduce using rule 158 (Selector -> PERIOD IDENT .)
    SUBTRACT        reduce using rule 158 (Selector -> PERIOD IDENT .)
    OR              reduce using rule 158 (Selector -> PERIOD IDENT .)
    XOR             reduce using rule 158 (Selector -> PERIOD IDENT .)
    MULTIPLY        reduce using rule 158 (Selector -> PERIOD IDENT .)
    QUOTIENT        reduce using rule 158 (Selector -> PERIOD IDENT .)
    REMAINDER       reduce using rule 158 (Selector -> PERIOD IDENT .)
    SHIFT_LEFT      reduce using rule 158 (Selector -> PERIOD IDENT .)
    SHIFT_RIGHT     reduce using rule 158 (Selector -> PERIOD IDENT .)
    AND             reduce using rule 158 (Selector -> PERIOD IDENT .)
    AND_NOT         reduce using rule 158 (Selector -> PERIOD IDENT .)
    RIGHT_BRACKET   reduce using rule 158 (Selector -> PERIOD IDENT .)
    RIGHT_PARENTHESIS reduce using rule 158 (Selector -> PERIOD IDENT .)
    COLON           reduce using rule 158 (Selector -> PERIOD IDENT .)
    COMMA           reduce using rule 158 (Selector -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 158 (Selector -> PERIOD IDENT .)
    LEFT_BRACE      reduce using rule 158 (Selector -> PERIOD IDENT .)
    ASSIGNMENT      reduce using rule 158 (Selector -> PERIOD IDENT .)
    INCREMENT       reduce using rule 158 (Selector -> PERIOD IDENT .)
    DECREMENT       reduce using rule 158 (Selector -> PERIOD IDENT .)
    ARROW           reduce using rule 158 (Selector -> PERIOD IDENT .)


state 146

    (162) TypeAssertion -> PERIOD LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    Type                           shift and go to state 197
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 147

    (159) Index -> LEFT_BRACKET Expression . RIGHT_BRACKET
    (174) Expression -> Expression . binary_op Expression
    (253) ExpressionPlus -> Expression .
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    RIGHT_BRACKET   shift and go to state 198
    COLON           reduce using rule 253 (ExpressionPlus -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 148

    (160) Slice -> LEFT_BRACKET ExpressionPlus . COLON ExpressionPlus RIGHT_BRACKET
    (161) Slice -> LEFT_BRACKET ExpressionPlus . COLON Expression COLON Expression RIGHT_BRACKET

    COLON           shift and go to state 199


state 149

    (163) Arguments -> LEFT_PARENTHESIS ArgumentsPlus . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 200


state 150

    (164) ArgumentsPlus -> ArgumentsInOr .

    RIGHT_PARENTHESIS reduce using rule 164 (ArgumentsPlus -> ArgumentsInOr .)


state 151

    (166) ArgumentsInOr -> ExpressionList .

    RIGHT_PARENTHESIS reduce using rule 166 (ArgumentsInOr -> ExpressionList .)


state 152

    (167) ArgumentsInOr -> Type . CommaExpressionListPlus
    (206) Conversion -> Type . LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> Type . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (172) ReceiverType -> Type .
    (168) CommaExpressionListPlus -> . COMMA ExpressionList
    (169) CommaExpressionListPlus -> . ExpressionList
    (170) CommaExpressionListPlus -> .
    (83) ExpressionList -> . Expression ExpressionStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 202
    PERIOD          reduce using rule 172 (ReceiverType -> Type .)
    COMMA           shift and go to state 203
    RIGHT_PARENTHESIS reduce using rule 170 (CommaExpressionListPlus -> .)
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Type                           shift and go to state 47
    CommaExpressionListPlus        shift and go to state 201
    Expression                     shift and go to state 153
    ExpressionList                 shift and go to state 204
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 153

    (83) ExpressionList -> Expression . ExpressionStar
    (174) Expression -> Expression . binary_op Expression
    (84) ExpressionStar -> . COMMA Expression ExpressionStar
    (85) ExpressionStar -> .
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    COMMA           shift and go to state 206
    RIGHT_PARENTHESIS reduce using rule 85 (ExpressionStar -> .)
    SEMICOLON       reduce using rule 85 (ExpressionStar -> .)
    LEFT_BRACE      reduce using rule 85 (ExpressionStar -> .)
    COLON           reduce using rule 85 (ExpressionStar -> .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    ExpressionStar                 shift and go to state 205
    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 154

    (28) PointerType -> MULTIPLY . BaseType
    (203) unary_op -> MULTIPLY .
    (29) BaseType -> . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             reduce using rule 203 (unary_op -> MULTIPLY .)
    SUBTRACT        reduce using rule 203 (unary_op -> MULTIPLY .)
    NOT             reduce using rule 203 (unary_op -> MULTIPLY .)
    XOR             reduce using rule 203 (unary_op -> MULTIPLY .)
    MULTIPLY        reduce using rule 203 (unary_op -> MULTIPLY .)
    AND             reduce using rule 203 (unary_op -> MULTIPLY .)
    ARROW           reduce using rule 203 (unary_op -> MULTIPLY .)
    LEFT_PARENTHESIS reduce using rule 203 (unary_op -> MULTIPLY .)
    IDENT           reduce using rule 203 (unary_op -> MULTIPLY .)
    INT             reduce using rule 203 (unary_op -> MULTIPLY .)
    FLOAT           reduce using rule 203 (unary_op -> MULTIPLY .)
    IMAGINARY       reduce using rule 203 (unary_op -> MULTIPLY .)
    RUNE            reduce using rule 203 (unary_op -> MULTIPLY .)
    STRING          reduce using rule 203 (unary_op -> MULTIPLY .)
    FUNCTION        reduce using rule 203 (unary_op -> MULTIPLY .)
    LEFT_BRACKET    reduce using rule 203 (unary_op -> MULTIPLY .)
    STRUCT          reduce using rule 203 (unary_op -> MULTIPLY .)
    INTERFACE       reduce using rule 203 (unary_op -> MULTIPLY .)
    MAP             reduce using rule 203 (unary_op -> MULTIPLY .)
    CHAN            reduce using rule 203 (unary_op -> MULTIPLY .)

  ! LEFT_PARENTHESIS [ shift and go to state 4 ]
  ! IDENT           [ shift and go to state 5 ]
  ! LEFT_BRACKET    [ shift and go to state 16 ]
  ! STRUCT          [ shift and go to state 17 ]
  ! MULTIPLY        [ shift and go to state 18 ]
  ! FUNCTION        [ shift and go to state 19 ]
  ! INTERFACE       [ shift and go to state 20 ]
  ! MAP             [ shift and go to state 21 ]
  ! CHAN            [ shift and go to state 23 ]
  ! ARROW           [ shift and go to state 24 ]

    BaseType                       shift and go to state 67
    Type                           shift and go to state 68
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 155

    (114) Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ADD             reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    OR              reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    XOR             reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND             reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COLON           reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)


state 156

    (30) FunctionType -> FUNCTION Signature .
    (149) FunctionLit -> FUNCTION Signature . FunctionBody
    (109) FunctionBody -> . Block
    (61) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    RIGHT_PARENTHESIS reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    LEFT_PARENTHESIS reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    PERIOD          reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    COMMA           reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    ADD             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    SUBTRACT        reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    NOT             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    XOR             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    MULTIPLY        reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    AND             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    ARROW           reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    IDENT           reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    INT             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    FLOAT           reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    IMAGINARY       reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    RUNE            reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    STRING          reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    FUNCTION        reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    LEFT_BRACKET    reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    STRUCT          reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    INTERFACE       reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    MAP             reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    CHAN            reduce using rule 30 (FunctionType -> FUNCTION Signature .)
    LEFT_BRACE      shift and go to state 172

    FunctionBody                   shift and go to state 170
    Block                          shift and go to state 171

state 157

    (206) Conversion -> Type LEFT_PARENTHESIS Expression . COMMA RIGHT_PARENTHESIS
    (207) Conversion -> Type LEFT_PARENTHESIS Expression . RIGHT_PARENTHESIS
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    COMMA           shift and go to state 207
    RIGHT_PARENTHESIS shift and go to state 208
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 158

    (171) MethodExpr -> ReceiverType PERIOD MethodName .

    PERIOD          reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LEFT_BRACKET    reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LEFT_PARENTHESIS reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LOGICAL_OR      reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LOGICAL_AND     reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    EQUAL           reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    NOT_EQUAL       reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LESS_THAN       reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LESS_THAN_EQUAL reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    GREATER_THAN    reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    GREATER_THAN_EQUAL reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ADD             reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SUBTRACT        reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    OR              reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    XOR             reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    MULTIPLY        reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    QUOTIENT        reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    REMAINDER       reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SHIFT_LEFT      reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SHIFT_RIGHT     reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    AND             reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    AND_NOT         reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    RIGHT_BRACKET   reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    RIGHT_PARENTHESIS reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    COLON           reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    COMMA           reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SEMICOLON       reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LEFT_BRACE      reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ASSIGNMENT      reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    INCREMENT       reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    DECREMENT       reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ARROW           reduce using rule 171 (MethodExpr -> ReceiverType PERIOD MethodName .)


state 159

    (53) MethodName -> IDENT .

    PERIOD          reduce using rule 53 (MethodName -> IDENT .)
    LEFT_BRACKET    reduce using rule 53 (MethodName -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 53 (MethodName -> IDENT .)
    LOGICAL_OR      reduce using rule 53 (MethodName -> IDENT .)
    LOGICAL_AND     reduce using rule 53 (MethodName -> IDENT .)
    EQUAL           reduce using rule 53 (MethodName -> IDENT .)
    NOT_EQUAL       reduce using rule 53 (MethodName -> IDENT .)
    LESS_THAN       reduce using rule 53 (MethodName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 53 (MethodName -> IDENT .)
    GREATER_THAN    reduce using rule 53 (MethodName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 53 (MethodName -> IDENT .)
    ADD             reduce using rule 53 (MethodName -> IDENT .)
    SUBTRACT        reduce using rule 53 (MethodName -> IDENT .)
    OR              reduce using rule 53 (MethodName -> IDENT .)
    XOR             reduce using rule 53 (MethodName -> IDENT .)
    MULTIPLY        reduce using rule 53 (MethodName -> IDENT .)
    QUOTIENT        reduce using rule 53 (MethodName -> IDENT .)
    REMAINDER       reduce using rule 53 (MethodName -> IDENT .)
    SHIFT_LEFT      reduce using rule 53 (MethodName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 53 (MethodName -> IDENT .)
    AND             reduce using rule 53 (MethodName -> IDENT .)
    AND_NOT         reduce using rule 53 (MethodName -> IDENT .)
    RIGHT_BRACKET   reduce using rule 53 (MethodName -> IDENT .)
    RIGHT_PARENTHESIS reduce using rule 53 (MethodName -> IDENT .)
    COLON           reduce using rule 53 (MethodName -> IDENT .)
    COMMA           reduce using rule 53 (MethodName -> IDENT .)
    SEMICOLON       reduce using rule 53 (MethodName -> IDENT .)
    LEFT_BRACE      reduce using rule 53 (MethodName -> IDENT .)
    ASSIGNMENT      reduce using rule 53 (MethodName -> IDENT .)
    INCREMENT       reduce using rule 53 (MethodName -> IDENT .)
    DECREMENT       reduce using rule 53 (MethodName -> IDENT .)
    ARROW           reduce using rule 53 (MethodName -> IDENT .)


state 160

    (133) LiteralValue -> LEFT_BRACKET . ElementListPlus RIGHT_BRACKET
    (129) LiteralType -> LEFT_BRACKET . ELLIPSIS RIGHT_BRACKET ElementType
    (14) ArrayType -> LEFT_BRACKET . ArrayLength RIGHT_BRACKET ElementType
    (17) SliceType -> LEFT_BRACKET . RIGHT_BRACKET ElementType
    (134) ElementListPlus -> . ElementList
    (135) ElementListPlus -> . ElementList COMMA
    (136) ElementListPlus -> .
    (15) ArrayLength -> . Expression
    (137) ElementList -> . KeyedElement KeyedElementStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (140) KeyedElement -> . KeyPlus Element
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (141) KeyPlus -> . Key COLON
    (142) KeyPlus -> .
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (143) Key -> . FieldName
    (144) Key -> . Expression
    (145) Key -> . LiteralValue
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (146) FieldName -> . IDENT
    (133) LiteralValue -> . LEFT_BRACKET ElementListPlus RIGHT_BRACKET
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for RIGHT_BRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    ELLIPSIS        shift and go to state 80
    RIGHT_BRACKET   shift and go to state 29
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 169
    LEFT_BRACKET    shift and go to state 160
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

  ! RIGHT_BRACKET   [ reduce using rule 136 (ElementListPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 142 (KeyPlus -> .) ]
  ! ADD             [ reduce using rule 142 (KeyPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 142 (KeyPlus -> .) ]
  ! NOT             [ reduce using rule 142 (KeyPlus -> .) ]
  ! XOR             [ reduce using rule 142 (KeyPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 142 (KeyPlus -> .) ]
  ! AND             [ reduce using rule 142 (KeyPlus -> .) ]
  ! ARROW           [ reduce using rule 142 (KeyPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 142 (KeyPlus -> .) ]
  ! IDENT           [ reduce using rule 142 (KeyPlus -> .) ]
  ! INT             [ reduce using rule 142 (KeyPlus -> .) ]
  ! FLOAT           [ reduce using rule 142 (KeyPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 142 (KeyPlus -> .) ]
  ! RUNE            [ reduce using rule 142 (KeyPlus -> .) ]
  ! STRING          [ reduce using rule 142 (KeyPlus -> .) ]
  ! FUNCTION        [ reduce using rule 142 (KeyPlus -> .) ]
  ! STRUCT          [ reduce using rule 142 (KeyPlus -> .) ]
  ! INTERFACE       [ reduce using rule 142 (KeyPlus -> .) ]
  ! MAP             [ reduce using rule 142 (KeyPlus -> .) ]
  ! CHAN            [ reduce using rule 142 (KeyPlus -> .) ]

    ElementListPlus                shift and go to state 161
    ArrayLength                    shift and go to state 28
    ElementList                    shift and go to state 162
    Expression                     shift and go to state 209
    KeyedElement                   shift and go to state 163
    UnaryExpr                      shift and go to state 31
    KeyPlus                        shift and go to state 164
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Key                            shift and go to state 165
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    FieldName                      shift and go to state 166
    LiteralValue                   shift and go to state 168
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 161

    (133) LiteralValue -> LEFT_BRACKET ElementListPlus . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 210


state 162

    (134) ElementListPlus -> ElementList .
    (135) ElementListPlus -> ElementList . COMMA

    RIGHT_BRACKET   reduce using rule 134 (ElementListPlus -> ElementList .)
    COMMA           shift and go to state 211


state 163

    (137) ElementList -> KeyedElement . KeyedElementStar
    (138) KeyedElementStar -> . COMMA KeyedElement KeyedElementStar
    (139) KeyedElementStar -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 213
    RIGHT_BRACKET   reduce using rule 139 (KeyedElementStar -> .)

  ! COMMA           [ reduce using rule 139 (KeyedElementStar -> .) ]

    KeyedElementStar               shift and go to state 212

state 164

    (140) KeyedElement -> KeyPlus . Element
    (147) Element -> . Expression
    (148) Element -> . LiteralValue
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (133) LiteralValue -> . LEFT_BRACKET ElementListPlus RIGHT_BRACKET
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_BRACKET    shift and go to state 160
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Element                        shift and go to state 214
    Expression                     shift and go to state 215
    LiteralValue                   shift and go to state 216
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 165

    (141) KeyPlus -> Key . COLON

    COLON           shift and go to state 217


state 166

    (143) Key -> FieldName .

    COLON           reduce using rule 143 (Key -> FieldName .)


state 167

    (144) Key -> Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    COLON           reduce using rule 144 (Key -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 168

    (145) Key -> LiteralValue .

    COLON           reduce using rule 145 (Key -> LiteralValue .)


state 169

    (146) FieldName -> IDENT .
    (123) OperandName -> IDENT .
    (4) TypeName -> IDENT .
    (318) PackageName -> IDENT .

  ! reduce/reduce conflict for COLON resolved using rule 123 (OperandName -> IDENT .)
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
    LOGICAL_OR      reduce using rule 123 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 123 (OperandName -> IDENT .)
    EQUAL           reduce using rule 123 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUBTRACT        reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MULTIPLY        reduce using rule 123 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 123 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)
    COLON           reduce using rule 123 (OperandName -> IDENT .)
    RIGHT_BRACKET   reduce using rule 123 (OperandName -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 4 (TypeName -> IDENT .)
    PERIOD          reduce using rule 4 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 4 (TypeName -> IDENT .)

  ! COLON           [ reduce using rule 146 (FieldName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 318 (PackageName -> IDENT .) ]


state 170

    (149) FunctionLit -> FUNCTION Signature FunctionBody .

    PERIOD          reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LEFT_BRACKET    reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LEFT_PARENTHESIS reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LOGICAL_OR      reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LOGICAL_AND     reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    EQUAL           reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    NOT_EQUAL       reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LESS_THAN       reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LESS_THAN_EQUAL reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    GREATER_THAN    reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    GREATER_THAN_EQUAL reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    ADD             reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    SUBTRACT        reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    OR              reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    XOR             reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    MULTIPLY        reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    QUOTIENT        reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    REMAINDER       reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    SHIFT_LEFT      reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    SHIFT_RIGHT     reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    AND             reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    AND_NOT         reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    RIGHT_BRACKET   reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    RIGHT_PARENTHESIS reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    COLON           reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    COMMA           reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    SEMICOLON       reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LEFT_BRACE      reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    ASSIGNMENT      reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    INCREMENT       reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    DECREMENT       reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)
    ARROW           reduce using rule 149 (FunctionLit -> FUNCTION Signature FunctionBody .)


state 171

    (109) FunctionBody -> Block .

    PERIOD          reduce using rule 109 (FunctionBody -> Block .)
    LEFT_BRACKET    reduce using rule 109 (FunctionBody -> Block .)
    LEFT_PARENTHESIS reduce using rule 109 (FunctionBody -> Block .)
    LOGICAL_OR      reduce using rule 109 (FunctionBody -> Block .)
    LOGICAL_AND     reduce using rule 109 (FunctionBody -> Block .)
    EQUAL           reduce using rule 109 (FunctionBody -> Block .)
    NOT_EQUAL       reduce using rule 109 (FunctionBody -> Block .)
    LESS_THAN       reduce using rule 109 (FunctionBody -> Block .)
    LESS_THAN_EQUAL reduce using rule 109 (FunctionBody -> Block .)
    GREATER_THAN    reduce using rule 109 (FunctionBody -> Block .)
    GREATER_THAN_EQUAL reduce using rule 109 (FunctionBody -> Block .)
    ADD             reduce using rule 109 (FunctionBody -> Block .)
    SUBTRACT        reduce using rule 109 (FunctionBody -> Block .)
    OR              reduce using rule 109 (FunctionBody -> Block .)
    XOR             reduce using rule 109 (FunctionBody -> Block .)
    MULTIPLY        reduce using rule 109 (FunctionBody -> Block .)
    QUOTIENT        reduce using rule 109 (FunctionBody -> Block .)
    REMAINDER       reduce using rule 109 (FunctionBody -> Block .)
    SHIFT_LEFT      reduce using rule 109 (FunctionBody -> Block .)
    SHIFT_RIGHT     reduce using rule 109 (FunctionBody -> Block .)
    AND             reduce using rule 109 (FunctionBody -> Block .)
    AND_NOT         reduce using rule 109 (FunctionBody -> Block .)
    RIGHT_BRACKET   reduce using rule 109 (FunctionBody -> Block .)
    RIGHT_PARENTHESIS reduce using rule 109 (FunctionBody -> Block .)
    COLON           reduce using rule 109 (FunctionBody -> Block .)
    COMMA           reduce using rule 109 (FunctionBody -> Block .)
    SEMICOLON       reduce using rule 109 (FunctionBody -> Block .)
    LEFT_BRACE      reduce using rule 109 (FunctionBody -> Block .)
    ASSIGNMENT      reduce using rule 109 (FunctionBody -> Block .)
    INCREMENT       reduce using rule 109 (FunctionBody -> Block .)
    DECREMENT       reduce using rule 109 (FunctionBody -> Block .)
    ARROW           reduce using rule 109 (FunctionBody -> Block .)


state 172

    (61) Block -> LEFT_BRACE . StatementList RIGHT_BRACE
    (62) StatementList -> . StatementList Statement SEMICOLON
    (63) StatementList -> .

    RIGHT_BRACE     reduce using rule 63 (StatementList -> .)
    GO              reduce using rule 63 (StatementList -> .)
    RETURN          reduce using rule 63 (StatementList -> .)
    BREAK           reduce using rule 63 (StatementList -> .)
    CONTINUE        reduce using rule 63 (StatementList -> .)
    GOTO            reduce using rule 63 (StatementList -> .)
    FALLTHROUGH     reduce using rule 63 (StatementList -> .)
    LEFT_BRACE      reduce using rule 63 (StatementList -> .)
    IF              reduce using rule 63 (StatementList -> .)
    SELECT          reduce using rule 63 (StatementList -> .)
    FOR             reduce using rule 63 (StatementList -> .)
    DEFER           reduce using rule 63 (StatementList -> .)
    CONST           reduce using rule 63 (StatementList -> .)
    TYPE            reduce using rule 63 (StatementList -> .)
    VARIABLE        reduce using rule 63 (StatementList -> .)
    IDENT           reduce using rule 63 (StatementList -> .)
    SWITCH          reduce using rule 63 (StatementList -> .)
    ADD             reduce using rule 63 (StatementList -> .)
    SUBTRACT        reduce using rule 63 (StatementList -> .)
    NOT             reduce using rule 63 (StatementList -> .)
    XOR             reduce using rule 63 (StatementList -> .)
    MULTIPLY        reduce using rule 63 (StatementList -> .)
    AND             reduce using rule 63 (StatementList -> .)
    ARROW           reduce using rule 63 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 63 (StatementList -> .)
    INT             reduce using rule 63 (StatementList -> .)
    FLOAT           reduce using rule 63 (StatementList -> .)
    IMAGINARY       reduce using rule 63 (StatementList -> .)
    RUNE            reduce using rule 63 (StatementList -> .)
    STRING          reduce using rule 63 (StatementList -> .)
    FUNCTION        reduce using rule 63 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 63 (StatementList -> .)
    STRUCT          reduce using rule 63 (StatementList -> .)
    INTERFACE       reduce using rule 63 (StatementList -> .)
    MAP             reduce using rule 63 (StatementList -> .)
    CHAN            reduce using rule 63 (StatementList -> .)
    SEMICOLON       reduce using rule 63 (StatementList -> .)

    StatementList                  shift and go to state 218

state 173

    (18) StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .

    $end            reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    RIGHT_PARENTHESIS reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    LEFT_PARENTHESIS reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    PERIOD          reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    RIGHT_BRACKET   reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    COMMA           reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    ADD             reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    SUBTRACT        reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    NOT             reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    XOR             reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    MULTIPLY        reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    AND             reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    ARROW           reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    IDENT           reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    INT             reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    FLOAT           reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    IMAGINARY       reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    RUNE            reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    STRING          reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    FUNCTION        reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    STRUCT          reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    INTERFACE       reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    MAP             reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    CHAN            reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    SEMICOLON       reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    ASSIGNMENT      reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    COLON           reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)
    LEFT_BRACE      reduce using rule 18 (StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE .)


state 174

    (19) ManyFieldDecl -> ManyFieldDecl FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 219


state 175

    (21) FieldDecl -> IdentifierList . Type TagPlus
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    Type                           shift and go to state 220
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 176

    (22) FieldDecl -> EmbeddedField . TagPlus
    (23) TagPlus -> . Tag
    (24) TagPlus -> .
    (27) Tag -> . STRING

    SEMICOLON       reduce using rule 24 (TagPlus -> .)
    STRING          shift and go to state 223

    TagPlus                        shift and go to state 221
    Tag                            shift and go to state 222

state 177

    (80) IdentifierList -> IDENT . IdentStar
    (4) TypeName -> IDENT .
    (318) PackageName -> IDENT .
    (81) IdentStar -> . COMMA IDENT IdentStar
    (82) IdentStar -> .

    STRING          reduce using rule 4 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 4 (TypeName -> IDENT .)
    PERIOD          reduce using rule 318 (PackageName -> IDENT .)
    COMMA           shift and go to state 187
    LEFT_PARENTHESIS reduce using rule 82 (IdentStar -> .)
    IDENT           reduce using rule 82 (IdentStar -> .)
    LEFT_BRACKET    reduce using rule 82 (IdentStar -> .)
    STRUCT          reduce using rule 82 (IdentStar -> .)
    MULTIPLY        reduce using rule 82 (IdentStar -> .)
    FUNCTION        reduce using rule 82 (IdentStar -> .)
    INTERFACE       reduce using rule 82 (IdentStar -> .)
    MAP             reduce using rule 82 (IdentStar -> .)
    CHAN            reduce using rule 82 (IdentStar -> .)
    ARROW           reduce using rule 82 (IdentStar -> .)

    IdentStar                      shift and go to state 186

state 178

    (25) EmbeddedField -> MULTIPLY . TypeName
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (318) PackageName -> . IDENT

    IDENT           shift and go to state 5

    TypeName                       shift and go to state 224
    QualifiedIdent                 shift and go to state 6
    PackageName                    shift and go to state 15

state 179

    (26) EmbeddedField -> TypeName .

    STRING          reduce using rule 26 (EmbeddedField -> TypeName .)
    SEMICOLON       reduce using rule 26 (EmbeddedField -> TypeName .)


state 180

    (4) TypeName -> IDENT .
    (318) PackageName -> IDENT .
    (80) IdentifierList -> IDENT . IdentStar
    (81) IdentStar -> . COMMA IDENT IdentStar
    (82) IdentStar -> .

    RIGHT_PARENTHESIS reduce using rule 4 (TypeName -> IDENT .)
    PERIOD          reduce using rule 318 (PackageName -> IDENT .)
    COMMA           shift and go to state 187
    ELLIPSIS        reduce using rule 82 (IdentStar -> .)
    LEFT_PARENTHESIS reduce using rule 82 (IdentStar -> .)
    IDENT           reduce using rule 82 (IdentStar -> .)
    LEFT_BRACKET    reduce using rule 82 (IdentStar -> .)
    STRUCT          reduce using rule 82 (IdentStar -> .)
    MULTIPLY        reduce using rule 82 (IdentStar -> .)
    FUNCTION        reduce using rule 82 (IdentStar -> .)
    INTERFACE       reduce using rule 82 (IdentStar -> .)
    MAP             reduce using rule 82 (IdentStar -> .)
    CHAN            reduce using rule 82 (IdentStar -> .)
    ARROW           reduce using rule 82 (IdentStar -> .)

    IdentStar                      shift and go to state 186

state 181

    (36) Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .

    LEFT_PARENTHESIS reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    IDENT           reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    STRUCT          reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    FUNCTION        reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    INTERFACE       reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    MAP             reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    CHAN            reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    $end            reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    PERIOD          reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    ADD             reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    NOT             reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    XOR             reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    AND             reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    INT             reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    FLOAT           reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    IMAGINARY       reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    RUNE            reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    STRING          reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    COLON           reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 36 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)


state 182

    (37) ParameterListPlus -> ParameterList COMMA .

    RIGHT_PARENTHESIS reduce using rule 37 (ParameterListPlus -> ParameterList COMMA .)


state 183

    (41) ParameterList -> ParameterDecl COMMA . ParameterList
    (40) ParameterList -> . ParameterDecl
    (41) ParameterList -> . ParameterDecl COMMA ParameterList
    (42) ParameterDecl -> . IdentifierListPlus EllipsisPlus Type
    (43) IdentifierListPlus -> . IdentifierList
    (44) IdentifierListPlus -> .
    (80) IdentifierList -> . IDENT IdentStar

  ! shift/reduce conflict for IDENT resolved as shift
    ELLIPSIS        reduce using rule 44 (IdentifierListPlus -> .)
    LEFT_PARENTHESIS reduce using rule 44 (IdentifierListPlus -> .)
    LEFT_BRACKET    reduce using rule 44 (IdentifierListPlus -> .)
    STRUCT          reduce using rule 44 (IdentifierListPlus -> .)
    MULTIPLY        reduce using rule 44 (IdentifierListPlus -> .)
    FUNCTION        reduce using rule 44 (IdentifierListPlus -> .)
    INTERFACE       reduce using rule 44 (IdentifierListPlus -> .)
    MAP             reduce using rule 44 (IdentifierListPlus -> .)
    CHAN            reduce using rule 44 (IdentifierListPlus -> .)
    ARROW           reduce using rule 44 (IdentifierListPlus -> .)
    IDENT           shift and go to state 138

  ! IDENT           [ reduce using rule 44 (IdentifierListPlus -> .) ]

    ParameterDecl                  shift and go to state 135
    ParameterList                  shift and go to state 225
    IdentifierListPlus             shift and go to state 136
    IdentifierList                 shift and go to state 137

state 184

    (42) ParameterDecl -> IdentifierListPlus EllipsisPlus . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    Type                           shift and go to state 226
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 185

    (45) EllipsisPlus -> ELLIPSIS .

    LEFT_PARENTHESIS reduce using rule 45 (EllipsisPlus -> ELLIPSIS .)
    IDENT           reduce using rule 45 (EllipsisPlus -> ELLIPSIS .)
    LEFT_BRACKET    reduce using rule 45 (EllipsisPlus -> ELLIPSIS .)
    STRUCT          reduce using rule 45 (EllipsisPlus -> ELLIPSIS .)
    MULTIPLY        reduce using rule 45 (EllipsisPlus -> ELLIPSIS .)
    FUNCTION        reduce using rule 45 (EllipsisPlus -> ELLIPSIS .)
    INTERFACE       reduce using rule 45 (EllipsisPlus -> ELLIPSIS .)
    MAP             reduce using rule 45 (EllipsisPlus -> ELLIPSIS .)
    CHAN            reduce using rule 45 (EllipsisPlus -> ELLIPSIS .)
    ARROW           reduce using rule 45 (EllipsisPlus -> ELLIPSIS .)


state 186

    (80) IdentifierList -> IDENT IdentStar .

    ELLIPSIS        reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    LEFT_PARENTHESIS reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    IDENT           reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    LEFT_BRACKET    reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    STRUCT          reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    MULTIPLY        reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    FUNCTION        reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    INTERFACE       reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    MAP             reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    CHAN            reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    ARROW           reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    DEFINE          reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    ASSIGNMENT      reduce using rule 80 (IdentifierList -> IDENT IdentStar .)
    SEMICOLON       reduce using rule 80 (IdentifierList -> IDENT IdentStar .)


state 187

    (81) IdentStar -> COMMA . IDENT IdentStar

    IDENT           shift and go to state 227


state 188

    (47) InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .

    $end            reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    RIGHT_PARENTHESIS reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    LEFT_PARENTHESIS reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    PERIOD          reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    RIGHT_BRACKET   reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    COMMA           reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    ADD             reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    SUBTRACT        reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    NOT             reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    XOR             reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    MULTIPLY        reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    AND             reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    ARROW           reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    IDENT           reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    INT             reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    FLOAT           reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    IMAGINARY       reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    RUNE            reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    STRING          reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    FUNCTION        reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    STRUCT          reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    INTERFACE       reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    MAP             reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    CHAN            reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    SEMICOLON       reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    ASSIGNMENT      reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    COLON           reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    LEFT_BRACE      reduce using rule 47 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)


state 189

    (48) InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod . SEMICOLON

    SEMICOLON       shift and go to state 228


state 190

    (50) InterfaceTypeMethod -> MethodSpec .

    SEMICOLON       reduce using rule 50 (InterfaceTypeMethod -> MethodSpec .)


state 191

    (51) InterfaceTypeMethod -> InterfaceTypeName .

    SEMICOLON       reduce using rule 51 (InterfaceTypeMethod -> InterfaceTypeName .)


state 192

    (52) MethodSpec -> MethodName . Signature
    (31) Signature -> . Parameters ResultPlus
    (36) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 71

    Signature                      shift and go to state 229
    Parameters                     shift and go to state 70

state 193

    (54) InterfaceTypeName -> TypeName .

    SEMICOLON       reduce using rule 54 (InterfaceTypeName -> TypeName .)


state 194

    (53) MethodName -> IDENT .
    (4) TypeName -> IDENT .
    (318) PackageName -> IDENT .

    LEFT_PARENTHESIS reduce using rule 53 (MethodName -> IDENT .)
    SEMICOLON       reduce using rule 4 (TypeName -> IDENT .)
    PERIOD          reduce using rule 318 (PackageName -> IDENT .)


state 195

    (55) MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET . ElementType
    (16) ElementType -> . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    ElementType                    shift and go to state 230
    Type                           shift and go to state 75
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 196

    (129) LiteralType -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType .

    LEFT_BRACKET    reduce using rule 129 (LiteralType -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType .)


state 197

    (162) TypeAssertion -> PERIOD LEFT_PARENTHESIS Type . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 231


state 198

    (159) Index -> LEFT_BRACKET Expression RIGHT_BRACKET .

    PERIOD          reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LOGICAL_OR      reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LOGICAL_AND     reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    EQUAL           reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    ADD             reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SUBTRACT        reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    OR              reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    XOR             reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    MULTIPLY        reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    QUOTIENT        reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    REMAINDER       reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SHIFT_LEFT      reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SHIFT_RIGHT     reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    AND             reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    AND_NOT         reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    COLON           reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    COMMA           reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    INCREMENT       reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    DECREMENT       reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    ARROW           reduce using rule 159 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)


state 199

    (160) Slice -> LEFT_BRACKET ExpressionPlus COLON . ExpressionPlus RIGHT_BRACKET
    (161) Slice -> LEFT_BRACKET ExpressionPlus COLON . Expression COLON Expression RIGHT_BRACKET
    (253) ExpressionPlus -> . Expression
    (254) ExpressionPlus -> .
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACKET   reduce using rule 254 (ExpressionPlus -> .)
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ExpressionPlus                 shift and go to state 232
    Expression                     shift and go to state 233
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 200

    (163) Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    ADD             reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    OR              reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    XOR             reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    AND             reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    COLON           reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 163 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)


state 201

    (167) ArgumentsInOr -> Type CommaExpressionListPlus .

    RIGHT_PARENTHESIS reduce using rule 167 (ArgumentsInOr -> Type CommaExpressionListPlus .)


state 202

    (206) Conversion -> Type LEFT_PARENTHESIS . Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> Type LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (114) Operand -> LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (3) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName

    LEFT_PARENTHESIS shift and go to state 115
    IDENT           shift and go to state 118
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_BRACKET    shift and go to state 120
    STRUCT          shift and go to state 17
    FUNCTION        shift and go to state 121
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59

    Type                           shift and go to state 117
    Expression                     shift and go to state 234
    UnaryExpr                      shift and go to state 31
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    QualifiedIdent                 shift and go to state 119
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    LiteralType                    shift and go to state 60

state 203

    (168) CommaExpressionListPlus -> COMMA . ExpressionList
    (83) ExpressionList -> . Expression ExpressionStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ExpressionList                 shift and go to state 235
    Expression                     shift and go to state 153
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 204

    (169) CommaExpressionListPlus -> ExpressionList .

    RIGHT_PARENTHESIS reduce using rule 169 (CommaExpressionListPlus -> ExpressionList .)


state 205

    (83) ExpressionList -> Expression ExpressionStar .

    RIGHT_PARENTHESIS reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    ADD             reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    SUBTRACT        reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    OR              reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    XOR             reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    MULTIPLY        reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    QUOTIENT        reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    REMAINDER       reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    SHIFT_LEFT      reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    SHIFT_RIGHT     reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    AND             reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    AND_NOT         reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    ASSIGNMENT      reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    SEMICOLON       reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    LEFT_BRACE      reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)
    COLON           reduce using rule 83 (ExpressionList -> Expression ExpressionStar .)


state 206

    (84) ExpressionStar -> COMMA . Expression ExpressionStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Expression                     shift and go to state 236
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 207

    (206) Conversion -> Type LEFT_PARENTHESIS Expression COMMA . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 237


state 208

    (207) Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ADD             reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    OR              reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    XOR             reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND             reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COLON           reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)


state 209

    (15) ArrayLength -> Expression .
    (174) Expression -> Expression . binary_op Expression
    (144) Key -> Expression .
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    RIGHT_BRACKET   reduce using rule 15 (ArrayLength -> Expression .)
    COLON           reduce using rule 144 (Key -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 210

    (133) LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .

    PERIOD          reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LOGICAL_OR      reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LOGICAL_AND     reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    EQUAL           reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    ADD             reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    SUBTRACT        reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    OR              reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    XOR             reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    MULTIPLY        reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    QUOTIENT        reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    REMAINDER       reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    SHIFT_LEFT      reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    SHIFT_RIGHT     reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    AND             reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    AND_NOT         reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    COLON           reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    COMMA           reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    INCREMENT       reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    DECREMENT       reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    ARROW           reduce using rule 133 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)


state 211

    (135) ElementListPlus -> ElementList COMMA .

    RIGHT_BRACKET   reduce using rule 135 (ElementListPlus -> ElementList COMMA .)


state 212

    (137) ElementList -> KeyedElement KeyedElementStar .

    COMMA           reduce using rule 137 (ElementList -> KeyedElement KeyedElementStar .)
    RIGHT_BRACKET   reduce using rule 137 (ElementList -> KeyedElement KeyedElementStar .)


state 213

    (138) KeyedElementStar -> COMMA . KeyedElement KeyedElementStar
    (140) KeyedElement -> . KeyPlus Element
    (141) KeyPlus -> . Key COLON
    (142) KeyPlus -> .
    (143) Key -> . FieldName
    (144) Key -> . Expression
    (145) Key -> . LiteralValue
    (146) FieldName -> . IDENT
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (133) LiteralValue -> . LEFT_BRACKET ElementListPlus RIGHT_BRACKET
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    IDENT           shift and go to state 169
    LEFT_BRACKET    shift and go to state 160
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

  ! LEFT_BRACKET    [ reduce using rule 142 (KeyPlus -> .) ]
  ! ADD             [ reduce using rule 142 (KeyPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 142 (KeyPlus -> .) ]
  ! NOT             [ reduce using rule 142 (KeyPlus -> .) ]
  ! XOR             [ reduce using rule 142 (KeyPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 142 (KeyPlus -> .) ]
  ! AND             [ reduce using rule 142 (KeyPlus -> .) ]
  ! ARROW           [ reduce using rule 142 (KeyPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 142 (KeyPlus -> .) ]
  ! IDENT           [ reduce using rule 142 (KeyPlus -> .) ]
  ! INT             [ reduce using rule 142 (KeyPlus -> .) ]
  ! FLOAT           [ reduce using rule 142 (KeyPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 142 (KeyPlus -> .) ]
  ! RUNE            [ reduce using rule 142 (KeyPlus -> .) ]
  ! STRING          [ reduce using rule 142 (KeyPlus -> .) ]
  ! FUNCTION        [ reduce using rule 142 (KeyPlus -> .) ]
  ! STRUCT          [ reduce using rule 142 (KeyPlus -> .) ]
  ! INTERFACE       [ reduce using rule 142 (KeyPlus -> .) ]
  ! MAP             [ reduce using rule 142 (KeyPlus -> .) ]
  ! CHAN            [ reduce using rule 142 (KeyPlus -> .) ]

    KeyedElement                   shift and go to state 238
    KeyPlus                        shift and go to state 164
    Key                            shift and go to state 165
    FieldName                      shift and go to state 166
    Expression                     shift and go to state 167
    LiteralValue                   shift and go to state 168
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 214

    (140) KeyedElement -> KeyPlus Element .

    COMMA           reduce using rule 140 (KeyedElement -> KeyPlus Element .)
    RIGHT_BRACKET   reduce using rule 140 (KeyedElement -> KeyPlus Element .)


state 215

    (147) Element -> Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    COMMA           reduce using rule 147 (Element -> Expression .)
    RIGHT_BRACKET   reduce using rule 147 (Element -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 216

    (148) Element -> LiteralValue .

    COMMA           reduce using rule 148 (Element -> LiteralValue .)
    RIGHT_BRACKET   reduce using rule 148 (Element -> LiteralValue .)


state 217

    (141) KeyPlus -> Key COLON .

    LEFT_BRACKET    reduce using rule 141 (KeyPlus -> Key COLON .)
    ADD             reduce using rule 141 (KeyPlus -> Key COLON .)
    SUBTRACT        reduce using rule 141 (KeyPlus -> Key COLON .)
    NOT             reduce using rule 141 (KeyPlus -> Key COLON .)
    XOR             reduce using rule 141 (KeyPlus -> Key COLON .)
    MULTIPLY        reduce using rule 141 (KeyPlus -> Key COLON .)
    AND             reduce using rule 141 (KeyPlus -> Key COLON .)
    ARROW           reduce using rule 141 (KeyPlus -> Key COLON .)
    LEFT_PARENTHESIS reduce using rule 141 (KeyPlus -> Key COLON .)
    IDENT           reduce using rule 141 (KeyPlus -> Key COLON .)
    INT             reduce using rule 141 (KeyPlus -> Key COLON .)
    FLOAT           reduce using rule 141 (KeyPlus -> Key COLON .)
    IMAGINARY       reduce using rule 141 (KeyPlus -> Key COLON .)
    RUNE            reduce using rule 141 (KeyPlus -> Key COLON .)
    STRING          reduce using rule 141 (KeyPlus -> Key COLON .)
    FUNCTION        reduce using rule 141 (KeyPlus -> Key COLON .)
    STRUCT          reduce using rule 141 (KeyPlus -> Key COLON .)
    INTERFACE       reduce using rule 141 (KeyPlus -> Key COLON .)
    MAP             reduce using rule 141 (KeyPlus -> Key COLON .)
    CHAN            reduce using rule 141 (KeyPlus -> Key COLON .)


state 218

    (61) Block -> LEFT_BRACE StatementList . RIGHT_BRACE
    (62) StatementList -> StatementList . Statement SEMICOLON
    (208) Statement -> . Declaration
    (209) Statement -> . LabeledStmt
    (210) Statement -> . SimpleStmt
    (211) Statement -> . GoStmt
    (212) Statement -> . ReturnStmt
    (213) Statement -> . BreakStmt
    (214) Statement -> . ContinueStmt
    (215) Statement -> . GotoStmt
    (216) Statement -> . FallthroughStmt
    (217) Statement -> . Block
    (218) Statement -> . IfStmt
    (219) Statement -> . SwitchStmt
    (220) Statement -> . SelectStmt
    (221) Statement -> . ForStmt
    (222) Statement -> . DeferStmt
    (64) Declaration -> . ConstDecl
    (65) Declaration -> . TypeDecl
    (66) Declaration -> . VarDecl
    (229) LabeledStmt -> . Label COLON Statement
    (223) SimpleStmt -> . ExpressionStmt
    (224) SimpleStmt -> . SendStmt
    (225) SimpleStmt -> . IncDecStmt
    (226) SimpleStmt -> . Assignment
    (227) SimpleStmt -> . ShortVarDecl
    (228) SimpleStmt -> .
    (291) GoStmt -> . GO Expression
    (302) ReturnStmt -> . RETURN ExpressionListPlus
    (305) BreakStmt -> . BREAK LabelPlus
    (308) ContinueStmt -> . CONTINUE LabelPlus
    (309) GotoStmt -> . GOTO Label
    (310) FallthroughStmt -> . FALLTHROUGH
    (61) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (243) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (250) SwitchStmt -> . ExprSwitchStmt
    (251) SwitchStmt -> . TypeSwitchStmt
    (292) SelectStmt -> . SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
    (272) ForStmt -> . FOR ForInternal Block
    (311) DeferStmt -> . DEFER Expression
    (70) ConstDecl -> . CONST ConstSpecOr
    (86) TypeDecl -> . TYPE TypeSpecOr
    (95) VarDecl -> . VARIABLE VarSpec
    (96) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (230) Label -> . IDENT
    (231) ExpressionStmt -> . Expression
    (232) SendStmt -> . Channel ARROW Expression
    (234) IncDecStmt -> . Expression IncDecOr
    (237) Assignment -> . ExpressionList assign_op ExpressionList
    (104) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (252) ExprSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (260) TypeSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (233) Channel -> . Expression
    (83) ExpressionList -> . Expression ExpressionStar
    (80) IdentifierList -> . IDENT IdentStar
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACE     shift and go to state 239
    SEMICOLON       reduce using rule 228 (SimpleStmt -> .)
    GO              shift and go to state 265
    RETURN          shift and go to state 267
    BREAK           shift and go to state 268
    CONTINUE        shift and go to state 269
    GOTO            shift and go to state 270
    FALLTHROUGH     shift and go to state 271
    LEFT_BRACE      shift and go to state 172
    IF              shift and go to state 272
    SELECT          shift and go to state 275
    FOR             shift and go to state 276
    DEFER           shift and go to state 277
    CONST           shift and go to state 278
    TYPE            shift and go to state 279
    VARIABLE        shift and go to state 280
    IDENT           shift and go to state 281
    SWITCH          shift and go to state 285
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Statement                      shift and go to state 240
    Declaration                    shift and go to state 241
    LabeledStmt                    shift and go to state 242
    SimpleStmt                     shift and go to state 243
    GoStmt                         shift and go to state 244
    ReturnStmt                     shift and go to state 245
    BreakStmt                      shift and go to state 246
    ContinueStmt                   shift and go to state 247
    GotoStmt                       shift and go to state 248
    FallthroughStmt                shift and go to state 249
    Block                          shift and go to state 250
    IfStmt                         shift and go to state 251
    SwitchStmt                     shift and go to state 252
    SelectStmt                     shift and go to state 253
    ForStmt                        shift and go to state 254
    DeferStmt                      shift and go to state 255
    ConstDecl                      shift and go to state 256
    TypeDecl                       shift and go to state 257
    VarDecl                        shift and go to state 258
    Label                          shift and go to state 259
    ExpressionStmt                 shift and go to state 260
    SendStmt                       shift and go to state 261
    IncDecStmt                     shift and go to state 262
    Assignment                     shift and go to state 263
    ShortVarDecl                   shift and go to state 264
    Expression                     shift and go to state 266
    ExprSwitchStmt                 shift and go to state 273
    TypeSwitchStmt                 shift and go to state 274
    Channel                        shift and go to state 282
    ExpressionList                 shift and go to state 283
    IdentifierList                 shift and go to state 284
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 219

    (19) ManyFieldDecl -> ManyFieldDecl FieldDecl SEMICOLON .

    RIGHT_BRACE     reduce using rule 19 (ManyFieldDecl -> ManyFieldDecl FieldDecl SEMICOLON .)
    IDENT           reduce using rule 19 (ManyFieldDecl -> ManyFieldDecl FieldDecl SEMICOLON .)
    MULTIPLY        reduce using rule 19 (ManyFieldDecl -> ManyFieldDecl FieldDecl SEMICOLON .)


state 220

    (21) FieldDecl -> IdentifierList Type . TagPlus
    (23) TagPlus -> . Tag
    (24) TagPlus -> .
    (27) Tag -> . STRING

    SEMICOLON       reduce using rule 24 (TagPlus -> .)
    STRING          shift and go to state 223

    TagPlus                        shift and go to state 286
    Tag                            shift and go to state 222

state 221

    (22) FieldDecl -> EmbeddedField TagPlus .

    SEMICOLON       reduce using rule 22 (FieldDecl -> EmbeddedField TagPlus .)


state 222

    (23) TagPlus -> Tag .

    SEMICOLON       reduce using rule 23 (TagPlus -> Tag .)


state 223

    (27) Tag -> STRING .

    SEMICOLON       reduce using rule 27 (Tag -> STRING .)


state 224

    (25) EmbeddedField -> MULTIPLY TypeName .

    STRING          reduce using rule 25 (EmbeddedField -> MULTIPLY TypeName .)
    SEMICOLON       reduce using rule 25 (EmbeddedField -> MULTIPLY TypeName .)


state 225

    (41) ParameterList -> ParameterDecl COMMA ParameterList .

    COMMA           reduce using rule 41 (ParameterList -> ParameterDecl COMMA ParameterList .)
    RIGHT_PARENTHESIS reduce using rule 41 (ParameterList -> ParameterDecl COMMA ParameterList .)


state 226

    (42) ParameterDecl -> IdentifierListPlus EllipsisPlus Type .

    COMMA           reduce using rule 42 (ParameterDecl -> IdentifierListPlus EllipsisPlus Type .)
    RIGHT_PARENTHESIS reduce using rule 42 (ParameterDecl -> IdentifierListPlus EllipsisPlus Type .)


state 227

    (81) IdentStar -> COMMA IDENT . IdentStar
    (81) IdentStar -> . COMMA IDENT IdentStar
    (82) IdentStar -> .

    COMMA           shift and go to state 187
    ELLIPSIS        reduce using rule 82 (IdentStar -> .)
    LEFT_PARENTHESIS reduce using rule 82 (IdentStar -> .)
    IDENT           reduce using rule 82 (IdentStar -> .)
    LEFT_BRACKET    reduce using rule 82 (IdentStar -> .)
    STRUCT          reduce using rule 82 (IdentStar -> .)
    MULTIPLY        reduce using rule 82 (IdentStar -> .)
    FUNCTION        reduce using rule 82 (IdentStar -> .)
    INTERFACE       reduce using rule 82 (IdentStar -> .)
    MAP             reduce using rule 82 (IdentStar -> .)
    CHAN            reduce using rule 82 (IdentStar -> .)
    ARROW           reduce using rule 82 (IdentStar -> .)
    ASSIGNMENT      reduce using rule 82 (IdentStar -> .)
    SEMICOLON       reduce using rule 82 (IdentStar -> .)
    DEFINE          reduce using rule 82 (IdentStar -> .)

    IdentStar                      shift and go to state 287

state 228

    (48) InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod SEMICOLON .

    RIGHT_BRACE     reduce using rule 48 (InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod SEMICOLON .)
    IDENT           reduce using rule 48 (InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod SEMICOLON .)


state 229

    (52) MethodSpec -> MethodName Signature .

    SEMICOLON       reduce using rule 52 (MethodSpec -> MethodName Signature .)


state 230

    (55) MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .

    $end            reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    RIGHT_PARENTHESIS reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    LEFT_PARENTHESIS reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    PERIOD          reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    LEFT_BRACKET    reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    RIGHT_BRACKET   reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    COMMA           reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    ADD             reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    SUBTRACT        reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    NOT             reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    XOR             reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    MULTIPLY        reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    AND             reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    ARROW           reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    IDENT           reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    INT             reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    FLOAT           reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    IMAGINARY       reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    RUNE            reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    STRING          reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    FUNCTION        reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    STRUCT          reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    INTERFACE       reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    MAP             reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    CHAN            reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    SEMICOLON       reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    ASSIGNMENT      reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    COLON           reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)
    LEFT_BRACE      reduce using rule 55 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType .)


state 231

    (162) TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ADD             reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    OR              reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    XOR             reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    AND             reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    COLON           reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 162 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)


state 232

    (160) Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 288


state 233

    (161) Slice -> LEFT_BRACKET ExpressionPlus COLON Expression . COLON Expression RIGHT_BRACKET
    (253) ExpressionPlus -> Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    COLON           shift and go to state 289
    RIGHT_BRACKET   reduce using rule 253 (ExpressionPlus -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 234

    (206) Conversion -> Type LEFT_PARENTHESIS Expression . COMMA RIGHT_PARENTHESIS
    (207) Conversion -> Type LEFT_PARENTHESIS Expression . RIGHT_PARENTHESIS
    (114) Operand -> LEFT_PARENTHESIS Expression . RIGHT_PARENTHESIS
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    COMMA           shift and go to state 207
    RIGHT_PARENTHESIS shift and go to state 290
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 235

    (168) CommaExpressionListPlus -> COMMA ExpressionList .

    RIGHT_PARENTHESIS reduce using rule 168 (CommaExpressionListPlus -> COMMA ExpressionList .)


state 236

    (84) ExpressionStar -> COMMA Expression . ExpressionStar
    (174) Expression -> Expression . binary_op Expression
    (84) ExpressionStar -> . COMMA Expression ExpressionStar
    (85) ExpressionStar -> .
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for QUOTIENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for SHIFT_LEFT resolved as shift
  ! shift/reduce conflict for SHIFT_RIGHT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    COMMA           shift and go to state 206
    RIGHT_PARENTHESIS reduce using rule 85 (ExpressionStar -> .)
    SEMICOLON       reduce using rule 85 (ExpressionStar -> .)
    LEFT_BRACE      reduce using rule 85 (ExpressionStar -> .)
    COLON           reduce using rule 85 (ExpressionStar -> .)
    ASSIGNMENT      reduce using rule 85 (ExpressionStar -> .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

  ! ADD             [ reduce using rule 85 (ExpressionStar -> .) ]
  ! SUBTRACT        [ reduce using rule 85 (ExpressionStar -> .) ]
  ! OR              [ reduce using rule 85 (ExpressionStar -> .) ]
  ! XOR             [ reduce using rule 85 (ExpressionStar -> .) ]
  ! MULTIPLY        [ reduce using rule 85 (ExpressionStar -> .) ]
  ! QUOTIENT        [ reduce using rule 85 (ExpressionStar -> .) ]
  ! REMAINDER       [ reduce using rule 85 (ExpressionStar -> .) ]
  ! SHIFT_LEFT      [ reduce using rule 85 (ExpressionStar -> .) ]
  ! SHIFT_RIGHT     [ reduce using rule 85 (ExpressionStar -> .) ]
  ! AND             [ reduce using rule 85 (ExpressionStar -> .) ]
  ! AND_NOT         [ reduce using rule 85 (ExpressionStar -> .) ]

    ExpressionStar                 shift and go to state 291
    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 237

    (206) Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    ADD             reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    OR              reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    XOR             reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    AND             reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    COLON           reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 206 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)


state 238

    (138) KeyedElementStar -> COMMA KeyedElement . KeyedElementStar
    (138) KeyedElementStar -> . COMMA KeyedElement KeyedElementStar
    (139) KeyedElementStar -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 213
    RIGHT_BRACKET   reduce using rule 139 (KeyedElementStar -> .)

  ! COMMA           [ reduce using rule 139 (KeyedElementStar -> .) ]

    KeyedElementStar               shift and go to state 292

state 239

    (61) Block -> LEFT_BRACE StatementList RIGHT_BRACE .

    PERIOD          reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LEFT_PARENTHESIS reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LOGICAL_OR      reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LOGICAL_AND     reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    EQUAL           reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    NOT_EQUAL       reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LESS_THAN       reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LESS_THAN_EQUAL reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    GREATER_THAN    reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    GREATER_THAN_EQUAL reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    ADD             reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    SUBTRACT        reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    OR              reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    XOR             reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    MULTIPLY        reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    QUOTIENT        reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    REMAINDER       reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    SHIFT_LEFT      reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    SHIFT_RIGHT     reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    AND             reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    AND_NOT         reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    RIGHT_BRACKET   reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    RIGHT_PARENTHESIS reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    COLON           reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    COMMA           reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    SEMICOLON       reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LEFT_BRACE      reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    ASSIGNMENT      reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    INCREMENT       reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    DECREMENT       reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    ARROW           reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    ELSE            reduce using rule 61 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)


state 240

    (62) StatementList -> StatementList Statement . SEMICOLON

    SEMICOLON       shift and go to state 293


state 241

    (208) Statement -> Declaration .

    SEMICOLON       reduce using rule 208 (Statement -> Declaration .)


state 242

    (209) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 209 (Statement -> LabeledStmt .)


state 243

    (210) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 210 (Statement -> SimpleStmt .)


state 244

    (211) Statement -> GoStmt .

    SEMICOLON       reduce using rule 211 (Statement -> GoStmt .)


state 245

    (212) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 212 (Statement -> ReturnStmt .)


state 246

    (213) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 213 (Statement -> BreakStmt .)


state 247

    (214) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 214 (Statement -> ContinueStmt .)


state 248

    (215) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 215 (Statement -> GotoStmt .)


state 249

    (216) Statement -> FallthroughStmt .

    SEMICOLON       reduce using rule 216 (Statement -> FallthroughStmt .)


state 250

    (217) Statement -> Block .

    SEMICOLON       reduce using rule 217 (Statement -> Block .)


state 251

    (218) Statement -> IfStmt .

    SEMICOLON       reduce using rule 218 (Statement -> IfStmt .)


state 252

    (219) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 219 (Statement -> SwitchStmt .)


state 253

    (220) Statement -> SelectStmt .

    SEMICOLON       reduce using rule 220 (Statement -> SelectStmt .)


state 254

    (221) Statement -> ForStmt .

    SEMICOLON       reduce using rule 221 (Statement -> ForStmt .)


state 255

    (222) Statement -> DeferStmt .

    SEMICOLON       reduce using rule 222 (Statement -> DeferStmt .)


state 256

    (64) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 64 (Declaration -> ConstDecl .)


state 257

    (65) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 65 (Declaration -> TypeDecl .)


state 258

    (66) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 66 (Declaration -> VarDecl .)


state 259

    (229) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 294


state 260

    (223) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 223 (SimpleStmt -> ExpressionStmt .)
    LEFT_BRACE      reduce using rule 223 (SimpleStmt -> ExpressionStmt .)


state 261

    (224) SimpleStmt -> SendStmt .

    SEMICOLON       reduce using rule 224 (SimpleStmt -> SendStmt .)
    LEFT_BRACE      reduce using rule 224 (SimpleStmt -> SendStmt .)


state 262

    (225) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 225 (SimpleStmt -> IncDecStmt .)
    LEFT_BRACE      reduce using rule 225 (SimpleStmt -> IncDecStmt .)


state 263

    (226) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 226 (SimpleStmt -> Assignment .)
    LEFT_BRACE      reduce using rule 226 (SimpleStmt -> Assignment .)


state 264

    (227) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 227 (SimpleStmt -> ShortVarDecl .)
    LEFT_BRACE      reduce using rule 227 (SimpleStmt -> ShortVarDecl .)


state 265

    (291) GoStmt -> GO . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Expression                     shift and go to state 295
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 266

    (231) ExpressionStmt -> Expression .
    (234) IncDecStmt -> Expression . IncDecOr
    (174) Expression -> Expression . binary_op Expression
    (233) Channel -> Expression .
    (83) ExpressionList -> Expression . ExpressionStar
    (235) IncDecOr -> . INCREMENT
    (236) IncDecOr -> . DECREMENT
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (84) ExpressionStar -> . COMMA Expression ExpressionStar
    (85) ExpressionStar -> .
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for QUOTIENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for SHIFT_LEFT resolved as shift
  ! shift/reduce conflict for SHIFT_RIGHT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    SEMICOLON       reduce using rule 231 (ExpressionStmt -> Expression .)
    LEFT_BRACE      reduce using rule 231 (ExpressionStmt -> Expression .)
    ARROW           reduce using rule 233 (Channel -> Expression .)
    INCREMENT       shift and go to state 297
    DECREMENT       shift and go to state 298
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    COMMA           shift and go to state 206
    ASSIGNMENT      reduce using rule 85 (ExpressionStar -> .)
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

  ! ADD             [ reduce using rule 85 (ExpressionStar -> .) ]
  ! SUBTRACT        [ reduce using rule 85 (ExpressionStar -> .) ]
  ! OR              [ reduce using rule 85 (ExpressionStar -> .) ]
  ! XOR             [ reduce using rule 85 (ExpressionStar -> .) ]
  ! MULTIPLY        [ reduce using rule 85 (ExpressionStar -> .) ]
  ! QUOTIENT        [ reduce using rule 85 (ExpressionStar -> .) ]
  ! REMAINDER       [ reduce using rule 85 (ExpressionStar -> .) ]
  ! SHIFT_LEFT      [ reduce using rule 85 (ExpressionStar -> .) ]
  ! SHIFT_RIGHT     [ reduce using rule 85 (ExpressionStar -> .) ]
  ! AND             [ reduce using rule 85 (ExpressionStar -> .) ]
  ! AND_NOT         [ reduce using rule 85 (ExpressionStar -> .) ]

    IncDecOr                       shift and go to state 296
    binary_op                      shift and go to state 83
    ExpressionStar                 shift and go to state 205
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 267

    (302) ReturnStmt -> RETURN . ExpressionListPlus
    (303) ExpressionListPlus -> . ExpressionList
    (304) ExpressionListPlus -> .
    (83) ExpressionList -> . Expression ExpressionStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    SEMICOLON       reduce using rule 304 (ExpressionListPlus -> .)
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ExpressionListPlus             shift and go to state 299
    ExpressionList                 shift and go to state 300
    Expression                     shift and go to state 153
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 268

    (305) BreakStmt -> BREAK . LabelPlus
    (306) LabelPlus -> . Label
    (307) LabelPlus -> .
    (230) Label -> . IDENT

    SEMICOLON       reduce using rule 307 (LabelPlus -> .)
    IDENT           shift and go to state 303

    LabelPlus                      shift and go to state 301
    Label                          shift and go to state 302

state 269

    (308) ContinueStmt -> CONTINUE . LabelPlus
    (306) LabelPlus -> . Label
    (307) LabelPlus -> .
    (230) Label -> . IDENT

    SEMICOLON       reduce using rule 307 (LabelPlus -> .)
    IDENT           shift and go to state 303

    LabelPlus                      shift and go to state 304
    Label                          shift and go to state 302

state 270

    (309) GotoStmt -> GOTO . Label
    (230) Label -> . IDENT

    IDENT           shift and go to state 303

    Label                          shift and go to state 305

state 271

    (310) FallthroughStmt -> FALLTHROUGH .

    SEMICOLON       reduce using rule 310 (FallthroughStmt -> FALLTHROUGH .)


state 272

    (243) IfStmt -> IF . SimpleStmtSemicolonPlus Expression Block ElsePlus
    (244) SimpleStmtSemicolonPlus -> . SimpleStmt SEMICOLON
    (245) SimpleStmtSemicolonPlus -> .
    (223) SimpleStmt -> . ExpressionStmt
    (224) SimpleStmt -> . SendStmt
    (225) SimpleStmt -> . IncDecStmt
    (226) SimpleStmt -> . Assignment
    (227) SimpleStmt -> . ShortVarDecl
    (228) SimpleStmt -> .
    (231) ExpressionStmt -> . Expression
    (232) SendStmt -> . Channel ARROW Expression
    (234) IncDecStmt -> . Expression IncDecOr
    (237) Assignment -> . ExpressionList assign_op ExpressionList
    (104) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (233) Channel -> . Expression
    (83) ExpressionList -> . Expression ExpressionStar
    (80) IdentifierList -> . IDENT IdentStar
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    SEMICOLON       reduce using rule 228 (SimpleStmt -> .)
    IDENT           shift and go to state 308
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

  ! ADD             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! NOT             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! XOR             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! AND             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! ARROW           [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! IDENT           [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! INT             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! FLOAT           [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! RUNE            [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! STRING          [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! FUNCTION        [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! STRUCT          [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! INTERFACE       [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! MAP             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! CHAN            [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]

    SimpleStmtSemicolonPlus        shift and go to state 306
    Expression                     shift and go to state 266
    SimpleStmt                     shift and go to state 307
    ExpressionStmt                 shift and go to state 260
    SendStmt                       shift and go to state 261
    IncDecStmt                     shift and go to state 262
    Assignment                     shift and go to state 263
    ShortVarDecl                   shift and go to state 264
    Channel                        shift and go to state 282
    ExpressionList                 shift and go to state 283
    IdentifierList                 shift and go to state 284
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 273

    (250) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 250 (SwitchStmt -> ExprSwitchStmt .)


state 274

    (251) SwitchStmt -> TypeSwitchStmt .

    SEMICOLON       reduce using rule 251 (SwitchStmt -> TypeSwitchStmt .)


state 275

    (292) SelectStmt -> SELECT . LEFT_BRACE CommClausePlus RIGHT_BRACE

    LEFT_BRACE      shift and go to state 309


state 276

    (272) ForStmt -> FOR . ForInternal Block
    (273) ForInternal -> . Condition
    (274) ForInternal -> . ForClause
    (275) ForInternal -> . RangeClause
    (276) ForInternal -> .
    (277) Condition -> . Expression
    (278) ForClause -> . InitStmtPlus SEMICOLON ConditionPlus SEMICOLON PostStmtPlus
    (287) RangeClause -> . ExpListAssignIdListDefOrPlus RANGE Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (279) InitStmtPlus -> . InitStmt
    (280) InitStmtPlus -> .
    (288) ExpListAssignIdListDefOrPlus -> . ExpressionList ASSIGNMENT
    (289) ExpListAssignIdListDefOrPlus -> . IdentifierList DEFINE
    (290) ExpListAssignIdListDefOrPlus -> .
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (285) InitStmt -> . SimpleStmt
    (83) ExpressionList -> . Expression ExpressionStar
    (80) IdentifierList -> . IDENT IdentStar
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (223) SimpleStmt -> . ExpressionStmt
    (224) SimpleStmt -> . SendStmt
    (225) SimpleStmt -> . IncDecStmt
    (226) SimpleStmt -> . Assignment
    (227) SimpleStmt -> . ShortVarDecl
    (228) SimpleStmt -> .
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (231) ExpressionStmt -> . Expression
    (232) SendStmt -> . Channel ARROW Expression
    (234) IncDecStmt -> . Expression IncDecOr
    (237) Assignment -> . ExpressionList assign_op ExpressionList
    (104) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (233) Channel -> . Expression
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

  ! reduce/reduce conflict for SEMICOLON resolved using rule 228 (SimpleStmt -> .)
    LEFT_BRACE      reduce using rule 276 (ForInternal -> .)
    RANGE           reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .)
    IDENT           shift and go to state 308
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    SEMICOLON       reduce using rule 228 (SimpleStmt -> .)
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

  ! SEMICOLON       [ reduce using rule 280 (InitStmtPlus -> .) ]

    ForInternal                    shift and go to state 310
    Condition                      shift and go to state 311
    ForClause                      shift and go to state 312
    RangeClause                    shift and go to state 313
    Expression                     shift and go to state 314
    InitStmtPlus                   shift and go to state 315
    ExpListAssignIdListDefOrPlus   shift and go to state 316
    UnaryExpr                      shift and go to state 31
    InitStmt                       shift and go to state 317
    ExpressionList                 shift and go to state 318
    IdentifierList                 shift and go to state 319
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    SimpleStmt                     shift and go to state 320
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    ExpressionStmt                 shift and go to state 260
    SendStmt                       shift and go to state 261
    IncDecStmt                     shift and go to state 262
    Assignment                     shift and go to state 263
    ShortVarDecl                   shift and go to state 264
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    Channel                        shift and go to state 282
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 277

    (311) DeferStmt -> DEFER . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Expression                     shift and go to state 321
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 278

    (70) ConstDecl -> CONST . ConstSpecOr
    (71) ConstSpecOr -> . ConstSpec
    (72) ConstSpecOr -> . LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS
    (75) ConstSpec -> . IdentifierList TypeAssignmentExpressionListPlus
    (80) IdentifierList -> . IDENT IdentStar

    LEFT_PARENTHESIS shift and go to state 324
    IDENT           shift and go to state 138

    ConstSpecOr                    shift and go to state 322
    ConstSpec                      shift and go to state 323
    IdentifierList                 shift and go to state 325

state 279

    (86) TypeDecl -> TYPE . TypeSpecOr
    (87) TypeSpecOr -> . TypeSpec
    (88) TypeSpecOr -> . LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESIS
    (91) TypeSpec -> . AliasDecl
    (92) TypeSpec -> . TypeDef
    (93) AliasDecl -> . IDENT ASSIGNMENT Type
    (94) TypeDef -> . IDENT Type

    LEFT_PARENTHESIS shift and go to state 328
    IDENT           shift and go to state 331

    TypeSpecOr                     shift and go to state 326
    TypeSpec                       shift and go to state 327
    AliasDecl                      shift and go to state 329
    TypeDef                        shift and go to state 330

state 280

    (95) VarDecl -> VARIABLE . VarSpec
    (96) VarDecl -> VARIABLE . LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (99) VarSpec -> . IdentifierList TypeExpressionListOr
    (80) IdentifierList -> . IDENT IdentStar

    LEFT_PARENTHESIS shift and go to state 333
    IDENT           shift and go to state 138

    VarSpec                        shift and go to state 332
    IdentifierList                 shift and go to state 334

state 281

    (230) Label -> IDENT .
    (80) IdentifierList -> IDENT . IdentStar
    (123) OperandName -> IDENT .
    (4) TypeName -> IDENT .
    (318) PackageName -> IDENT .
    (81) IdentStar -> . COMMA IDENT IdentStar
    (82) IdentStar -> .

  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
  ! shift/reduce conflict for COMMA resolved as shift
    COLON           reduce using rule 230 (Label -> IDENT .)
    INCREMENT       reduce using rule 123 (OperandName -> IDENT .)
    DECREMENT       reduce using rule 123 (OperandName -> IDENT .)
    LOGICAL_OR      reduce using rule 123 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 123 (OperandName -> IDENT .)
    EQUAL           reduce using rule 123 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUBTRACT        reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MULTIPLY        reduce using rule 123 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 123 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 123 (OperandName -> IDENT .)
    ARROW           reduce using rule 123 (OperandName -> IDENT .)
    ASSIGNMENT      reduce using rule 123 (OperandName -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 4 (TypeName -> IDENT .)
    PERIOD          reduce using rule 4 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 4 (TypeName -> IDENT .)
    COMMA           shift and go to state 187
    DEFINE          reduce using rule 82 (IdentStar -> .)

  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 318 (PackageName -> IDENT .) ]

    IdentStar                      shift and go to state 186

state 282

    (232) SendStmt -> Channel . ARROW Expression

    ARROW           shift and go to state 335


state 283

    (237) Assignment -> ExpressionList . assign_op ExpressionList
    (238) assign_op -> . add_op_mul_op_or_plus ASSIGNMENT
    (239) add_op_mul_op_or_plus -> . add_op_mul_op_or
    (240) add_op_mul_op_or_plus -> .
    (241) add_op_mul_op_or -> . add_op
    (242) add_op_mul_op_or -> . mul_op
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    ASSIGNMENT      reduce using rule 240 (add_op_mul_op_or_plus -> .)
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    assign_op                      shift and go to state 336
    add_op_mul_op_or_plus          shift and go to state 337
    add_op_mul_op_or               shift and go to state 338
    add_op                         shift and go to state 339
    mul_op                         shift and go to state 340

state 284

    (104) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 341


state 285

    (252) ExprSwitchStmt -> SWITCH . SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (260) TypeSwitchStmt -> SWITCH . SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (244) SimpleStmtSemicolonPlus -> . SimpleStmt SEMICOLON
    (245) SimpleStmtSemicolonPlus -> .
    (223) SimpleStmt -> . ExpressionStmt
    (224) SimpleStmt -> . SendStmt
    (225) SimpleStmt -> . IncDecStmt
    (226) SimpleStmt -> . Assignment
    (227) SimpleStmt -> . ShortVarDecl
    (228) SimpleStmt -> .
    (231) ExpressionStmt -> . Expression
    (232) SendStmt -> . Channel ARROW Expression
    (234) IncDecStmt -> . Expression IncDecOr
    (237) Assignment -> . ExpressionList assign_op ExpressionList
    (104) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (233) Channel -> . Expression
    (83) ExpressionList -> . Expression ExpressionStar
    (80) IdentifierList -> . IDENT IdentStar
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    LEFT_BRACE      reduce using rule 245 (SimpleStmtSemicolonPlus -> .)
    SEMICOLON       reduce using rule 228 (SimpleStmt -> .)
    IDENT           shift and go to state 308
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

  ! IDENT           [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! ADD             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! NOT             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! XOR             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! AND             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! ARROW           [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! INT             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! FLOAT           [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! RUNE            [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! STRING          [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! FUNCTION        [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! STRUCT          [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! INTERFACE       [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! MAP             [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]
  ! CHAN            [ reduce using rule 245 (SimpleStmtSemicolonPlus -> .) ]

    SimpleStmtSemicolonPlus        shift and go to state 342
    SimpleStmt                     shift and go to state 307
    ExpressionStmt                 shift and go to state 260
    SendStmt                       shift and go to state 261
    IncDecStmt                     shift and go to state 262
    Assignment                     shift and go to state 263
    ShortVarDecl                   shift and go to state 264
    Expression                     shift and go to state 266
    Channel                        shift and go to state 282
    ExpressionList                 shift and go to state 283
    IdentifierList                 shift and go to state 284
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 286

    (21) FieldDecl -> IdentifierList Type TagPlus .

    SEMICOLON       reduce using rule 21 (FieldDecl -> IdentifierList Type TagPlus .)


state 287

    (81) IdentStar -> COMMA IDENT IdentStar .

    ELLIPSIS        reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    LEFT_PARENTHESIS reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    IDENT           reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    LEFT_BRACKET    reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    STRUCT          reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    MULTIPLY        reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    FUNCTION        reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    INTERFACE       reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    MAP             reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    CHAN            reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    ARROW           reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    ASSIGNMENT      reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    SEMICOLON       reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)
    DEFINE          reduce using rule 81 (IdentStar -> COMMA IDENT IdentStar .)


state 288

    (160) Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .

    PERIOD          reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LOGICAL_OR      reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LOGICAL_AND     reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    EQUAL           reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    ADD             reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    SUBTRACT        reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    OR              reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    XOR             reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    MULTIPLY        reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    QUOTIENT        reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    REMAINDER       reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    SHIFT_LEFT      reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    SHIFT_RIGHT     reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    AND             reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    AND_NOT         reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    COLON           reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    COMMA           reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    INCREMENT       reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    DECREMENT       reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    ARROW           reduce using rule 160 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)


state 289

    (161) Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON . Expression RIGHT_BRACKET
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Expression                     shift and go to state 343
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 290

    (207) Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .
    (114) Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .

  ! reduce/reduce conflict for PERIOD resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for COMMA resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for EQUAL resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LESS_THAN_EQUAL resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for GREATER_THAN_EQUAL resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for ADD resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for OR resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for XOR resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for MULTIPLY resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for QUOTIENT resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for REMAINDER resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for SHIFT_LEFT resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for SHIFT_RIGHT resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for AND resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for AND_NOT resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for RIGHT_PARENTHESIS resolved using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    PERIOD          reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ADD             reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    OR              reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    XOR             reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND             reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 114 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)

  ! PERIOD          [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LEFT_BRACKET    [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! COMMA           [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LOGICAL_OR      [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LOGICAL_AND     [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! EQUAL           [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! NOT_EQUAL       [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LESS_THAN       [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! GREATER_THAN    [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! ADD             [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! SUBTRACT        [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! OR              [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! XOR             [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! MULTIPLY        [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! QUOTIENT        [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! REMAINDER       [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! SHIFT_LEFT      [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! SHIFT_RIGHT     [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! AND             [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! AND_NOT         [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 207 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]


state 291

    (84) ExpressionStar -> COMMA Expression ExpressionStar .

    RIGHT_PARENTHESIS reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    SEMICOLON       reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    LEFT_BRACE      reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    COLON           reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    ADD             reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    SUBTRACT        reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    OR              reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    XOR             reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    MULTIPLY        reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    QUOTIENT        reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    REMAINDER       reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    SHIFT_LEFT      reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    SHIFT_RIGHT     reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    AND             reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    AND_NOT         reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)
    ASSIGNMENT      reduce using rule 84 (ExpressionStar -> COMMA Expression ExpressionStar .)


state 292

    (138) KeyedElementStar -> COMMA KeyedElement KeyedElementStar .

    COMMA           reduce using rule 138 (KeyedElementStar -> COMMA KeyedElement KeyedElementStar .)
    RIGHT_BRACKET   reduce using rule 138 (KeyedElementStar -> COMMA KeyedElement KeyedElementStar .)


state 293

    (62) StatementList -> StatementList Statement SEMICOLON .

    RIGHT_BRACE     reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    GO              reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    RETURN          reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    BREAK           reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    CONTINUE        reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    GOTO            reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    FALLTHROUGH     reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    LEFT_BRACE      reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    IF              reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    SELECT          reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    FOR             reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    DEFER           reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    CONST           reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    TYPE            reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    VARIABLE        reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    IDENT           reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    SWITCH          reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    ADD             reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    SUBTRACT        reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    NOT             reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    XOR             reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    MULTIPLY        reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    AND             reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    ARROW           reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    INT             reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    FLOAT           reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    IMAGINARY       reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    RUNE            reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    STRING          reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    FUNCTION        reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    LEFT_BRACKET    reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    STRUCT          reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    INTERFACE       reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    MAP             reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    CHAN            reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    SEMICOLON       reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    CASE            reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)
    DEFAULT         reduce using rule 62 (StatementList -> StatementList Statement SEMICOLON .)


state 294

    (229) LabeledStmt -> Label COLON . Statement
    (208) Statement -> . Declaration
    (209) Statement -> . LabeledStmt
    (210) Statement -> . SimpleStmt
    (211) Statement -> . GoStmt
    (212) Statement -> . ReturnStmt
    (213) Statement -> . BreakStmt
    (214) Statement -> . ContinueStmt
    (215) Statement -> . GotoStmt
    (216) Statement -> . FallthroughStmt
    (217) Statement -> . Block
    (218) Statement -> . IfStmt
    (219) Statement -> . SwitchStmt
    (220) Statement -> . SelectStmt
    (221) Statement -> . ForStmt
    (222) Statement -> . DeferStmt
    (64) Declaration -> . ConstDecl
    (65) Declaration -> . TypeDecl
    (66) Declaration -> . VarDecl
    (229) LabeledStmt -> . Label COLON Statement
    (223) SimpleStmt -> . ExpressionStmt
    (224) SimpleStmt -> . SendStmt
    (225) SimpleStmt -> . IncDecStmt
    (226) SimpleStmt -> . Assignment
    (227) SimpleStmt -> . ShortVarDecl
    (228) SimpleStmt -> .
    (291) GoStmt -> . GO Expression
    (302) ReturnStmt -> . RETURN ExpressionListPlus
    (305) BreakStmt -> . BREAK LabelPlus
    (308) ContinueStmt -> . CONTINUE LabelPlus
    (309) GotoStmt -> . GOTO Label
    (310) FallthroughStmt -> . FALLTHROUGH
    (61) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (243) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (250) SwitchStmt -> . ExprSwitchStmt
    (251) SwitchStmt -> . TypeSwitchStmt
    (292) SelectStmt -> . SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
    (272) ForStmt -> . FOR ForInternal Block
    (311) DeferStmt -> . DEFER Expression
    (70) ConstDecl -> . CONST ConstSpecOr
    (86) TypeDecl -> . TYPE TypeSpecOr
    (95) VarDecl -> . VARIABLE VarSpec
    (96) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (230) Label -> . IDENT
    (231) ExpressionStmt -> . Expression
    (232) SendStmt -> . Channel ARROW Expression
    (234) IncDecStmt -> . Expression IncDecOr
    (237) Assignment -> . ExpressionList assign_op ExpressionList
    (104) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (252) ExprSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (260) TypeSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (233) Channel -> . Expression
    (83) ExpressionList -> . Expression ExpressionStar
    (80) IdentifierList -> . IDENT IdentStar
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    SEMICOLON       reduce using rule 228 (SimpleStmt -> .)
    GO              shift and go to state 265
    RETURN          shift and go to state 267
    BREAK           shift and go to state 268
    CONTINUE        shift and go to state 269
    GOTO            shift and go to state 270
    FALLTHROUGH     shift and go to state 271
    LEFT_BRACE      shift and go to state 172
    IF              shift and go to state 272
    SELECT          shift and go to state 275
    FOR             shift and go to state 276
    DEFER           shift and go to state 277
    CONST           shift and go to state 278
    TYPE            shift and go to state 279
    VARIABLE        shift and go to state 280
    IDENT           shift and go to state 281
    SWITCH          shift and go to state 285
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Label                          shift and go to state 259
    Statement                      shift and go to state 344
    Declaration                    shift and go to state 241
    LabeledStmt                    shift and go to state 242
    SimpleStmt                     shift and go to state 243
    GoStmt                         shift and go to state 244
    ReturnStmt                     shift and go to state 245
    BreakStmt                      shift and go to state 246
    ContinueStmt                   shift and go to state 247
    GotoStmt                       shift and go to state 248
    FallthroughStmt                shift and go to state 249
    Block                          shift and go to state 250
    IfStmt                         shift and go to state 251
    SwitchStmt                     shift and go to state 252
    SelectStmt                     shift and go to state 253
    ForStmt                        shift and go to state 254
    DeferStmt                      shift and go to state 255
    ConstDecl                      shift and go to state 256
    TypeDecl                       shift and go to state 257
    VarDecl                        shift and go to state 258
    ExpressionStmt                 shift and go to state 260
    SendStmt                       shift and go to state 261
    IncDecStmt                     shift and go to state 262
    Assignment                     shift and go to state 263
    ShortVarDecl                   shift and go to state 264
    Expression                     shift and go to state 266
    ExprSwitchStmt                 shift and go to state 273
    TypeSwitchStmt                 shift and go to state 274
    Channel                        shift and go to state 282
    ExpressionList                 shift and go to state 283
    IdentifierList                 shift and go to state 284
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 295

    (291) GoStmt -> GO Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    SEMICOLON       reduce using rule 291 (GoStmt -> GO Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 296

    (234) IncDecStmt -> Expression IncDecOr .

    SEMICOLON       reduce using rule 234 (IncDecStmt -> Expression IncDecOr .)
    LEFT_BRACE      reduce using rule 234 (IncDecStmt -> Expression IncDecOr .)


state 297

    (235) IncDecOr -> INCREMENT .

    SEMICOLON       reduce using rule 235 (IncDecOr -> INCREMENT .)
    LEFT_BRACE      reduce using rule 235 (IncDecOr -> INCREMENT .)


state 298

    (236) IncDecOr -> DECREMENT .

    SEMICOLON       reduce using rule 236 (IncDecOr -> DECREMENT .)
    LEFT_BRACE      reduce using rule 236 (IncDecOr -> DECREMENT .)


state 299

    (302) ReturnStmt -> RETURN ExpressionListPlus .

    SEMICOLON       reduce using rule 302 (ReturnStmt -> RETURN ExpressionListPlus .)


state 300

    (303) ExpressionListPlus -> ExpressionList .

    SEMICOLON       reduce using rule 303 (ExpressionListPlus -> ExpressionList .)


state 301

    (305) BreakStmt -> BREAK LabelPlus .

    SEMICOLON       reduce using rule 305 (BreakStmt -> BREAK LabelPlus .)


state 302

    (306) LabelPlus -> Label .

    SEMICOLON       reduce using rule 306 (LabelPlus -> Label .)


state 303

    (230) Label -> IDENT .

    SEMICOLON       reduce using rule 230 (Label -> IDENT .)


state 304

    (308) ContinueStmt -> CONTINUE LabelPlus .

    SEMICOLON       reduce using rule 308 (ContinueStmt -> CONTINUE LabelPlus .)


state 305

    (309) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 309 (GotoStmt -> GOTO Label .)


state 306

    (243) IfStmt -> IF SimpleStmtSemicolonPlus . Expression Block ElsePlus
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Expression                     shift and go to state 345
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 307

    (244) SimpleStmtSemicolonPlus -> SimpleStmt . SEMICOLON

    SEMICOLON       shift and go to state 346


state 308

    (80) IdentifierList -> IDENT . IdentStar
    (123) OperandName -> IDENT .
    (4) TypeName -> IDENT .
    (318) PackageName -> IDENT .
    (81) IdentStar -> . COMMA IDENT IdentStar
    (82) IdentStar -> .

  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
  ! shift/reduce conflict for COMMA resolved as shift
    INCREMENT       reduce using rule 123 (OperandName -> IDENT .)
    DECREMENT       reduce using rule 123 (OperandName -> IDENT .)
    LOGICAL_OR      reduce using rule 123 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 123 (OperandName -> IDENT .)
    EQUAL           reduce using rule 123 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUBTRACT        reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MULTIPLY        reduce using rule 123 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 123 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 123 (OperandName -> IDENT .)
    ARROW           reduce using rule 123 (OperandName -> IDENT .)
    ASSIGNMENT      reduce using rule 123 (OperandName -> IDENT .)
    LEFT_BRACE      reduce using rule 123 (OperandName -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 4 (TypeName -> IDENT .)
    PERIOD          reduce using rule 4 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 4 (TypeName -> IDENT .)
    COMMA           shift and go to state 187
    DEFINE          reduce using rule 82 (IdentStar -> .)

  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 318 (PackageName -> IDENT .) ]

    IdentStar                      shift and go to state 186

state 309

    (292) SelectStmt -> SELECT LEFT_BRACE . CommClausePlus RIGHT_BRACE
    (293) CommClausePlus -> . CommClausePlus CommClause
    (294) CommClausePlus -> .

    RIGHT_BRACE     reduce using rule 294 (CommClausePlus -> .)
    CASE            reduce using rule 294 (CommClausePlus -> .)
    DEFAULT         reduce using rule 294 (CommClausePlus -> .)

    CommClausePlus                 shift and go to state 347

state 310

    (272) ForStmt -> FOR ForInternal . Block
    (61) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    LEFT_BRACE      shift and go to state 172

    Block                          shift and go to state 348

state 311

    (273) ForInternal -> Condition .

    LEFT_BRACE      reduce using rule 273 (ForInternal -> Condition .)


state 312

    (274) ForInternal -> ForClause .

    LEFT_BRACE      reduce using rule 274 (ForInternal -> ForClause .)


state 313

    (275) ForInternal -> RangeClause .

    LEFT_BRACE      reduce using rule 275 (ForInternal -> RangeClause .)


state 314

    (277) Condition -> Expression .
    (174) Expression -> Expression . binary_op Expression
    (83) ExpressionList -> Expression . ExpressionStar
    (231) ExpressionStmt -> Expression .
    (234) IncDecStmt -> Expression . IncDecOr
    (233) Channel -> Expression .
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (84) ExpressionStar -> . COMMA Expression ExpressionStar
    (85) ExpressionStar -> .
    (235) IncDecOr -> . INCREMENT
    (236) IncDecOr -> . DECREMENT
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for QUOTIENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for SHIFT_LEFT resolved as shift
  ! shift/reduce conflict for SHIFT_RIGHT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    LEFT_BRACE      reduce using rule 277 (Condition -> Expression .)
    SEMICOLON       reduce using rule 231 (ExpressionStmt -> Expression .)
    ARROW           reduce using rule 233 (Channel -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    COMMA           shift and go to state 206
    ASSIGNMENT      reduce using rule 85 (ExpressionStar -> .)
    INCREMENT       shift and go to state 297
    DECREMENT       shift and go to state 298
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

  ! ADD             [ reduce using rule 85 (ExpressionStar -> .) ]
  ! SUBTRACT        [ reduce using rule 85 (ExpressionStar -> .) ]
  ! OR              [ reduce using rule 85 (ExpressionStar -> .) ]
  ! XOR             [ reduce using rule 85 (ExpressionStar -> .) ]
  ! MULTIPLY        [ reduce using rule 85 (ExpressionStar -> .) ]
  ! QUOTIENT        [ reduce using rule 85 (ExpressionStar -> .) ]
  ! REMAINDER       [ reduce using rule 85 (ExpressionStar -> .) ]
  ! SHIFT_LEFT      [ reduce using rule 85 (ExpressionStar -> .) ]
  ! SHIFT_RIGHT     [ reduce using rule 85 (ExpressionStar -> .) ]
  ! AND             [ reduce using rule 85 (ExpressionStar -> .) ]
  ! AND_NOT         [ reduce using rule 85 (ExpressionStar -> .) ]

    binary_op                      shift and go to state 83
    ExpressionStar                 shift and go to state 205
    IncDecOr                       shift and go to state 296
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 315

    (278) ForClause -> InitStmtPlus . SEMICOLON ConditionPlus SEMICOLON PostStmtPlus

    SEMICOLON       shift and go to state 349


state 316

    (287) RangeClause -> ExpListAssignIdListDefOrPlus . RANGE Expression

    RANGE           shift and go to state 350


state 317

    (279) InitStmtPlus -> InitStmt .

    SEMICOLON       reduce using rule 279 (InitStmtPlus -> InitStmt .)


state 318

    (288) ExpListAssignIdListDefOrPlus -> ExpressionList . ASSIGNMENT
    (237) Assignment -> ExpressionList . assign_op ExpressionList
    (238) assign_op -> . add_op_mul_op_or_plus ASSIGNMENT
    (239) add_op_mul_op_or_plus -> . add_op_mul_op_or
    (240) add_op_mul_op_or_plus -> .
    (241) add_op_mul_op_or -> . add_op
    (242) add_op_mul_op_or -> . mul_op
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

  ! shift/reduce conflict for ASSIGNMENT resolved as shift
    ASSIGNMENT      shift and go to state 351
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

  ! ASSIGNMENT      [ reduce using rule 240 (add_op_mul_op_or_plus -> .) ]

    assign_op                      shift and go to state 336
    add_op_mul_op_or_plus          shift and go to state 337
    add_op_mul_op_or               shift and go to state 338
    add_op                         shift and go to state 339
    mul_op                         shift and go to state 340

state 319

    (289) ExpListAssignIdListDefOrPlus -> IdentifierList . DEFINE
    (104) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 352


state 320

    (285) InitStmt -> SimpleStmt .

    SEMICOLON       reduce using rule 285 (InitStmt -> SimpleStmt .)


state 321

    (311) DeferStmt -> DEFER Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    SEMICOLON       reduce using rule 311 (DeferStmt -> DEFER Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 322

    (70) ConstDecl -> CONST ConstSpecOr .

    SEMICOLON       reduce using rule 70 (ConstDecl -> CONST ConstSpecOr .)


state 323

    (71) ConstSpecOr -> ConstSpec .

    SEMICOLON       reduce using rule 71 (ConstSpecOr -> ConstSpec .)


state 324

    (72) ConstSpecOr -> LEFT_PARENTHESIS . ConstSpecStar RIGHT_PARENTHESIS
    (73) ConstSpecStar -> . ConstSpecStar ConstSpec SEMICOLON
    (74) ConstSpecStar -> .

    RIGHT_PARENTHESIS reduce using rule 74 (ConstSpecStar -> .)
    IDENT           reduce using rule 74 (ConstSpecStar -> .)

    ConstSpecStar                  shift and go to state 353

state 325

    (75) ConstSpec -> IdentifierList . TypeAssignmentExpressionListPlus
    (76) TypeAssignmentExpressionListPlus -> . TypePlus ASSIGNMENT ExpressionList
    (77) TypeAssignmentExpressionListPlus -> .
    (78) TypePlus -> . Type
    (79) TypePlus -> .
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    SEMICOLON       reduce using rule 77 (TypeAssignmentExpressionListPlus -> .)
    ASSIGNMENT      reduce using rule 79 (TypePlus -> .)
    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    TypeAssignmentExpressionListPlus shift and go to state 354
    TypePlus                       shift and go to state 355
    Type                           shift and go to state 356
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 326

    (86) TypeDecl -> TYPE TypeSpecOr .

    SEMICOLON       reduce using rule 86 (TypeDecl -> TYPE TypeSpecOr .)


state 327

    (87) TypeSpecOr -> TypeSpec .

    SEMICOLON       reduce using rule 87 (TypeSpecOr -> TypeSpec .)


state 328

    (88) TypeSpecOr -> LEFT_PARENTHESIS . TypeSpecStar RIGHT_PARENTHESIS
    (89) TypeSpecStar -> . TypeSpecStar TypeSpec SEMICOLON
    (90) TypeSpecStar -> .

    RIGHT_PARENTHESIS reduce using rule 90 (TypeSpecStar -> .)
    IDENT           reduce using rule 90 (TypeSpecStar -> .)

    TypeSpecStar                   shift and go to state 357

state 329

    (91) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 91 (TypeSpec -> AliasDecl .)


state 330

    (92) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 92 (TypeSpec -> TypeDef .)


state 331

    (93) AliasDecl -> IDENT . ASSIGNMENT Type
    (94) TypeDef -> IDENT . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ASSIGNMENT      shift and go to state 358
    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    Type                           shift and go to state 359
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 332

    (95) VarDecl -> VARIABLE VarSpec .

    SEMICOLON       reduce using rule 95 (VarDecl -> VARIABLE VarSpec .)


state 333

    (96) VarDecl -> VARIABLE LEFT_PARENTHESIS . VarSpecStar RIGHT_PARENTHESIS
    (97) VarSpecStar -> . VarSpecStar VarSpec SEMICOLON
    (98) VarSpecStar -> .

    RIGHT_PARENTHESIS reduce using rule 98 (VarSpecStar -> .)
    IDENT           reduce using rule 98 (VarSpecStar -> .)

    VarSpecStar                    shift and go to state 360

state 334

    (99) VarSpec -> IdentifierList . TypeExpressionListOr
    (100) TypeExpressionListOr -> . Type AssignmentExpressionListPlus
    (101) TypeExpressionListOr -> . ASSIGNMENT ExpressionList
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ASSIGNMENT      shift and go to state 363
    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    TypeExpressionListOr           shift and go to state 361
    Type                           shift and go to state 362
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 335

    (232) SendStmt -> Channel ARROW . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Expression                     shift and go to state 364
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 336

    (237) Assignment -> ExpressionList assign_op . ExpressionList
    (83) ExpressionList -> . Expression ExpressionStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ExpressionList                 shift and go to state 365
    Expression                     shift and go to state 153
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 337

    (238) assign_op -> add_op_mul_op_or_plus . ASSIGNMENT

    ASSIGNMENT      shift and go to state 366


state 338

    (239) add_op_mul_op_or_plus -> add_op_mul_op_or .

    ASSIGNMENT      reduce using rule 239 (add_op_mul_op_or_plus -> add_op_mul_op_or .)


state 339

    (241) add_op_mul_op_or -> add_op .

    ASSIGNMENT      reduce using rule 241 (add_op_mul_op_or -> add_op .)


state 340

    (242) add_op_mul_op_or -> mul_op .

    ASSIGNMENT      reduce using rule 242 (add_op_mul_op_or -> mul_op .)


state 341

    (104) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (83) ExpressionList -> . Expression ExpressionStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ExpressionList                 shift and go to state 367
    Expression                     shift and go to state 153
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 342

    (252) ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus . ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (260) TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus . TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (253) ExpressionPlus -> . Expression
    (254) ExpressionPlus -> .
    (263) TypeSwitchGuard -> . IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (264) IdentDefinePlus -> . IDENT DEFINE
    (265) IdentDefinePlus -> .
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    LEFT_BRACE      reduce using rule 254 (ExpressionPlus -> .)
    IDENT           shift and go to state 372
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

  ! LEFT_PARENTHESIS [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! IDENT           [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! INT             [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! FLOAT           [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! IMAGINARY       [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! RUNE            [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! STRING          [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! FUNCTION        [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! STRUCT          [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! MULTIPLY        [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! INTERFACE       [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! MAP             [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! CHAN            [ reduce using rule 265 (IdentDefinePlus -> .) ]
  ! ARROW           [ reduce using rule 265 (IdentDefinePlus -> .) ]

    ExpressionPlus                 shift and go to state 368
    TypeSwitchGuard                shift and go to state 369
    Expression                     shift and go to state 370
    IdentDefinePlus                shift and go to state 371
    PrimaryExpr                    shift and go to state 32
    UnaryExpr                      shift and go to state 31
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 343

    (161) Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression . RIGHT_BRACKET
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    RIGHT_BRACKET   shift and go to state 373
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 344

    (229) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 229 (LabeledStmt -> Label COLON Statement .)


state 345

    (243) IfStmt -> IF SimpleStmtSemicolonPlus Expression . Block ElsePlus
    (174) Expression -> Expression . binary_op Expression
    (61) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    LEFT_BRACE      shift and go to state 172
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    Block                          shift and go to state 374
    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 346

    (244) SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .

    ADD             reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    SUBTRACT        reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    NOT             reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    XOR             reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    MULTIPLY        reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    AND             reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    ARROW           reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    IDENT           reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    INT             reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    FLOAT           reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    IMAGINARY       reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    RUNE            reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    STRING          reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    FUNCTION        reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    LEFT_BRACKET    reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    STRUCT          reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    INTERFACE       reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    MAP             reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    CHAN            reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    LEFT_BRACE      reduce using rule 244 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)


state 347

    (292) SelectStmt -> SELECT LEFT_BRACE CommClausePlus . RIGHT_BRACE
    (293) CommClausePlus -> CommClausePlus . CommClause
    (295) CommClause -> . CommCase COLON StatementList
    (296) CommCase -> . CASE SentStmtRecvStmtOr
    (297) CommCase -> . DEFAULT

    RIGHT_BRACE     shift and go to state 375
    CASE            shift and go to state 378
    DEFAULT         shift and go to state 379

    CommClause                     shift and go to state 376
    CommCase                       shift and go to state 377

state 348

    (272) ForStmt -> FOR ForInternal Block .

    SEMICOLON       reduce using rule 272 (ForStmt -> FOR ForInternal Block .)


state 349

    (278) ForClause -> InitStmtPlus SEMICOLON . ConditionPlus SEMICOLON PostStmtPlus
    (281) ConditionPlus -> . Condition
    (282) ConditionPlus -> .
    (277) Condition -> . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    SEMICOLON       reduce using rule 282 (ConditionPlus -> .)
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ConditionPlus                  shift and go to state 380
    Condition                      shift and go to state 381
    Expression                     shift and go to state 382
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 350

    (287) RangeClause -> ExpListAssignIdListDefOrPlus RANGE . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Expression                     shift and go to state 383
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 351

    (288) ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .

    RANGE           reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    ADD             reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    SUBTRACT        reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    NOT             reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    XOR             reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    MULTIPLY        reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    AND             reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    ARROW           reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    IDENT           reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    INT             reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    FLOAT           reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    IMAGINARY       reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    RUNE            reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    STRING          reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    FUNCTION        reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    LEFT_BRACKET    reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    STRUCT          reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    INTERFACE       reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    MAP             reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    CHAN            reduce using rule 288 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)


state 352

    (289) ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .
    (104) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (83) ExpressionList -> . Expression ExpressionStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    RANGE           reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ExpressionList                 shift and go to state 367
    Expression                     shift and go to state 153
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 353

    (72) ConstSpecOr -> LEFT_PARENTHESIS ConstSpecStar . RIGHT_PARENTHESIS
    (73) ConstSpecStar -> ConstSpecStar . ConstSpec SEMICOLON
    (75) ConstSpec -> . IdentifierList TypeAssignmentExpressionListPlus
    (80) IdentifierList -> . IDENT IdentStar

    RIGHT_PARENTHESIS shift and go to state 384
    IDENT           shift and go to state 138

    ConstSpec                      shift and go to state 385
    IdentifierList                 shift and go to state 325

state 354

    (75) ConstSpec -> IdentifierList TypeAssignmentExpressionListPlus .

    SEMICOLON       reduce using rule 75 (ConstSpec -> IdentifierList TypeAssignmentExpressionListPlus .)


state 355

    (76) TypeAssignmentExpressionListPlus -> TypePlus . ASSIGNMENT ExpressionList

    ASSIGNMENT      shift and go to state 386


state 356

    (78) TypePlus -> Type .

    ASSIGNMENT      reduce using rule 78 (TypePlus -> Type .)


state 357

    (88) TypeSpecOr -> LEFT_PARENTHESIS TypeSpecStar . RIGHT_PARENTHESIS
    (89) TypeSpecStar -> TypeSpecStar . TypeSpec SEMICOLON
    (91) TypeSpec -> . AliasDecl
    (92) TypeSpec -> . TypeDef
    (93) AliasDecl -> . IDENT ASSIGNMENT Type
    (94) TypeDef -> . IDENT Type

    RIGHT_PARENTHESIS shift and go to state 387
    IDENT           shift and go to state 331

    TypeSpec                       shift and go to state 388
    AliasDecl                      shift and go to state 329
    TypeDef                        shift and go to state 330

state 358

    (93) AliasDecl -> IDENT ASSIGNMENT . Type
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    Type                           shift and go to state 389
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 359

    (94) TypeDef -> IDENT Type .

    SEMICOLON       reduce using rule 94 (TypeDef -> IDENT Type .)


state 360

    (96) VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar . RIGHT_PARENTHESIS
    (97) VarSpecStar -> VarSpecStar . VarSpec SEMICOLON
    (99) VarSpec -> . IdentifierList TypeExpressionListOr
    (80) IdentifierList -> . IDENT IdentStar

    RIGHT_PARENTHESIS shift and go to state 390
    IDENT           shift and go to state 138

    VarSpec                        shift and go to state 391
    IdentifierList                 shift and go to state 334

state 361

    (99) VarSpec -> IdentifierList TypeExpressionListOr .

    SEMICOLON       reduce using rule 99 (VarSpec -> IdentifierList TypeExpressionListOr .)


state 362

    (100) TypeExpressionListOr -> Type . AssignmentExpressionListPlus
    (102) AssignmentExpressionListPlus -> . ASSIGNMENT Expression
    (103) AssignmentExpressionListPlus -> .

    ASSIGNMENT      shift and go to state 393
    SEMICOLON       reduce using rule 103 (AssignmentExpressionListPlus -> .)

    AssignmentExpressionListPlus   shift and go to state 392

state 363

    (101) TypeExpressionListOr -> ASSIGNMENT . ExpressionList
    (83) ExpressionList -> . Expression ExpressionStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ExpressionList                 shift and go to state 394
    Expression                     shift and go to state 153
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 364

    (232) SendStmt -> Channel ARROW Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    SEMICOLON       reduce using rule 232 (SendStmt -> Channel ARROW Expression .)
    COLON           reduce using rule 232 (SendStmt -> Channel ARROW Expression .)
    LEFT_BRACE      reduce using rule 232 (SendStmt -> Channel ARROW Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 365

    (237) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 237 (Assignment -> ExpressionList assign_op ExpressionList .)
    LEFT_BRACE      reduce using rule 237 (Assignment -> ExpressionList assign_op ExpressionList .)


state 366

    (238) assign_op -> add_op_mul_op_or_plus ASSIGNMENT .

    ADD             reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    SUBTRACT        reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    NOT             reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    XOR             reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    MULTIPLY        reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    AND             reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    ARROW           reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    IDENT           reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    INT             reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    FLOAT           reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    IMAGINARY       reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    RUNE            reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    STRING          reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    FUNCTION        reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    LEFT_BRACKET    reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    STRUCT          reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    INTERFACE       reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    MAP             reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    CHAN            reduce using rule 238 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)


state 367

    (104) ShortVarDecl -> IdentifierList DEFINE ExpressionList .

    SEMICOLON       reduce using rule 104 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    LEFT_BRACE      reduce using rule 104 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)


state 368

    (252) ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus . LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE

    LEFT_BRACE      shift and go to state 395


state 369

    (260) TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard . LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE

    LEFT_BRACE      shift and go to state 396


state 370

    (253) ExpressionPlus -> Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    LEFT_BRACE      reduce using rule 253 (ExpressionPlus -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 371

    (263) TypeSwitchGuard -> IdentDefinePlus . PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    PrimaryExpr                    shift and go to state 397
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 372

    (264) IdentDefinePlus -> IDENT . DEFINE
    (123) OperandName -> IDENT .
    (4) TypeName -> IDENT .
    (318) PackageName -> IDENT .

  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 4 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 4 (TypeName -> IDENT .)
    DEFINE          shift and go to state 398
    LOGICAL_OR      reduce using rule 123 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 123 (OperandName -> IDENT .)
    EQUAL           reduce using rule 123 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 123 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 123 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUBTRACT        reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MULTIPLY        reduce using rule 123 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 123 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 123 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)
    LEFT_BRACE      reduce using rule 123 (OperandName -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 4 (TypeName -> IDENT .)
    PERIOD          reduce using rule 4 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 4 (TypeName -> IDENT .)

  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 318 (PackageName -> IDENT .) ]


state 373

    (161) Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .

    PERIOD          reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LOGICAL_OR      reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LOGICAL_AND     reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    EQUAL           reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    ADD             reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    SUBTRACT        reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    OR              reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    XOR             reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    MULTIPLY        reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    QUOTIENT        reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    REMAINDER       reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    SHIFT_LEFT      reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    SHIFT_RIGHT     reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    AND             reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    AND_NOT         reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    COLON           reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    COMMA           reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    INCREMENT       reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    DECREMENT       reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    ARROW           reduce using rule 161 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)


state 374

    (243) IfStmt -> IF SimpleStmtSemicolonPlus Expression Block . ElsePlus
    (246) ElsePlus -> . ELSE Nested_if_block
    (247) ElsePlus -> .

    ELSE            shift and go to state 400
    SEMICOLON       reduce using rule 247 (ElsePlus -> .)

    ElsePlus                       shift and go to state 399

state 375

    (292) SelectStmt -> SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE .

    SEMICOLON       reduce using rule 292 (SelectStmt -> SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE .)


state 376

    (293) CommClausePlus -> CommClausePlus CommClause .

    RIGHT_BRACE     reduce using rule 293 (CommClausePlus -> CommClausePlus CommClause .)
    CASE            reduce using rule 293 (CommClausePlus -> CommClausePlus CommClause .)
    DEFAULT         reduce using rule 293 (CommClausePlus -> CommClausePlus CommClause .)


state 377

    (295) CommClause -> CommCase . COLON StatementList

    COLON           shift and go to state 401


state 378

    (296) CommCase -> CASE . SentStmtRecvStmtOr
    (298) SentStmtRecvStmtOr -> . SendStmt
    (299) SentStmtRecvStmtOr -> . RecvStmt
    (232) SendStmt -> . Channel ARROW Expression
    (300) RecvStmt -> . ExpListAssignIdListDefOrPlus RecvExpr
    (233) Channel -> . Expression
    (288) ExpListAssignIdListDefOrPlus -> . ExpressionList ASSIGNMENT
    (289) ExpListAssignIdListDefOrPlus -> . IdentifierList DEFINE
    (290) ExpListAssignIdListDefOrPlus -> .
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (83) ExpressionList -> . Expression ExpressionStar
    (80) IdentifierList -> . IDENT IdentStar
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    IDENT           shift and go to state 308
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

  ! ADD             [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! NOT             [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! XOR             [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! AND             [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! ARROW           [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! IDENT           [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! INT             [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! FLOAT           [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! RUNE            [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! STRING          [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! FUNCTION        [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! STRUCT          [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! INTERFACE       [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! MAP             [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]
  ! CHAN            [ reduce using rule 290 (ExpListAssignIdListDefOrPlus -> .) ]

    SentStmtRecvStmtOr             shift and go to state 402
    SendStmt                       shift and go to state 403
    RecvStmt                       shift and go to state 404
    Channel                        shift and go to state 282
    Expression                     shift and go to state 405
    ExpListAssignIdListDefOrPlus   shift and go to state 406
    ExpressionList                 shift and go to state 407
    IdentifierList                 shift and go to state 408
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 379

    (297) CommCase -> DEFAULT .

    COLON           reduce using rule 297 (CommCase -> DEFAULT .)


state 380

    (278) ForClause -> InitStmtPlus SEMICOLON ConditionPlus . SEMICOLON PostStmtPlus

    SEMICOLON       shift and go to state 409


state 381

    (281) ConditionPlus -> Condition .

    SEMICOLON       reduce using rule 281 (ConditionPlus -> Condition .)


state 382

    (277) Condition -> Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    SEMICOLON       reduce using rule 277 (Condition -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 383

    (287) RangeClause -> ExpListAssignIdListDefOrPlus RANGE Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    LEFT_BRACE      reduce using rule 287 (RangeClause -> ExpListAssignIdListDefOrPlus RANGE Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 384

    (72) ConstSpecOr -> LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 72 (ConstSpecOr -> LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS .)


state 385

    (73) ConstSpecStar -> ConstSpecStar ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 410


state 386

    (76) TypeAssignmentExpressionListPlus -> TypePlus ASSIGNMENT . ExpressionList
    (83) ExpressionList -> . Expression ExpressionStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ExpressionList                 shift and go to state 411
    Expression                     shift and go to state 153
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 387

    (88) TypeSpecOr -> LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 88 (TypeSpecOr -> LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESIS .)


state 388

    (89) TypeSpecStar -> TypeSpecStar TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 412


state 389

    (93) AliasDecl -> IDENT ASSIGNMENT Type .

    SEMICOLON       reduce using rule 93 (AliasDecl -> IDENT ASSIGNMENT Type .)


state 390

    (96) VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 96 (VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS .)


state 391

    (97) VarSpecStar -> VarSpecStar VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 413


state 392

    (100) TypeExpressionListOr -> Type AssignmentExpressionListPlus .

    SEMICOLON       reduce using rule 100 (TypeExpressionListOr -> Type AssignmentExpressionListPlus .)


state 393

    (102) AssignmentExpressionListPlus -> ASSIGNMENT . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Expression                     shift and go to state 414
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 394

    (101) TypeExpressionListOr -> ASSIGNMENT ExpressionList .

    SEMICOLON       reduce using rule 101 (TypeExpressionListOr -> ASSIGNMENT ExpressionList .)


state 395

    (252) ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE . ExprCaseClauseStar RIGHT_BRACE
    (255) ExprCaseClauseStar -> . ExprCaseClauseStar ExprCaseClause
    (256) ExprCaseClauseStar -> .

    RIGHT_BRACE     reduce using rule 256 (ExprCaseClauseStar -> .)
    CASE            reduce using rule 256 (ExprCaseClauseStar -> .)
    DEFAULT         reduce using rule 256 (ExprCaseClauseStar -> .)

    ExprCaseClauseStar             shift and go to state 415

state 396

    (260) TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE . TypeCaseClauseStar RIGHT_BRACE
    (261) TypeCaseClauseStar -> . TypeCaseClauseStar TypeCaseClause
    (262) TypeCaseClauseStar -> .

    RIGHT_BRACE     reduce using rule 262 (TypeCaseClauseStar -> .)
    CASE            reduce using rule 262 (TypeCaseClauseStar -> .)
    DEFAULT         reduce using rule 262 (TypeCaseClauseStar -> .)

    TypeCaseClauseStar             shift and go to state 416

state 397

    (263) TypeSwitchGuard -> IdentDefinePlus PrimaryExpr . PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS
    (153) PrimaryExpr -> PrimaryExpr . Selector
    (154) PrimaryExpr -> PrimaryExpr . Index
    (155) PrimaryExpr -> PrimaryExpr . Slice
    (156) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (157) PrimaryExpr -> PrimaryExpr . Arguments
    (158) Selector -> . PERIOD IDENT
    (159) Index -> . LEFT_BRACKET Expression RIGHT_BRACKET
    (160) Slice -> . LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET
    (161) Slice -> . LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET
    (162) TypeAssertion -> . PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (163) Arguments -> . LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS

    PERIOD          shift and go to state 417
    LEFT_BRACKET    shift and go to state 112
    LEFT_PARENTHESIS shift and go to state 113

    Selector                       shift and go to state 106
    Index                          shift and go to state 107
    Slice                          shift and go to state 108
    TypeAssertion                  shift and go to state 109
    Arguments                      shift and go to state 110

state 398

    (264) IdentDefinePlus -> IDENT DEFINE .

    LEFT_PARENTHESIS reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    IDENT           reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    INT             reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    FLOAT           reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    IMAGINARY       reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    RUNE            reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    STRING          reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    FUNCTION        reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    LEFT_BRACKET    reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    STRUCT          reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    MULTIPLY        reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    INTERFACE       reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    MAP             reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    CHAN            reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)
    ARROW           reduce using rule 264 (IdentDefinePlus -> IDENT DEFINE .)


state 399

    (243) IfStmt -> IF SimpleStmtSemicolonPlus Expression Block ElsePlus .

    SEMICOLON       reduce using rule 243 (IfStmt -> IF SimpleStmtSemicolonPlus Expression Block ElsePlus .)


state 400

    (246) ElsePlus -> ELSE . Nested_if_block
    (248) Nested_if_block -> . IfStmt
    (249) Nested_if_block -> . Block
    (243) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (61) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    IF              shift and go to state 272
    LEFT_BRACE      shift and go to state 172

    Nested_if_block                shift and go to state 418
    IfStmt                         shift and go to state 419
    Block                          shift and go to state 420

state 401

    (295) CommClause -> CommCase COLON . StatementList
    (62) StatementList -> . StatementList Statement SEMICOLON
    (63) StatementList -> .

    GO              reduce using rule 63 (StatementList -> .)
    RETURN          reduce using rule 63 (StatementList -> .)
    BREAK           reduce using rule 63 (StatementList -> .)
    CONTINUE        reduce using rule 63 (StatementList -> .)
    GOTO            reduce using rule 63 (StatementList -> .)
    FALLTHROUGH     reduce using rule 63 (StatementList -> .)
    LEFT_BRACE      reduce using rule 63 (StatementList -> .)
    IF              reduce using rule 63 (StatementList -> .)
    SELECT          reduce using rule 63 (StatementList -> .)
    FOR             reduce using rule 63 (StatementList -> .)
    DEFER           reduce using rule 63 (StatementList -> .)
    CONST           reduce using rule 63 (StatementList -> .)
    TYPE            reduce using rule 63 (StatementList -> .)
    VARIABLE        reduce using rule 63 (StatementList -> .)
    IDENT           reduce using rule 63 (StatementList -> .)
    SWITCH          reduce using rule 63 (StatementList -> .)
    ADD             reduce using rule 63 (StatementList -> .)
    SUBTRACT        reduce using rule 63 (StatementList -> .)
    NOT             reduce using rule 63 (StatementList -> .)
    XOR             reduce using rule 63 (StatementList -> .)
    MULTIPLY        reduce using rule 63 (StatementList -> .)
    AND             reduce using rule 63 (StatementList -> .)
    ARROW           reduce using rule 63 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 63 (StatementList -> .)
    INT             reduce using rule 63 (StatementList -> .)
    FLOAT           reduce using rule 63 (StatementList -> .)
    IMAGINARY       reduce using rule 63 (StatementList -> .)
    RUNE            reduce using rule 63 (StatementList -> .)
    STRING          reduce using rule 63 (StatementList -> .)
    FUNCTION        reduce using rule 63 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 63 (StatementList -> .)
    STRUCT          reduce using rule 63 (StatementList -> .)
    INTERFACE       reduce using rule 63 (StatementList -> .)
    MAP             reduce using rule 63 (StatementList -> .)
    CHAN            reduce using rule 63 (StatementList -> .)
    SEMICOLON       reduce using rule 63 (StatementList -> .)
    RIGHT_BRACE     reduce using rule 63 (StatementList -> .)
    CASE            reduce using rule 63 (StatementList -> .)
    DEFAULT         reduce using rule 63 (StatementList -> .)

    StatementList                  shift and go to state 421

state 402

    (296) CommCase -> CASE SentStmtRecvStmtOr .

    COLON           reduce using rule 296 (CommCase -> CASE SentStmtRecvStmtOr .)


state 403

    (298) SentStmtRecvStmtOr -> SendStmt .

    COLON           reduce using rule 298 (SentStmtRecvStmtOr -> SendStmt .)


state 404

    (299) SentStmtRecvStmtOr -> RecvStmt .

    COLON           reduce using rule 299 (SentStmtRecvStmtOr -> RecvStmt .)


state 405

    (233) Channel -> Expression .
    (174) Expression -> Expression . binary_op Expression
    (83) ExpressionList -> Expression . ExpressionStar
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (84) ExpressionStar -> . COMMA Expression ExpressionStar
    (85) ExpressionStar -> .
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    ARROW           reduce using rule 233 (Channel -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    COMMA           shift and go to state 206
    ASSIGNMENT      reduce using rule 85 (ExpressionStar -> .)
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    ExpressionStar                 shift and go to state 205
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 406

    (300) RecvStmt -> ExpListAssignIdListDefOrPlus . RecvExpr
    (301) RecvExpr -> . Expression
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    RecvExpr                       shift and go to state 422
    Expression                     shift and go to state 423
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 407

    (288) ExpListAssignIdListDefOrPlus -> ExpressionList . ASSIGNMENT

    ASSIGNMENT      shift and go to state 351


state 408

    (289) ExpListAssignIdListDefOrPlus -> IdentifierList . DEFINE

    DEFINE          shift and go to state 424


state 409

    (278) ForClause -> InitStmtPlus SEMICOLON ConditionPlus SEMICOLON . PostStmtPlus
    (283) PostStmtPlus -> . PostStmt
    (284) PostStmtPlus -> .
    (286) PostStmt -> . SimpleStmt
    (223) SimpleStmt -> . ExpressionStmt
    (224) SimpleStmt -> . SendStmt
    (225) SimpleStmt -> . IncDecStmt
    (226) SimpleStmt -> . Assignment
    (227) SimpleStmt -> . ShortVarDecl
    (228) SimpleStmt -> .
    (231) ExpressionStmt -> . Expression
    (232) SendStmt -> . Channel ARROW Expression
    (234) IncDecStmt -> . Expression IncDecOr
    (237) Assignment -> . ExpressionList assign_op ExpressionList
    (104) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (233) Channel -> . Expression
    (83) ExpressionList -> . Expression ExpressionStar
    (80) IdentifierList -> . IDENT IdentStar
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

  ! reduce/reduce conflict for LEFT_BRACE resolved using rule 228 (SimpleStmt -> .)
    LEFT_BRACE      reduce using rule 228 (SimpleStmt -> .)
    IDENT           shift and go to state 308
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

  ! LEFT_BRACE      [ reduce using rule 284 (PostStmtPlus -> .) ]

    PostStmtPlus                   shift and go to state 425
    PostStmt                       shift and go to state 426
    SimpleStmt                     shift and go to state 427
    ExpressionStmt                 shift and go to state 260
    SendStmt                       shift and go to state 261
    IncDecStmt                     shift and go to state 262
    Assignment                     shift and go to state 263
    ShortVarDecl                   shift and go to state 264
    Expression                     shift and go to state 266
    Channel                        shift and go to state 282
    ExpressionList                 shift and go to state 283
    IdentifierList                 shift and go to state 284
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 410

    (73) ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON .

    RIGHT_PARENTHESIS reduce using rule 73 (ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON .)
    IDENT           reduce using rule 73 (ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON .)


state 411

    (76) TypeAssignmentExpressionListPlus -> TypePlus ASSIGNMENT ExpressionList .

    SEMICOLON       reduce using rule 76 (TypeAssignmentExpressionListPlus -> TypePlus ASSIGNMENT ExpressionList .)


state 412

    (89) TypeSpecStar -> TypeSpecStar TypeSpec SEMICOLON .

    RIGHT_PARENTHESIS reduce using rule 89 (TypeSpecStar -> TypeSpecStar TypeSpec SEMICOLON .)
    IDENT           reduce using rule 89 (TypeSpecStar -> TypeSpecStar TypeSpec SEMICOLON .)


state 413

    (97) VarSpecStar -> VarSpecStar VarSpec SEMICOLON .

    RIGHT_PARENTHESIS reduce using rule 97 (VarSpecStar -> VarSpecStar VarSpec SEMICOLON .)
    IDENT           reduce using rule 97 (VarSpecStar -> VarSpecStar VarSpec SEMICOLON .)


state 414

    (102) AssignmentExpressionListPlus -> ASSIGNMENT Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    SEMICOLON       reduce using rule 102 (AssignmentExpressionListPlus -> ASSIGNMENT Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 415

    (252) ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar . RIGHT_BRACE
    (255) ExprCaseClauseStar -> ExprCaseClauseStar . ExprCaseClause
    (257) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (258) ExprSwitchCase -> . CASE ExpressionList
    (259) ExprSwitchCase -> . DEFAULT

    RIGHT_BRACE     shift and go to state 428
    CASE            shift and go to state 431
    DEFAULT         shift and go to state 432

    ExprCaseClause                 shift and go to state 429
    ExprSwitchCase                 shift and go to state 430

state 416

    (260) TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar . RIGHT_BRACE
    (261) TypeCaseClauseStar -> TypeCaseClauseStar . TypeCaseClause
    (266) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (267) TypeSwitchCase -> . CASE TypeList
    (268) TypeSwitchCase -> . DEFAULT

    RIGHT_BRACE     shift and go to state 433
    CASE            shift and go to state 436
    DEFAULT         shift and go to state 437

    TypeCaseClause                 shift and go to state 434
    TypeSwitchCase                 shift and go to state 435

state 417

    (263) TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD . LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS
    (158) Selector -> PERIOD . IDENT
    (162) TypeAssertion -> PERIOD . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 438
    IDENT           shift and go to state 145


state 418

    (246) ElsePlus -> ELSE Nested_if_block .

    SEMICOLON       reduce using rule 246 (ElsePlus -> ELSE Nested_if_block .)


state 419

    (248) Nested_if_block -> IfStmt .

    SEMICOLON       reduce using rule 248 (Nested_if_block -> IfStmt .)


state 420

    (249) Nested_if_block -> Block .

    SEMICOLON       reduce using rule 249 (Nested_if_block -> Block .)


state 421

    (295) CommClause -> CommCase COLON StatementList .
    (62) StatementList -> StatementList . Statement SEMICOLON
    (208) Statement -> . Declaration
    (209) Statement -> . LabeledStmt
    (210) Statement -> . SimpleStmt
    (211) Statement -> . GoStmt
    (212) Statement -> . ReturnStmt
    (213) Statement -> . BreakStmt
    (214) Statement -> . ContinueStmt
    (215) Statement -> . GotoStmt
    (216) Statement -> . FallthroughStmt
    (217) Statement -> . Block
    (218) Statement -> . IfStmt
    (219) Statement -> . SwitchStmt
    (220) Statement -> . SelectStmt
    (221) Statement -> . ForStmt
    (222) Statement -> . DeferStmt
    (64) Declaration -> . ConstDecl
    (65) Declaration -> . TypeDecl
    (66) Declaration -> . VarDecl
    (229) LabeledStmt -> . Label COLON Statement
    (223) SimpleStmt -> . ExpressionStmt
    (224) SimpleStmt -> . SendStmt
    (225) SimpleStmt -> . IncDecStmt
    (226) SimpleStmt -> . Assignment
    (227) SimpleStmt -> . ShortVarDecl
    (228) SimpleStmt -> .
    (291) GoStmt -> . GO Expression
    (302) ReturnStmt -> . RETURN ExpressionListPlus
    (305) BreakStmt -> . BREAK LabelPlus
    (308) ContinueStmt -> . CONTINUE LabelPlus
    (309) GotoStmt -> . GOTO Label
    (310) FallthroughStmt -> . FALLTHROUGH
    (61) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (243) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (250) SwitchStmt -> . ExprSwitchStmt
    (251) SwitchStmt -> . TypeSwitchStmt
    (292) SelectStmt -> . SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
    (272) ForStmt -> . FOR ForInternal Block
    (311) DeferStmt -> . DEFER Expression
    (70) ConstDecl -> . CONST ConstSpecOr
    (86) TypeDecl -> . TYPE TypeSpecOr
    (95) VarDecl -> . VARIABLE VarSpec
    (96) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (230) Label -> . IDENT
    (231) ExpressionStmt -> . Expression
    (232) SendStmt -> . Channel ARROW Expression
    (234) IncDecStmt -> . Expression IncDecOr
    (237) Assignment -> . ExpressionList assign_op ExpressionList
    (104) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (252) ExprSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (260) TypeSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (233) Channel -> . Expression
    (83) ExpressionList -> . Expression ExpressionStar
    (80) IdentifierList -> . IDENT IdentStar
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACE     reduce using rule 295 (CommClause -> CommCase COLON StatementList .)
    CASE            reduce using rule 295 (CommClause -> CommCase COLON StatementList .)
    DEFAULT         reduce using rule 295 (CommClause -> CommCase COLON StatementList .)
    SEMICOLON       reduce using rule 228 (SimpleStmt -> .)
    GO              shift and go to state 265
    RETURN          shift and go to state 267
    BREAK           shift and go to state 268
    CONTINUE        shift and go to state 269
    GOTO            shift and go to state 270
    FALLTHROUGH     shift and go to state 271
    LEFT_BRACE      shift and go to state 172
    IF              shift and go to state 272
    SELECT          shift and go to state 275
    FOR             shift and go to state 276
    DEFER           shift and go to state 277
    CONST           shift and go to state 278
    TYPE            shift and go to state 279
    VARIABLE        shift and go to state 280
    IDENT           shift and go to state 281
    SWITCH          shift and go to state 285
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Statement                      shift and go to state 240
    Declaration                    shift and go to state 241
    LabeledStmt                    shift and go to state 242
    SimpleStmt                     shift and go to state 243
    GoStmt                         shift and go to state 244
    ReturnStmt                     shift and go to state 245
    BreakStmt                      shift and go to state 246
    ContinueStmt                   shift and go to state 247
    GotoStmt                       shift and go to state 248
    FallthroughStmt                shift and go to state 249
    Block                          shift and go to state 250
    IfStmt                         shift and go to state 251
    SwitchStmt                     shift and go to state 252
    SelectStmt                     shift and go to state 253
    ForStmt                        shift and go to state 254
    DeferStmt                      shift and go to state 255
    ConstDecl                      shift and go to state 256
    TypeDecl                       shift and go to state 257
    VarDecl                        shift and go to state 258
    Label                          shift and go to state 259
    ExpressionStmt                 shift and go to state 260
    SendStmt                       shift and go to state 261
    IncDecStmt                     shift and go to state 262
    Assignment                     shift and go to state 263
    ShortVarDecl                   shift and go to state 264
    Expression                     shift and go to state 266
    ExprSwitchStmt                 shift and go to state 273
    TypeSwitchStmt                 shift and go to state 274
    Channel                        shift and go to state 282
    ExpressionList                 shift and go to state 283
    IdentifierList                 shift and go to state 284
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 422

    (300) RecvStmt -> ExpListAssignIdListDefOrPlus RecvExpr .

    COLON           reduce using rule 300 (RecvStmt -> ExpListAssignIdListDefOrPlus RecvExpr .)


state 423

    (301) RecvExpr -> Expression .
    (174) Expression -> Expression . binary_op Expression
    (177) binary_op -> . LOGICAL_OR
    (178) binary_op -> . LOGICAL_AND
    (179) binary_op -> . rel_op
    (180) binary_op -> . add_op
    (181) binary_op -> . mul_op
    (182) rel_op -> . EQUAL
    (183) rel_op -> . NOT_EQUAL
    (184) rel_op -> . LESS_THAN
    (185) rel_op -> . LESS_THAN_EQUAL
    (186) rel_op -> . GREATER_THAN
    (187) rel_op -> . GREATER_THAN_EQUAL
    (188) add_op -> . ADD
    (189) add_op -> . SUBTRACT
    (190) add_op -> . OR
    (191) add_op -> . XOR
    (192) mul_op -> . MULTIPLY
    (193) mul_op -> . QUOTIENT
    (194) mul_op -> . REMAINDER
    (195) mul_op -> . SHIFT_LEFT
    (196) mul_op -> . SHIFT_RIGHT
    (197) mul_op -> . AND
    (198) mul_op -> . AND_NOT

    COLON           reduce using rule 301 (RecvExpr -> Expression .)
    LOGICAL_OR      shift and go to state 84
    LOGICAL_AND     shift and go to state 85
    EQUAL           shift and go to state 89
    NOT_EQUAL       shift and go to state 90
    LESS_THAN       shift and go to state 91
    LESS_THAN_EQUAL shift and go to state 92
    GREATER_THAN    shift and go to state 93
    GREATER_THAN_EQUAL shift and go to state 94
    ADD             shift and go to state 95
    SUBTRACT        shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    MULTIPLY        shift and go to state 99
    QUOTIENT        shift and go to state 100
    REMAINDER       shift and go to state 101
    SHIFT_LEFT      shift and go to state 102
    SHIFT_RIGHT     shift and go to state 103
    AND             shift and go to state 104
    AND_NOT         shift and go to state 105

    binary_op                      shift and go to state 83
    rel_op                         shift and go to state 86
    add_op                         shift and go to state 87
    mul_op                         shift and go to state 88

state 424

    (289) ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .

    ADD             reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    SUBTRACT        reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    NOT             reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    XOR             reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    MULTIPLY        reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    AND             reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    ARROW           reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    LEFT_PARENTHESIS reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    IDENT           reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    INT             reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    FLOAT           reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    IMAGINARY       reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    RUNE            reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    STRING          reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    FUNCTION        reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    LEFT_BRACKET    reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    STRUCT          reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    INTERFACE       reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    MAP             reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    CHAN            reduce using rule 289 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)


state 425

    (278) ForClause -> InitStmtPlus SEMICOLON ConditionPlus SEMICOLON PostStmtPlus .

    LEFT_BRACE      reduce using rule 278 (ForClause -> InitStmtPlus SEMICOLON ConditionPlus SEMICOLON PostStmtPlus .)


state 426

    (283) PostStmtPlus -> PostStmt .

    LEFT_BRACE      reduce using rule 283 (PostStmtPlus -> PostStmt .)


state 427

    (286) PostStmt -> SimpleStmt .

    LEFT_BRACE      reduce using rule 286 (PostStmt -> SimpleStmt .)


state 428

    (252) ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE .

    SEMICOLON       reduce using rule 252 (ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE .)


state 429

    (255) ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .

    RIGHT_BRACE     reduce using rule 255 (ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .)
    CASE            reduce using rule 255 (ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .)
    DEFAULT         reduce using rule 255 (ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .)


state 430

    (257) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 439


state 431

    (258) ExprSwitchCase -> CASE . ExpressionList
    (83) ExpressionList -> . Expression ExpressionStar
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    IDENT           shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    ExpressionList                 shift and go to state 440
    Expression                     shift and go to state 153
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 432

    (259) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 259 (ExprSwitchCase -> DEFAULT .)


state 433

    (260) TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE .

    SEMICOLON       reduce using rule 260 (TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE .)


state 434

    (261) TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause .

    RIGHT_BRACE     reduce using rule 261 (TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause .)
    CASE            reduce using rule 261 (TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause .)
    DEFAULT         reduce using rule 261 (TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause .)


state 435

    (266) TypeCaseClause -> TypeSwitchCase . COLON StatementList

    COLON           shift and go to state 441


state 436

    (267) TypeSwitchCase -> CASE . TypeList
    (269) TypeList -> . Type CommaTypePlus
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    TypeList                       shift and go to state 442
    Type                           shift and go to state 443
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 437

    (268) TypeSwitchCase -> DEFAULT .

    COLON           reduce using rule 268 (TypeSwitchCase -> DEFAULT .)


state 438

    (263) TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS . TYPE RIGHT_PARENTHESIS
    (162) TypeAssertion -> PERIOD LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (318) PackageName -> . IDENT
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    TYPE            shift and go to state 444
    LEFT_PARENTHESIS shift and go to state 4
    IDENT           shift and go to state 5
    LEFT_BRACKET    shift and go to state 16
    STRUCT          shift and go to state 17
    MULTIPLY        shift and go to state 18
    FUNCTION        shift and go to state 19
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23
    ARROW           shift and go to state 24

    Type                           shift and go to state 197
    TypeName                       shift and go to state 2
    TypeLit                        shift and go to state 3
    QualifiedIdent                 shift and go to state 6
    ArrayType                      shift and go to state 7
    StructType                     shift and go to state 8
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 12
    MapType                        shift and go to state 13
    ChannelType                    shift and go to state 14
    PackageName                    shift and go to state 15
    ChannelTypeOr                  shift and go to state 22

state 439

    (257) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (62) StatementList -> . StatementList Statement SEMICOLON
    (63) StatementList -> .

    GO              reduce using rule 63 (StatementList -> .)
    RETURN          reduce using rule 63 (StatementList -> .)
    BREAK           reduce using rule 63 (StatementList -> .)
    CONTINUE        reduce using rule 63 (StatementList -> .)
    GOTO            reduce using rule 63 (StatementList -> .)
    FALLTHROUGH     reduce using rule 63 (StatementList -> .)
    LEFT_BRACE      reduce using rule 63 (StatementList -> .)
    IF              reduce using rule 63 (StatementList -> .)
    SELECT          reduce using rule 63 (StatementList -> .)
    FOR             reduce using rule 63 (StatementList -> .)
    DEFER           reduce using rule 63 (StatementList -> .)
    CONST           reduce using rule 63 (StatementList -> .)
    TYPE            reduce using rule 63 (StatementList -> .)
    VARIABLE        reduce using rule 63 (StatementList -> .)
    IDENT           reduce using rule 63 (StatementList -> .)
    SWITCH          reduce using rule 63 (StatementList -> .)
    ADD             reduce using rule 63 (StatementList -> .)
    SUBTRACT        reduce using rule 63 (StatementList -> .)
    NOT             reduce using rule 63 (StatementList -> .)
    XOR             reduce using rule 63 (StatementList -> .)
    MULTIPLY        reduce using rule 63 (StatementList -> .)
    AND             reduce using rule 63 (StatementList -> .)
    ARROW           reduce using rule 63 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 63 (StatementList -> .)
    INT             reduce using rule 63 (StatementList -> .)
    FLOAT           reduce using rule 63 (StatementList -> .)
    IMAGINARY       reduce using rule 63 (StatementList -> .)
    RUNE            reduce using rule 63 (StatementList -> .)
    STRING          reduce using rule 63 (StatementList -> .)
    FUNCTION        reduce using rule 63 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 63 (StatementList -> .)
    STRUCT          reduce using rule 63 (StatementList -> .)
    INTERFACE       reduce using rule 63 (StatementList -> .)
    MAP             reduce using rule 63 (StatementList -> .)
    CHAN            reduce using rule 63 (StatementList -> .)
    SEMICOLON       reduce using rule 63 (StatementList -> .)
    RIGHT_BRACE     reduce using rule 63 (StatementList -> .)
    CASE            reduce using rule 63 (StatementList -> .)
    DEFAULT         reduce using rule 63 (StatementList -> .)

    StatementList                  shift and go to state 445

state 440

    (258) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 258 (ExprSwitchCase -> CASE ExpressionList .)


state 441

    (266) TypeCaseClause -> TypeSwitchCase COLON . StatementList
    (62) StatementList -> . StatementList Statement SEMICOLON
    (63) StatementList -> .

    GO              reduce using rule 63 (StatementList -> .)
    RETURN          reduce using rule 63 (StatementList -> .)
    BREAK           reduce using rule 63 (StatementList -> .)
    CONTINUE        reduce using rule 63 (StatementList -> .)
    GOTO            reduce using rule 63 (StatementList -> .)
    FALLTHROUGH     reduce using rule 63 (StatementList -> .)
    LEFT_BRACE      reduce using rule 63 (StatementList -> .)
    IF              reduce using rule 63 (StatementList -> .)
    SELECT          reduce using rule 63 (StatementList -> .)
    FOR             reduce using rule 63 (StatementList -> .)
    DEFER           reduce using rule 63 (StatementList -> .)
    CONST           reduce using rule 63 (StatementList -> .)
    TYPE            reduce using rule 63 (StatementList -> .)
    VARIABLE        reduce using rule 63 (StatementList -> .)
    IDENT           reduce using rule 63 (StatementList -> .)
    SWITCH          reduce using rule 63 (StatementList -> .)
    ADD             reduce using rule 63 (StatementList -> .)
    SUBTRACT        reduce using rule 63 (StatementList -> .)
    NOT             reduce using rule 63 (StatementList -> .)
    XOR             reduce using rule 63 (StatementList -> .)
    MULTIPLY        reduce using rule 63 (StatementList -> .)
    AND             reduce using rule 63 (StatementList -> .)
    ARROW           reduce using rule 63 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 63 (StatementList -> .)
    INT             reduce using rule 63 (StatementList -> .)
    FLOAT           reduce using rule 63 (StatementList -> .)
    IMAGINARY       reduce using rule 63 (StatementList -> .)
    RUNE            reduce using rule 63 (StatementList -> .)
    STRING          reduce using rule 63 (StatementList -> .)
    FUNCTION        reduce using rule 63 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 63 (StatementList -> .)
    STRUCT          reduce using rule 63 (StatementList -> .)
    INTERFACE       reduce using rule 63 (StatementList -> .)
    MAP             reduce using rule 63 (StatementList -> .)
    CHAN            reduce using rule 63 (StatementList -> .)
    SEMICOLON       reduce using rule 63 (StatementList -> .)
    RIGHT_BRACE     reduce using rule 63 (StatementList -> .)
    CASE            reduce using rule 63 (StatementList -> .)
    DEFAULT         reduce using rule 63 (StatementList -> .)

    StatementList                  shift and go to state 446

state 442

    (267) TypeSwitchCase -> CASE TypeList .

    COLON           reduce using rule 267 (TypeSwitchCase -> CASE TypeList .)


state 443

    (269) TypeList -> Type . CommaTypePlus
    (270) CommaTypePlus -> . CommaTypePlus COMMA TYPE
    (271) CommaTypePlus -> .

    COMMA           reduce using rule 271 (CommaTypePlus -> .)
    COLON           reduce using rule 271 (CommaTypePlus -> .)

    CommaTypePlus                  shift and go to state 447

state 444

    (263) TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 448


state 445

    (257) ExprCaseClause -> ExprSwitchCase COLON StatementList .
    (62) StatementList -> StatementList . Statement SEMICOLON
    (208) Statement -> . Declaration
    (209) Statement -> . LabeledStmt
    (210) Statement -> . SimpleStmt
    (211) Statement -> . GoStmt
    (212) Statement -> . ReturnStmt
    (213) Statement -> . BreakStmt
    (214) Statement -> . ContinueStmt
    (215) Statement -> . GotoStmt
    (216) Statement -> . FallthroughStmt
    (217) Statement -> . Block
    (218) Statement -> . IfStmt
    (219) Statement -> . SwitchStmt
    (220) Statement -> . SelectStmt
    (221) Statement -> . ForStmt
    (222) Statement -> . DeferStmt
    (64) Declaration -> . ConstDecl
    (65) Declaration -> . TypeDecl
    (66) Declaration -> . VarDecl
    (229) LabeledStmt -> . Label COLON Statement
    (223) SimpleStmt -> . ExpressionStmt
    (224) SimpleStmt -> . SendStmt
    (225) SimpleStmt -> . IncDecStmt
    (226) SimpleStmt -> . Assignment
    (227) SimpleStmt -> . ShortVarDecl
    (228) SimpleStmt -> .
    (291) GoStmt -> . GO Expression
    (302) ReturnStmt -> . RETURN ExpressionListPlus
    (305) BreakStmt -> . BREAK LabelPlus
    (308) ContinueStmt -> . CONTINUE LabelPlus
    (309) GotoStmt -> . GOTO Label
    (310) FallthroughStmt -> . FALLTHROUGH
    (61) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (243) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (250) SwitchStmt -> . ExprSwitchStmt
    (251) SwitchStmt -> . TypeSwitchStmt
    (292) SelectStmt -> . SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
    (272) ForStmt -> . FOR ForInternal Block
    (311) DeferStmt -> . DEFER Expression
    (70) ConstDecl -> . CONST ConstSpecOr
    (86) TypeDecl -> . TYPE TypeSpecOr
    (95) VarDecl -> . VARIABLE VarSpec
    (96) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (230) Label -> . IDENT
    (231) ExpressionStmt -> . Expression
    (232) SendStmt -> . Channel ARROW Expression
    (234) IncDecStmt -> . Expression IncDecOr
    (237) Assignment -> . ExpressionList assign_op ExpressionList
    (104) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (252) ExprSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (260) TypeSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (233) Channel -> . Expression
    (83) ExpressionList -> . Expression ExpressionStar
    (80) IdentifierList -> . IDENT IdentStar
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACE     reduce using rule 257 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 257 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 257 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    SEMICOLON       reduce using rule 228 (SimpleStmt -> .)
    GO              shift and go to state 265
    RETURN          shift and go to state 267
    BREAK           shift and go to state 268
    CONTINUE        shift and go to state 269
    GOTO            shift and go to state 270
    FALLTHROUGH     shift and go to state 271
    LEFT_BRACE      shift and go to state 172
    IF              shift and go to state 272
    SELECT          shift and go to state 275
    FOR             shift and go to state 276
    DEFER           shift and go to state 277
    CONST           shift and go to state 278
    TYPE            shift and go to state 279
    VARIABLE        shift and go to state 280
    IDENT           shift and go to state 281
    SWITCH          shift and go to state 285
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Statement                      shift and go to state 240
    Declaration                    shift and go to state 241
    LabeledStmt                    shift and go to state 242
    SimpleStmt                     shift and go to state 243
    GoStmt                         shift and go to state 244
    ReturnStmt                     shift and go to state 245
    BreakStmt                      shift and go to state 246
    ContinueStmt                   shift and go to state 247
    GotoStmt                       shift and go to state 248
    FallthroughStmt                shift and go to state 249
    Block                          shift and go to state 250
    IfStmt                         shift and go to state 251
    SwitchStmt                     shift and go to state 252
    SelectStmt                     shift and go to state 253
    ForStmt                        shift and go to state 254
    DeferStmt                      shift and go to state 255
    ConstDecl                      shift and go to state 256
    TypeDecl                       shift and go to state 257
    VarDecl                        shift and go to state 258
    Label                          shift and go to state 259
    ExpressionStmt                 shift and go to state 260
    SendStmt                       shift and go to state 261
    IncDecStmt                     shift and go to state 262
    Assignment                     shift and go to state 263
    ShortVarDecl                   shift and go to state 264
    Expression                     shift and go to state 266
    ExprSwitchStmt                 shift and go to state 273
    TypeSwitchStmt                 shift and go to state 274
    Channel                        shift and go to state 282
    ExpressionList                 shift and go to state 283
    IdentifierList                 shift and go to state 284
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 446

    (266) TypeCaseClause -> TypeSwitchCase COLON StatementList .
    (62) StatementList -> StatementList . Statement SEMICOLON
    (208) Statement -> . Declaration
    (209) Statement -> . LabeledStmt
    (210) Statement -> . SimpleStmt
    (211) Statement -> . GoStmt
    (212) Statement -> . ReturnStmt
    (213) Statement -> . BreakStmt
    (214) Statement -> . ContinueStmt
    (215) Statement -> . GotoStmt
    (216) Statement -> . FallthroughStmt
    (217) Statement -> . Block
    (218) Statement -> . IfStmt
    (219) Statement -> . SwitchStmt
    (220) Statement -> . SelectStmt
    (221) Statement -> . ForStmt
    (222) Statement -> . DeferStmt
    (64) Declaration -> . ConstDecl
    (65) Declaration -> . TypeDecl
    (66) Declaration -> . VarDecl
    (229) LabeledStmt -> . Label COLON Statement
    (223) SimpleStmt -> . ExpressionStmt
    (224) SimpleStmt -> . SendStmt
    (225) SimpleStmt -> . IncDecStmt
    (226) SimpleStmt -> . Assignment
    (227) SimpleStmt -> . ShortVarDecl
    (228) SimpleStmt -> .
    (291) GoStmt -> . GO Expression
    (302) ReturnStmt -> . RETURN ExpressionListPlus
    (305) BreakStmt -> . BREAK LabelPlus
    (308) ContinueStmt -> . CONTINUE LabelPlus
    (309) GotoStmt -> . GOTO Label
    (310) FallthroughStmt -> . FALLTHROUGH
    (61) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (243) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (250) SwitchStmt -> . ExprSwitchStmt
    (251) SwitchStmt -> . TypeSwitchStmt
    (292) SelectStmt -> . SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
    (272) ForStmt -> . FOR ForInternal Block
    (311) DeferStmt -> . DEFER Expression
    (70) ConstDecl -> . CONST ConstSpecOr
    (86) TypeDecl -> . TYPE TypeSpecOr
    (95) VarDecl -> . VARIABLE VarSpec
    (96) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (230) Label -> . IDENT
    (231) ExpressionStmt -> . Expression
    (232) SendStmt -> . Channel ARROW Expression
    (234) IncDecStmt -> . Expression IncDecOr
    (237) Assignment -> . ExpressionList assign_op ExpressionList
    (104) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (252) ExprSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (260) TypeSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (173) Expression -> . UnaryExpr
    (174) Expression -> . Expression binary_op Expression
    (233) Channel -> . Expression
    (83) ExpressionList -> . Expression ExpressionStar
    (80) IdentifierList -> . IDENT IdentStar
    (175) UnaryExpr -> . PrimaryExpr
    (176) UnaryExpr -> . unary_op UnaryExpr
    (150) PrimaryExpr -> . Operand
    (151) PrimaryExpr -> . Conversion
    (152) PrimaryExpr -> . MethodExpr
    (153) PrimaryExpr -> . PrimaryExpr Selector
    (154) PrimaryExpr -> . PrimaryExpr Index
    (155) PrimaryExpr -> . PrimaryExpr Slice
    (156) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (157) PrimaryExpr -> . PrimaryExpr Arguments
    (199) unary_op -> . ADD
    (200) unary_op -> . SUBTRACT
    (201) unary_op -> . NOT
    (202) unary_op -> . XOR
    (203) unary_op -> . MULTIPLY
    (204) unary_op -> . AND
    (205) unary_op -> . ARROW
    (112) Operand -> . Literal
    (113) Operand -> . OperandName
    (114) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (206) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (207) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (171) MethodExpr -> . ReceiverType PERIOD MethodName
    (115) Literal -> . BasicLit
    (116) Literal -> . CompositeLit
    (117) Literal -> . FunctionLit
    (123) OperandName -> . IDENT
    (124) OperandName -> . QualifiedIdent
    (1) Type -> . TypeName
    (2) Type -> . TypeLit
    (3) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (172) ReceiverType -> . Type
    (118) BasicLit -> . INT
    (119) BasicLit -> . FLOAT
    (120) BasicLit -> . IMAGINARY
    (121) BasicLit -> . RUNE
    (122) BasicLit -> . STRING
    (126) CompositeLit -> . LiteralType LiteralValue
    (149) FunctionLit -> . FUNCTION Signature FunctionBody
    (125) QualifiedIdent -> . PackageName PERIOD IDENT
    (4) TypeName -> . IDENT
    (5) TypeName -> . QualifiedIdent
    (6) TypeLit -> . ArrayType
    (7) TypeLit -> . StructType
    (8) TypeLit -> . PointerType
    (9) TypeLit -> . FunctionType
    (10) TypeLit -> . InterfaceType
    (11) TypeLit -> . SliceType
    (12) TypeLit -> . MapType
    (13) TypeLit -> . ChannelType
    (127) LiteralType -> . StructType
    (128) LiteralType -> . ArrayType
    (129) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType
    (130) LiteralType -> . SliceType
    (131) LiteralType -> . MapType
    (132) LiteralType -> . TypeName
    (318) PackageName -> . IDENT
    (14) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType
    (18) StructType -> . STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE
    (28) PointerType -> . MULTIPLY BaseType
    (30) FunctionType -> . FUNCTION Signature
    (47) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (17) SliceType -> . LEFT_BRACKET RIGHT_BRACKET ElementType
    (55) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType
    (57) ChannelType -> . ChannelTypeOr ElementType
    (58) ChannelTypeOr -> . CHAN
    (59) ChannelTypeOr -> . CHAN ARROW
    (60) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACE     reduce using rule 266 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    CASE            reduce using rule 266 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 266 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    SEMICOLON       reduce using rule 228 (SimpleStmt -> .)
    GO              shift and go to state 265
    RETURN          shift and go to state 267
    BREAK           shift and go to state 268
    CONTINUE        shift and go to state 269
    GOTO            shift and go to state 270
    FALLTHROUGH     shift and go to state 271
    LEFT_BRACE      shift and go to state 172
    IF              shift and go to state 272
    SELECT          shift and go to state 275
    FOR             shift and go to state 276
    DEFER           shift and go to state 277
    CONST           shift and go to state 278
    TYPE            shift and go to state 279
    VARIABLE        shift and go to state 280
    IDENT           shift and go to state 281
    SWITCH          shift and go to state 285
    ADD             shift and go to state 37
    SUBTRACT        shift and go to state 38
    NOT             shift and go to state 39
    XOR             shift and go to state 40
    MULTIPLY        shift and go to state 41
    AND             shift and go to state 42
    ARROW           shift and go to state 43
    LEFT_PARENTHESIS shift and go to state 46
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    IMAGINARY       shift and go to state 57
    RUNE            shift and go to state 58
    STRING          shift and go to state 59
    FUNCTION        shift and go to state 61
    LEFT_BRACKET    shift and go to state 27
    STRUCT          shift and go to state 17
    INTERFACE       shift and go to state 20
    MAP             shift and go to state 21
    CHAN            shift and go to state 23

    Statement                      shift and go to state 240
    Declaration                    shift and go to state 241
    LabeledStmt                    shift and go to state 242
    SimpleStmt                     shift and go to state 243
    GoStmt                         shift and go to state 244
    ReturnStmt                     shift and go to state 245
    BreakStmt                      shift and go to state 246
    ContinueStmt                   shift and go to state 247
    GotoStmt                       shift and go to state 248
    FallthroughStmt                shift and go to state 249
    Block                          shift and go to state 250
    IfStmt                         shift and go to state 251
    SwitchStmt                     shift and go to state 252
    SelectStmt                     shift and go to state 253
    ForStmt                        shift and go to state 254
    DeferStmt                      shift and go to state 255
    ConstDecl                      shift and go to state 256
    TypeDecl                       shift and go to state 257
    VarDecl                        shift and go to state 258
    Label                          shift and go to state 259
    ExpressionStmt                 shift and go to state 260
    SendStmt                       shift and go to state 261
    IncDecStmt                     shift and go to state 262
    Assignment                     shift and go to state 263
    ShortVarDecl                   shift and go to state 264
    Expression                     shift and go to state 266
    ExprSwitchStmt                 shift and go to state 273
    TypeSwitchStmt                 shift and go to state 274
    Channel                        shift and go to state 282
    ExpressionList                 shift and go to state 283
    IdentifierList                 shift and go to state 284
    UnaryExpr                      shift and go to state 31
    PrimaryExpr                    shift and go to state 32
    unary_op                       shift and go to state 33
    Operand                        shift and go to state 34
    Conversion                     shift and go to state 35
    MethodExpr                     shift and go to state 36
    Literal                        shift and go to state 44
    OperandName                    shift and go to state 45
    Type                           shift and go to state 47
    ReceiverType                   shift and go to state 48
    BasicLit                       shift and go to state 49
    CompositeLit                   shift and go to state 50
    FunctionLit                    shift and go to state 51
    QualifiedIdent                 shift and go to state 53
    TypeName                       shift and go to state 54
    TypeLit                        shift and go to state 3
    LiteralType                    shift and go to state 60
    PackageName                    shift and go to state 15
    ArrayType                      shift and go to state 62
    StructType                     shift and go to state 63
    PointerType                    shift and go to state 9
    FunctionType                   shift and go to state 10
    InterfaceType                  shift and go to state 11
    SliceType                      shift and go to state 64
    MapType                        shift and go to state 65
    ChannelType                    shift and go to state 14
    ChannelTypeOr                  shift and go to state 22

state 447

    (269) TypeList -> Type CommaTypePlus .
    (270) CommaTypePlus -> CommaTypePlus . COMMA TYPE

    COLON           reduce using rule 269 (TypeList -> Type CommaTypePlus .)
    COMMA           shift and go to state 449


state 448

    (263) TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS .

    LEFT_BRACE      reduce using rule 263 (TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS .)


state 449

    (270) CommaTypePlus -> CommaTypePlus COMMA . TYPE

    TYPE            shift and go to state 450


state 450

    (270) CommaTypePlus -> CommaTypePlus COMMA TYPE .

    COMMA           reduce using rule 270 (CommaTypePlus -> CommaTypePlus COMMA TYPE .)
    COLON           reduce using rule 270 (CommaTypePlus -> CommaTypePlus COMMA TYPE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ARROW in state 23 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 43 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 70 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 70 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 70 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 70 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 70 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 70 resolved as shift
WARNING: shift/reduce conflict for MAP in state 70 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 70 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 70 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 71 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 125 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 125 resolved as shift
WARNING: shift/reduce conflict for ADD in state 125 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 125 resolved as shift
WARNING: shift/reduce conflict for NOT in state 125 resolved as shift
WARNING: shift/reduce conflict for XOR in state 125 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 125 resolved as shift
WARNING: shift/reduce conflict for AND in state 125 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 125 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 125 resolved as shift
WARNING: shift/reduce conflict for INT in state 125 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 125 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 125 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 125 resolved as shift
WARNING: shift/reduce conflict for STRING in state 125 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 125 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 125 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 125 resolved as shift
WARNING: shift/reduce conflict for MAP in state 125 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 125 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 132 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 132 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 132 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 132 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 132 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 132 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 132 resolved as shift
WARNING: shift/reduce conflict for MAP in state 132 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 132 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 132 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 135 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_OR in state 144 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_AND in state 144 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 144 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 144 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for ADD in state 144 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 144 resolved as shift
WARNING: shift/reduce conflict for OR in state 144 resolved as shift
WARNING: shift/reduce conflict for XOR in state 144 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 144 resolved as shift
WARNING: shift/reduce conflict for QUOTIENT in state 144 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 144 resolved as shift
WARNING: shift/reduce conflict for SHIFT_LEFT in state 144 resolved as shift
WARNING: shift/reduce conflict for SHIFT_RIGHT in state 144 resolved as shift
WARNING: shift/reduce conflict for AND in state 144 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 144 resolved as shift
WARNING: shift/reduce conflict for RIGHT_BRACKET in state 160 resolved as shift
WARNING: shift/reduce conflict for ADD in state 160 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 160 resolved as shift
WARNING: shift/reduce conflict for NOT in state 160 resolved as shift
WARNING: shift/reduce conflict for XOR in state 160 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 160 resolved as shift
WARNING: shift/reduce conflict for AND in state 160 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 160 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 160 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 160 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 160 resolved as shift
WARNING: shift/reduce conflict for INT in state 160 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 160 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 160 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 160 resolved as shift
WARNING: shift/reduce conflict for STRING in state 160 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 160 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 160 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 160 resolved as shift
WARNING: shift/reduce conflict for MAP in state 160 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 160 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 163 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 183 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 213 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 213 resolved as shift
WARNING: shift/reduce conflict for ADD in state 213 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 213 resolved as shift
WARNING: shift/reduce conflict for NOT in state 213 resolved as shift
WARNING: shift/reduce conflict for XOR in state 213 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 213 resolved as shift
WARNING: shift/reduce conflict for AND in state 213 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 213 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 213 resolved as shift
WARNING: shift/reduce conflict for INT in state 213 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 213 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 213 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 213 resolved as shift
WARNING: shift/reduce conflict for STRING in state 213 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 213 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 213 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 213 resolved as shift
WARNING: shift/reduce conflict for MAP in state 213 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 213 resolved as shift
WARNING: shift/reduce conflict for ADD in state 236 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 236 resolved as shift
WARNING: shift/reduce conflict for OR in state 236 resolved as shift
WARNING: shift/reduce conflict for XOR in state 236 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 236 resolved as shift
WARNING: shift/reduce conflict for QUOTIENT in state 236 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 236 resolved as shift
WARNING: shift/reduce conflict for SHIFT_LEFT in state 236 resolved as shift
WARNING: shift/reduce conflict for SHIFT_RIGHT in state 236 resolved as shift
WARNING: shift/reduce conflict for AND in state 236 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 236 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 238 resolved as shift
WARNING: shift/reduce conflict for ADD in state 266 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 266 resolved as shift
WARNING: shift/reduce conflict for OR in state 266 resolved as shift
WARNING: shift/reduce conflict for XOR in state 266 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 266 resolved as shift
WARNING: shift/reduce conflict for QUOTIENT in state 266 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 266 resolved as shift
WARNING: shift/reduce conflict for SHIFT_LEFT in state 266 resolved as shift
WARNING: shift/reduce conflict for SHIFT_RIGHT in state 266 resolved as shift
WARNING: shift/reduce conflict for AND in state 266 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 266 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 272 resolved as shift
WARNING: shift/reduce conflict for ADD in state 272 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 272 resolved as shift
WARNING: shift/reduce conflict for NOT in state 272 resolved as shift
WARNING: shift/reduce conflict for XOR in state 272 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 272 resolved as shift
WARNING: shift/reduce conflict for AND in state 272 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 272 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 272 resolved as shift
WARNING: shift/reduce conflict for INT in state 272 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 272 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 272 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 272 resolved as shift
WARNING: shift/reduce conflict for STRING in state 272 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 272 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 272 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 272 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 272 resolved as shift
WARNING: shift/reduce conflict for MAP in state 272 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 272 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 281 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 285 resolved as shift
WARNING: shift/reduce conflict for ADD in state 285 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 285 resolved as shift
WARNING: shift/reduce conflict for NOT in state 285 resolved as shift
WARNING: shift/reduce conflict for XOR in state 285 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 285 resolved as shift
WARNING: shift/reduce conflict for AND in state 285 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 285 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 285 resolved as shift
WARNING: shift/reduce conflict for INT in state 285 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 285 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 285 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 285 resolved as shift
WARNING: shift/reduce conflict for STRING in state 285 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 285 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 285 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 285 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 285 resolved as shift
WARNING: shift/reduce conflict for MAP in state 285 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 285 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 308 resolved as shift
WARNING: shift/reduce conflict for ADD in state 314 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 314 resolved as shift
WARNING: shift/reduce conflict for OR in state 314 resolved as shift
WARNING: shift/reduce conflict for XOR in state 314 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 314 resolved as shift
WARNING: shift/reduce conflict for QUOTIENT in state 314 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 314 resolved as shift
WARNING: shift/reduce conflict for SHIFT_LEFT in state 314 resolved as shift
WARNING: shift/reduce conflict for SHIFT_RIGHT in state 314 resolved as shift
WARNING: shift/reduce conflict for AND in state 314 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 314 resolved as shift
WARNING: shift/reduce conflict for ASSIGNMENT in state 318 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 342 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 342 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 342 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 342 resolved as shift
WARNING: shift/reduce conflict for INT in state 342 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 342 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 342 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 342 resolved as shift
WARNING: shift/reduce conflict for STRING in state 342 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 342 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 342 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 342 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 342 resolved as shift
WARNING: shift/reduce conflict for MAP in state 342 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 342 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 378 resolved as shift
WARNING: shift/reduce conflict for ADD in state 378 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 378 resolved as shift
WARNING: shift/reduce conflict for NOT in state 378 resolved as shift
WARNING: shift/reduce conflict for XOR in state 378 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 378 resolved as shift
WARNING: shift/reduce conflict for AND in state 378 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 378 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 378 resolved as shift
WARNING: shift/reduce conflict for INT in state 378 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 378 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 378 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 378 resolved as shift
WARNING: shift/reduce conflict for STRING in state 378 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 378 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 378 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 378 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 378 resolved as shift
WARNING: shift/reduce conflict for MAP in state 378 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 378 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageName -> IDENT) in state 5
WARNING: reduce/reduce conflict in state 52 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 52
WARNING: reduce/reduce conflict in state 52 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageName -> IDENT) in state 52
WARNING: reduce/reduce conflict in state 53 resolved using rule (TypeName -> QualifiedIdent)
WARNING: rejected rule (OperandName -> QualifiedIdent) in state 53
WARNING: reduce/reduce conflict in state 54 resolved using rule (Type -> TypeName)
WARNING: rejected rule (LiteralType -> TypeName) in state 54
WARNING: reduce/reduce conflict in state 62 resolved using rule (TypeLit -> ArrayType)
WARNING: rejected rule (LiteralType -> ArrayType) in state 62
WARNING: reduce/reduce conflict in state 63 resolved using rule (TypeLit -> StructType)
WARNING: rejected rule (LiteralType -> StructType) in state 63
WARNING: reduce/reduce conflict in state 64 resolved using rule (TypeLit -> SliceType)
WARNING: rejected rule (LiteralType -> SliceType) in state 64
WARNING: reduce/reduce conflict in state 65 resolved using rule (TypeLit -> MapType)
WARNING: rejected rule (LiteralType -> MapType) in state 65
WARNING: reduce/reduce conflict in state 118 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageName -> IDENT) in state 118
WARNING: reduce/reduce conflict in state 118 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 118
WARNING: reduce/reduce conflict in state 119 resolved using rule (TypeName -> QualifiedIdent)
WARNING: rejected rule (OperandName -> QualifiedIdent) in state 119
WARNING: reduce/reduce conflict in state 169 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (FieldName -> IDENT) in state 169
WARNING: reduce/reduce conflict in state 169 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 169
WARNING: reduce/reduce conflict in state 169 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageName -> IDENT) in state 169
WARNING: reduce/reduce conflict in state 276 resolved using rule (SimpleStmt -> <empty>)
WARNING: rejected rule (InitStmtPlus -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 281 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageName -> IDENT) in state 281
WARNING: reduce/reduce conflict in state 290 resolved using rule (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS)
WARNING: rejected rule (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS) in state 290
WARNING: reduce/reduce conflict in state 308 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 308
WARNING: reduce/reduce conflict in state 308 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageName -> IDENT) in state 308
WARNING: reduce/reduce conflict in state 372 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 372
WARNING: reduce/reduce conflict in state 372 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageName -> IDENT) in state 372
WARNING: reduce/reduce conflict in state 409 resolved using rule (SimpleStmt -> <empty>)
WARNING: rejected rule (PostStmtPlus -> <empty>) in state 409
WARNING: Rule (LiteralType -> TypeName) is never reduced
WARNING: Rule (LiteralType -> ArrayType) is never reduced
WARNING: Rule (LiteralType -> StructType) is never reduced
WARNING: Rule (LiteralType -> SliceType) is never reduced
WARNING: Rule (LiteralType -> MapType) is never reduced
WARNING: Rule (FieldName -> IDENT) is never reduced
WARNING: Rule (InitStmtPlus -> <empty>) is never reduced
WARNING: Rule (PostStmtPlus -> <empty>) is never reduced
