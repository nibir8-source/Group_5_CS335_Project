Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD_ASSIGNMENT
    AND_ASSIGNMENT
    AND_NOT_ASSIGNMENT
    COMMENT
    EOF
    MUL_ASSIGNMENT
    NEWLINE
    OR_ASSIGNMENT
    QUO_ASSIGNMENT
    REM_ASSIGNMENT
    SHIFT_LEFT_ASSIGNMENT
    SHIFT_RIGHT_ASSIGNMENT
    SUB_ASSIGNMENT
    XOR_ASSIGNMENT

Grammar

Rule 0     S' -> SourceFile
Rule 1     SourceFile -> PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar
Rule 2     ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON
Rule 3     ImportDeclStar -> <empty>
Rule 4     TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON
Rule 5     TopLevelDeclStar -> <empty>
Rule 6     PackageClause -> PACKAGE IDENT
Rule 7     ImportDecl -> IMPORT ImportSpecOr
Rule 8     ImportSpecOr -> ImportSpec
Rule 9     ImportSpecOr -> LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS
Rule 10    ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON
Rule 11    ImportSpecSemicolonStar -> <empty>
Rule 12    ImportSpec -> PeriodPackageNamePlus ImportPath
Rule 13    PeriodPackageNamePlus -> PeriodPackageNameOr
Rule 14    PeriodPackageNamePlus -> <empty>
Rule 15    PeriodPackageNameOr -> PERIOD
Rule 16    PeriodPackageNameOr -> IDENT
Rule 17    ImportPath -> STRING
Rule 18    Type -> TypeName
Rule 19    Type -> TypeLit
Rule 20    Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
Rule 21    TypeName -> IDENT
Rule 22    TypeName -> QualifiedIdent
Rule 23    TypeLit -> ArrayType
Rule 24    TypeLit -> StructType
Rule 25    TypeLit -> PointerType
Rule 26    TypeLit -> FunctionType
Rule 27    TypeLit -> InterfaceType
Rule 28    TypeLit -> SliceType
Rule 29    TypeLit -> MapType
Rule 30    TypeLit -> ChannelType
Rule 31    ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
Rule 32    ArrayLength -> Expression
Rule 33    SliceType -> LEFT_BRACKET RIGHT_BRACKET Type
Rule 34    StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
Rule 35    FieldDeclStar -> FieldDeclStar FieldDecl SEMICOLON
Rule 36    FieldDeclStar -> <empty>
Rule 37    FieldDecl -> IdentifierList Type TagPlus
Rule 38    FieldDecl -> EmbeddedField TagPlus
Rule 39    TagPlus -> Tag
Rule 40    TagPlus -> <empty>
Rule 41    EmbeddedField -> MULTIPLY TypeName
Rule 42    EmbeddedField -> TypeName
Rule 43    Tag -> STRING
Rule 44    PointerType -> MULTIPLY BaseType
Rule 45    BaseType -> Type
Rule 46    FunctionType -> FUNCTION Signature
Rule 47    Signature -> Parameters ResultPlus
Rule 48    ResultPlus -> Result
Rule 49    ResultPlus -> <empty>
Rule 50    Result -> Parameters
Rule 51    Result -> Type
Rule 52    Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS
Rule 53    ParameterListPlus -> ParameterList COMMA
Rule 54    ParameterListPlus -> ParameterList
Rule 55    ParameterListPlus -> <empty>
Rule 56    ParameterList -> ParameterDecl
Rule 57    ParameterList -> ParameterDecl COMMA ParameterList
Rule 58    ParameterDecl -> IdentifierListPlus EllipsisPlus Type
Rule 59    IdentifierListPlus -> IdentifierList
Rule 60    IdentifierListPlus -> <empty>
Rule 61    EllipsisPlus -> ELLIPSIS
Rule 62    EllipsisPlus -> <empty>
Rule 63    InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
Rule 64    InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod SEMICOLON
Rule 65    InterfaceTypePlus -> <empty>
Rule 66    InterfaceTypeMethod -> MethodSpec
Rule 67    InterfaceTypeMethod -> InterfaceTypeName
Rule 68    MethodSpec -> MethodName Signature
Rule 69    MethodName -> IDENT
Rule 70    InterfaceTypeName -> TypeName
Rule 71    MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
Rule 72    KeyType -> Type
Rule 73    ChannelType -> ChannelTypeOr Type
Rule 74    ChannelTypeOr -> CHAN
Rule 75    ChannelTypeOr -> CHAN ARROW
Rule 76    ChannelTypeOr -> ARROW CHAN
Rule 77    Block -> LEFT_BRACE StatementList RIGHT_BRACE
Rule 78    StatementList -> StatementList Statement SEMICOLON
Rule 79    StatementList -> <empty>
Rule 80    Declaration -> ConstDecl
Rule 81    Declaration -> TypeDecl
Rule 82    Declaration -> VarDecl
Rule 83    TopLevelDecl -> Declaration
Rule 84    TopLevelDecl -> FunctionDecl
Rule 85    TopLevelDecl -> MethodDecl
Rule 86    ConstDecl -> CONST ConstSpecOr
Rule 87    ConstSpecOr -> ConstSpec
Rule 88    ConstSpecOr -> LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS
Rule 89    ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON
Rule 90    ConstSpecStar -> <empty>
Rule 91    ConstSpec -> IdentifierList TypeAssignmentExpressionListPlus
Rule 92    TypeAssignmentExpressionListPlus -> TypePlus ASSIGNMENT ExpressionList
Rule 93    TypeAssignmentExpressionListPlus -> <empty>
Rule 94    TypePlus -> Type
Rule 95    TypePlus -> <empty>
Rule 96    IdentifierList -> IDENT IdentStar
Rule 97    IdentStar -> COMMA IDENT IdentStar
Rule 98    IdentStar -> <empty>
Rule 99    ExpressionList -> Expression ExpressionStar
Rule 100   ExpressionStar -> COMMA Expression ExpressionStar
Rule 101   ExpressionStar -> <empty>
Rule 102   TypeDecl -> TYPE TypeSpecOr
Rule 103   TypeSpecOr -> TypeSpec
Rule 104   TypeSpecOr -> LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESIS
Rule 105   TypeSpecStar -> TypeSpecStar TypeSpec SEMICOLON
Rule 106   TypeSpecStar -> <empty>
Rule 107   TypeSpec -> AliasDecl
Rule 108   TypeSpec -> TypeDef
Rule 109   AliasDecl -> IDENT ASSIGNMENT Type
Rule 110   TypeDef -> IDENT Type
Rule 111   VarDecl -> VARIABLE VarSpec
Rule 112   VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
Rule 113   VarSpecStar -> VarSpecStar VarSpec SEMICOLON
Rule 114   VarSpecStar -> <empty>
Rule 115   VarSpec -> IdentifierList TypeExpressionListOr
Rule 116   TypeExpressionListOr -> Type AssignmentExpressionListPlus
Rule 117   TypeExpressionListOr -> ASSIGNMENT ExpressionList
Rule 118   AssignmentExpressionListPlus -> ASSIGNMENT Expression
Rule 119   AssignmentExpressionListPlus -> <empty>
Rule 120   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 121   FunctionDecl -> FUNCTION FunctionName Signature FunctionBodyPlus
Rule 122   FunctionBodyPlus -> FunctionBody
Rule 123   FunctionBodyPlus -> <empty>
Rule 124   FunctionName -> IDENT
Rule 125   FunctionBody -> Block
Rule 126   MethodDecl -> FUNCTION Receiver MethodName Signature FunctionBodyPlus
Rule 127   Receiver -> Parameters
Rule 128   Operand -> Literal
Rule 129   Operand -> OperandName
Rule 130   Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
Rule 131   Literal -> BasicLit
Rule 132   Literal -> CompositeLit
Rule 133   Literal -> FunctionLit
Rule 134   BasicLit -> INT
Rule 135   BasicLit -> FLOAT
Rule 136   BasicLit -> IMAGINARY
Rule 137   BasicLit -> RUNE
Rule 138   BasicLit -> STRING
Rule 139   OperandName -> IDENT
Rule 140   OperandName -> QualifiedIdent
Rule 141   QualifiedIdent -> IDENT PERIOD IDENT
Rule 142   CompositeLit -> LiteralType LiteralValue
Rule 143   LiteralType -> StructType
Rule 144   LiteralType -> ArrayType
Rule 145   LiteralType -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
Rule 146   LiteralType -> SliceType
Rule 147   LiteralType -> MapType
Rule 148   LiteralType -> TypeName
Rule 149   LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET
Rule 150   ElementListPlus -> ElementList
Rule 151   ElementListPlus -> ElementList COMMA
Rule 152   ElementListPlus -> <empty>
Rule 153   ElementList -> KeyedElement KeyedElementStar
Rule 154   KeyedElementStar -> COMMA KeyedElement KeyedElementStar
Rule 155   KeyedElementStar -> <empty>
Rule 156   KeyedElement -> KeyPlus Element
Rule 157   KeyPlus -> Key COLON
Rule 158   KeyPlus -> <empty>
Rule 159   Key -> FieldName
Rule 160   Key -> Expression
Rule 161   Key -> LiteralValue
Rule 162   FieldName -> IDENT
Rule 163   Element -> Expression
Rule 164   Element -> LiteralValue
Rule 165   FunctionLit -> FUNCTION Signature FunctionBody
Rule 166   PrimaryExpr -> Operand
Rule 167   PrimaryExpr -> Conversion
Rule 168   PrimaryExpr -> MethodExpr
Rule 169   PrimaryExpr -> PrimaryExpr Selector
Rule 170   PrimaryExpr -> PrimaryExpr Index
Rule 171   PrimaryExpr -> PrimaryExpr Slice
Rule 172   PrimaryExpr -> PrimaryExpr TypeAssertion
Rule 173   PrimaryExpr -> PrimaryExpr Arguments
Rule 174   Selector -> PERIOD IDENT
Rule 175   Index -> LEFT_BRACKET Expression RIGHT_BRACKET
Rule 176   Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET
Rule 177   Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET
Rule 178   TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
Rule 179   Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS
Rule 180   ArgumentsPlus -> ArgumentsInOr
Rule 181   ArgumentsPlus -> <empty>
Rule 182   ArgumentsInOr -> ExpressionList
Rule 183   ArgumentsInOr -> Type CommaExpressionListPlus
Rule 184   CommaExpressionListPlus -> COMMA ExpressionList
Rule 185   CommaExpressionListPlus -> ExpressionList
Rule 186   CommaExpressionListPlus -> <empty>
Rule 187   MethodExpr -> ReceiverType PERIOD MethodName
Rule 188   ReceiverType -> Type
Rule 189   Expression -> UnaryExpr
Rule 190   Expression -> Expression binary_op Expression
Rule 191   UnaryExpr -> PrimaryExpr
Rule 192   UnaryExpr -> unary_op UnaryExpr
Rule 193   binary_op -> LOGICAL_OR
Rule 194   binary_op -> LOGICAL_AND
Rule 195   binary_op -> rel_op
Rule 196   binary_op -> add_op
Rule 197   binary_op -> mul_op
Rule 198   rel_op -> EQUAL
Rule 199   rel_op -> NOT_EQUAL
Rule 200   rel_op -> LESS_THAN
Rule 201   rel_op -> LESS_THAN_EQUAL
Rule 202   rel_op -> GREATER_THAN
Rule 203   rel_op -> GREATER_THAN_EQUAL
Rule 204   add_op -> ADD
Rule 205   add_op -> SUBTRACT
Rule 206   add_op -> OR
Rule 207   add_op -> XOR
Rule 208   mul_op -> MULTIPLY
Rule 209   mul_op -> QUOTIENT
Rule 210   mul_op -> REMAINDER
Rule 211   mul_op -> SHIFT_LEFT
Rule 212   mul_op -> SHIFT_RIGHT
Rule 213   mul_op -> AND
Rule 214   mul_op -> AND_NOT
Rule 215   unary_op -> ADD
Rule 216   unary_op -> SUBTRACT
Rule 217   unary_op -> NOT
Rule 218   unary_op -> XOR
Rule 219   unary_op -> MULTIPLY
Rule 220   unary_op -> AND
Rule 221   unary_op -> ARROW
Rule 222   Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
Rule 223   Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
Rule 224   Statement -> Declaration
Rule 225   Statement -> LabeledStmt
Rule 226   Statement -> SimpleStmt
Rule 227   Statement -> GoStmt
Rule 228   Statement -> ReturnStmt
Rule 229   Statement -> BreakStmt
Rule 230   Statement -> ContinueStmt
Rule 231   Statement -> GotoStmt
Rule 232   Statement -> FallthroughStmt
Rule 233   Statement -> Block
Rule 234   Statement -> IfStmt
Rule 235   Statement -> SwitchStmt
Rule 236   Statement -> SelectStmt
Rule 237   Statement -> ForStmt
Rule 238   Statement -> DeferStmt
Rule 239   SimpleStmt -> ExpressionStmt
Rule 240   SimpleStmt -> SendStmt
Rule 241   SimpleStmt -> IncDecStmt
Rule 242   SimpleStmt -> Assignment
Rule 243   SimpleStmt -> ShortVarDecl
Rule 244   SimpleStmt -> <empty>
Rule 245   LabeledStmt -> Label COLON Statement
Rule 246   Label -> IDENT
Rule 247   ExpressionStmt -> Expression
Rule 248   SendStmt -> Channel ARROW Expression
Rule 249   Channel -> Expression
Rule 250   IncDecStmt -> Expression IncDecOr
Rule 251   IncDecOr -> INCREMENT
Rule 252   IncDecOr -> DECREMENT
Rule 253   Assignment -> ExpressionList assign_op ExpressionList
Rule 254   assign_op -> add_op_mul_op_or_plus ASSIGNMENT
Rule 255   add_op_mul_op_or_plus -> add_op_mul_op_or
Rule 256   add_op_mul_op_or_plus -> <empty>
Rule 257   add_op_mul_op_or -> add_op
Rule 258   add_op_mul_op_or -> mul_op
Rule 259   IfStmt -> IF SimpleStmtSemicolonPlus Expression Block ElsePlus
Rule 260   SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON
Rule 261   SimpleStmtSemicolonPlus -> <empty>
Rule 262   ElsePlus -> ELSE Nested_if_block
Rule 263   ElsePlus -> <empty>
Rule 264   Nested_if_block -> IfStmt
Rule 265   Nested_if_block -> Block
Rule 266   SwitchStmt -> ExprSwitchStmt
Rule 267   SwitchStmt -> TypeSwitchStmt
Rule 268   ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
Rule 269   ExpressionPlus -> Expression
Rule 270   ExpressionPlus -> <empty>
Rule 271   ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause
Rule 272   ExprCaseClauseStar -> <empty>
Rule 273   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 274   ExprSwitchCase -> CASE ExpressionList
Rule 275   ExprSwitchCase -> DEFAULT
Rule 276   TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
Rule 277   TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause
Rule 278   TypeCaseClauseStar -> <empty>
Rule 279   TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS
Rule 280   IdentDefinePlus -> IDENT DEFINE
Rule 281   IdentDefinePlus -> <empty>
Rule 282   TypeCaseClause -> TypeSwitchCase COLON StatementList
Rule 283   TypeSwitchCase -> CASE TypeList
Rule 284   TypeSwitchCase -> DEFAULT
Rule 285   TypeList -> Type CommaTypePlus
Rule 286   CommaTypePlus -> CommaTypePlus COMMA TYPE
Rule 287   CommaTypePlus -> <empty>
Rule 288   ForStmt -> FOR ForInternal Block
Rule 289   ForInternal -> Condition
Rule 290   ForInternal -> ForClause
Rule 291   ForInternal -> RangeClause
Rule 292   ForInternal -> <empty>
Rule 293   Condition -> Expression
Rule 294   ForClause -> InitStmtPlus SEMICOLON ConditionPlus SEMICOLON PostStmtPlus
Rule 295   InitStmtPlus -> InitStmt
Rule 296   InitStmtPlus -> <empty>
Rule 297   ConditionPlus -> Condition
Rule 298   ConditionPlus -> <empty>
Rule 299   PostStmtPlus -> PostStmt
Rule 300   PostStmtPlus -> <empty>
Rule 301   InitStmt -> SimpleStmt
Rule 302   PostStmt -> SimpleStmt
Rule 303   RangeClause -> ExpListAssignIdListDefOrPlus RANGE Expression
Rule 304   ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT
Rule 305   ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE
Rule 306   ExpListAssignIdListDefOrPlus -> <empty>
Rule 307   GoStmt -> GO Expression
Rule 308   SelectStmt -> SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
Rule 309   CommClausePlus -> CommClausePlus CommClause
Rule 310   CommClausePlus -> <empty>
Rule 311   CommClause -> CommCase COLON StatementList
Rule 312   CommCase -> CASE SentStmtRecvStmtOr
Rule 313   CommCase -> DEFAULT
Rule 314   SentStmtRecvStmtOr -> SendStmt
Rule 315   SentStmtRecvStmtOr -> RecvStmt
Rule 316   RecvStmt -> ExpListAssignIdListDefOrPlus RecvExpr
Rule 317   RecvExpr -> Expression
Rule 318   ReturnStmt -> RETURN ExpressionListPlus
Rule 319   ExpressionListPlus -> ExpressionList
Rule 320   ExpressionListPlus -> <empty>
Rule 321   BreakStmt -> BREAK LabelPlus
Rule 322   LabelPlus -> Label
Rule 323   LabelPlus -> <empty>
Rule 324   ContinueStmt -> CONTINUE LabelPlus
Rule 325   GotoStmt -> GOTO Label
Rule 326   FallthroughStmt -> FALLTHROUGH
Rule 327   DeferStmt -> DEFER Expression

Terminals, with rules where they appear

ADD                  : 204 215
ADD_ASSIGNMENT       : 
AND                  : 213 220
AND_ASSIGNMENT       : 
AND_NOT              : 214
AND_NOT_ASSIGNMENT   : 
ARROW                : 75 76 221 248
ASSIGNMENT           : 92 109 117 118 254 304
BREAK                : 321
CASE                 : 274 283 312
CHAN                 : 74 75 76
COLON                : 157 176 177 177 245 273 282 311
COMMA                : 53 57 97 100 151 154 184 222 286
COMMENT              : 
CONST                : 86
CONTINUE             : 324
DECREMENT            : 252
DEFAULT              : 275 284 313
DEFER                : 327
DEFINE               : 120 280 305
ELLIPSIS             : 61 145
ELSE                 : 262
EOF                  : 
EQUAL                : 198
FALLTHROUGH          : 326
FLOAT                : 135
FOR                  : 288
FUNCTION             : 46 121 126 165
GO                   : 307
GOTO                 : 325
GREATER_THAN         : 202
GREATER_THAN_EQUAL   : 203
IDENT                : 6 16 21 69 96 97 109 110 124 139 141 141 162 174 246 280
IF                   : 259
IMAGINARY            : 136
IMPORT               : 7
INCREMENT            : 251
INT                  : 134
INTERFACE            : 63
LEFT_BRACE           : 34 63 77 268 276 308
LEFT_BRACKET         : 31 33 71 145 149 175 176 177
LEFT_PARENTHESIS     : 9 20 52 88 104 112 130 178 179 222 223 279
LESS_THAN            : 200
LESS_THAN_EQUAL      : 201
LOGICAL_AND          : 194
LOGICAL_OR           : 193
MAP                  : 71
MULTIPLY             : 41 44 208 219
MUL_ASSIGNMENT       : 
NEWLINE              : 
NOT                  : 217
NOT_EQUAL            : 199
OR                   : 206
OR_ASSIGNMENT        : 
PACKAGE              : 6
PERIOD               : 15 141 174 178 187 279
QUOTIENT             : 209
QUO_ASSIGNMENT       : 
RANGE                : 303
REMAINDER            : 210
REM_ASSIGNMENT       : 
RETURN               : 318
RIGHT_BRACE          : 34 63 77 268 276 308
RIGHT_BRACKET        : 31 33 71 145 149 175 176 177
RIGHT_PARENTHESIS    : 9 20 52 88 104 112 130 178 179 222 223 279
RUNE                 : 137
SELECT               : 308
SEMICOLON            : 1 2 4 10 35 64 78 89 105 113 260 294 294
SHIFT_LEFT           : 211
SHIFT_LEFT_ASSIGNMENT : 
SHIFT_RIGHT          : 212
SHIFT_RIGHT_ASSIGNMENT : 
STRING               : 17 43 138
STRUCT               : 34
SUBTRACT             : 205 216
SUB_ASSIGNMENT       : 
SWITCH               : 268 276
TYPE                 : 102 279 286
VARIABLE             : 111 112
XOR                  : 207 218
XOR_ASSIGNMENT       : 
error                : 

Nonterminals, with rules where they appear

AliasDecl            : 107
Arguments            : 173
ArgumentsInOr        : 180
ArgumentsPlus        : 179
ArrayLength          : 31
ArrayType            : 23 144
Assignment           : 242
AssignmentExpressionListPlus : 116
BaseType             : 44
BasicLit             : 131
Block                : 125 233 259 265 288
BreakStmt            : 229
Channel              : 248
ChannelType          : 30
ChannelTypeOr        : 73
CommCase             : 311
CommClause           : 309
CommClausePlus       : 308 309
CommaExpressionListPlus : 183
CommaTypePlus        : 285 286
CompositeLit         : 132
Condition            : 289 297
ConditionPlus        : 294
ConstDecl            : 80
ConstSpec            : 87 89
ConstSpecOr          : 86
ConstSpecStar        : 88 89
ContinueStmt         : 230
Conversion           : 167
Declaration          : 83 224
DeferStmt            : 238
Element              : 156
ElementList          : 150 151
ElementListPlus      : 149
EllipsisPlus         : 58
ElsePlus             : 259
EmbeddedField        : 38
ExpListAssignIdListDefOrPlus : 303 316
ExprCaseClause       : 271
ExprCaseClauseStar   : 268 271
ExprSwitchCase       : 273
ExprSwitchStmt       : 266
Expression           : 32 99 100 118 130 160 163 175 177 177 190 190 222 223 247 248 249 250 259 269 293 303 307 317 327
ExpressionList       : 92 117 120 182 184 185 253 253 274 304 319
ExpressionListPlus   : 318
ExpressionPlus       : 176 176 177 268
ExpressionStar       : 99 100
ExpressionStmt       : 239
FallthroughStmt      : 232
FieldDecl            : 35
FieldDeclStar        : 34 35
FieldName            : 159
ForClause            : 290
ForInternal          : 288
ForStmt              : 237
FunctionBody         : 122 165
FunctionBodyPlus     : 121 126
FunctionDecl         : 84
FunctionLit          : 133
FunctionName         : 121
FunctionType         : 26
GoStmt               : 227
GotoStmt             : 231
IdentDefinePlus      : 279
IdentStar            : 96 97
IdentifierList       : 37 59 91 115 120 305
IdentifierListPlus   : 58
IfStmt               : 234 264
ImportDecl           : 2
ImportDeclStar       : 1 2
ImportPath           : 12
ImportSpec           : 8 10
ImportSpecOr         : 7
ImportSpecSemicolonStar : 9 10
IncDecOr             : 250
IncDecStmt           : 241
Index                : 170
InitStmt             : 295
InitStmtPlus         : 294
InterfaceType        : 27
InterfaceTypeMethod  : 64
InterfaceTypeName    : 67
InterfaceTypePlus    : 63 64
Key                  : 157
KeyPlus              : 156
KeyType              : 71
KeyedElement         : 153 154
KeyedElementStar     : 153 154
Label                : 245 322 325
LabelPlus            : 321 324
LabeledStmt          : 225
Literal              : 128
LiteralType          : 142
LiteralValue         : 142 161 164
MapType              : 29 147
MethodDecl           : 85
MethodExpr           : 168
MethodName           : 68 126 187
MethodSpec           : 66
Nested_if_block      : 262
Operand              : 166
OperandName          : 129
PackageClause        : 1
ParameterDecl        : 56 57
ParameterList        : 53 54 57
ParameterListPlus    : 52
Parameters           : 47 50 127
PeriodPackageNameOr  : 13
PeriodPackageNamePlus : 12
PointerType          : 25
PostStmt             : 299
PostStmtPlus         : 294
PrimaryExpr          : 169 170 171 172 173 191 279
QualifiedIdent       : 22 140
RangeClause          : 291
Receiver             : 126
ReceiverType         : 187
RecvExpr             : 316
RecvStmt             : 315
Result               : 48
ResultPlus           : 47
ReturnStmt           : 228
SelectStmt           : 236
Selector             : 169
SendStmt             : 240 314
SentStmtRecvStmtOr   : 312
ShortVarDecl         : 243
Signature            : 46 68 121 126 165
SimpleStmt           : 226 260 301 302
SimpleStmtSemicolonPlus : 259 268 276
Slice                : 171
SliceType            : 28 146
SourceFile           : 0
Statement            : 78 245
StatementList        : 77 78 273 282 311
StructType           : 24 143
SwitchStmt           : 235
Tag                  : 39
TagPlus              : 37 38
TopLevelDecl         : 4
TopLevelDeclStar     : 1 4
Type                 : 20 31 33 37 45 51 58 71 72 73 94 109 110 116 145 178 183 188 222 223 285
TypeAssertion        : 172
TypeAssignmentExpressionListPlus : 91
TypeCaseClause       : 277
TypeCaseClauseStar   : 276 277
TypeDecl             : 81
TypeDef              : 108
TypeExpressionListOr : 115
TypeList             : 283
TypeLit              : 19
TypeName             : 18 41 42 70 148
TypePlus             : 92
TypeSpec             : 103 105
TypeSpecOr           : 102
TypeSpecStar         : 104 105
TypeSwitchCase       : 282
TypeSwitchGuard      : 276
TypeSwitchStmt       : 267
UnaryExpr            : 189 192
VarDecl              : 82
VarSpec              : 111 113
VarSpecStar          : 112 113
add_op               : 196 257
add_op_mul_op_or     : 255
add_op_mul_op_or_plus : 254
assign_op            : 253
binary_op            : 190
mul_op               : 197 258
rel_op               : 195
unary_op             : 192

Parsing method: LALR

state 0

    (0) S' -> . SourceFile
    (1) SourceFile -> . PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar
    (6) PackageClause -> . PACKAGE IDENT

    PACKAGE         shift and go to state 3

    SourceFile                     shift and go to state 1
    PackageClause                  shift and go to state 2

state 1

    (0) S' -> SourceFile .



state 2

    (1) SourceFile -> PackageClause . SEMICOLON ImportDeclStar TopLevelDeclStar

    SEMICOLON       shift and go to state 4


state 3

    (6) PackageClause -> PACKAGE . IDENT

    IDENT           shift and go to state 5


state 4

    (1) SourceFile -> PackageClause SEMICOLON . ImportDeclStar TopLevelDeclStar
    (2) ImportDeclStar -> . ImportDeclStar ImportDecl SEMICOLON
    (3) ImportDeclStar -> .

    IMPORT          reduce using rule 3 (ImportDeclStar -> .)
    FUNCTION        reduce using rule 3 (ImportDeclStar -> .)
    CONST           reduce using rule 3 (ImportDeclStar -> .)
    TYPE            reduce using rule 3 (ImportDeclStar -> .)
    VARIABLE        reduce using rule 3 (ImportDeclStar -> .)
    $end            reduce using rule 3 (ImportDeclStar -> .)

    ImportDeclStar                 shift and go to state 6

state 5

    (6) PackageClause -> PACKAGE IDENT .

    SEMICOLON       reduce using rule 6 (PackageClause -> PACKAGE IDENT .)


state 6

    (1) SourceFile -> PackageClause SEMICOLON ImportDeclStar . TopLevelDeclStar
    (2) ImportDeclStar -> ImportDeclStar . ImportDecl SEMICOLON
    (4) TopLevelDeclStar -> . TopLevelDeclStar TopLevelDecl SEMICOLON
    (5) TopLevelDeclStar -> .
    (7) ImportDecl -> . IMPORT ImportSpecOr

    FUNCTION        reduce using rule 5 (TopLevelDeclStar -> .)
    CONST           reduce using rule 5 (TopLevelDeclStar -> .)
    TYPE            reduce using rule 5 (TopLevelDeclStar -> .)
    VARIABLE        reduce using rule 5 (TopLevelDeclStar -> .)
    $end            reduce using rule 5 (TopLevelDeclStar -> .)
    IMPORT          shift and go to state 9

    TopLevelDeclStar               shift and go to state 7
    ImportDecl                     shift and go to state 8

state 7

    (1) SourceFile -> PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar .
    (4) TopLevelDeclStar -> TopLevelDeclStar . TopLevelDecl SEMICOLON
    (83) TopLevelDecl -> . Declaration
    (84) TopLevelDecl -> . FunctionDecl
    (85) TopLevelDecl -> . MethodDecl
    (80) Declaration -> . ConstDecl
    (81) Declaration -> . TypeDecl
    (82) Declaration -> . VarDecl
    (121) FunctionDecl -> . FUNCTION FunctionName Signature FunctionBodyPlus
    (126) MethodDecl -> . FUNCTION Receiver MethodName Signature FunctionBodyPlus
    (86) ConstDecl -> . CONST ConstSpecOr
    (102) TypeDecl -> . TYPE TypeSpecOr
    (111) VarDecl -> . VARIABLE VarSpec
    (112) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS

    $end            reduce using rule 1 (SourceFile -> PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar .)
    FUNCTION        shift and go to state 17
    CONST           shift and go to state 18
    TYPE            shift and go to state 19
    VARIABLE        shift and go to state 20

    TopLevelDecl                   shift and go to state 10
    Declaration                    shift and go to state 11
    FunctionDecl                   shift and go to state 12
    MethodDecl                     shift and go to state 13
    ConstDecl                      shift and go to state 14
    TypeDecl                       shift and go to state 15
    VarDecl                        shift and go to state 16

state 8

    (2) ImportDeclStar -> ImportDeclStar ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 21


state 9

    (7) ImportDecl -> IMPORT . ImportSpecOr
    (8) ImportSpecOr -> . ImportSpec
    (9) ImportSpecOr -> . LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS
    (12) ImportSpec -> . PeriodPackageNamePlus ImportPath
    (13) PeriodPackageNamePlus -> . PeriodPackageNameOr
    (14) PeriodPackageNamePlus -> .
    (15) PeriodPackageNameOr -> . PERIOD
    (16) PeriodPackageNameOr -> . IDENT

    LEFT_PARENTHESIS shift and go to state 24
    STRING          reduce using rule 14 (PeriodPackageNamePlus -> .)
    PERIOD          shift and go to state 27
    IDENT           shift and go to state 28

    ImportSpecOr                   shift and go to state 22
    ImportSpec                     shift and go to state 23
    PeriodPackageNamePlus          shift and go to state 25
    PeriodPackageNameOr            shift and go to state 26

state 10

    (4) TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 29


state 11

    (83) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 83 (TopLevelDecl -> Declaration .)


state 12

    (84) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 84 (TopLevelDecl -> FunctionDecl .)


state 13

    (85) TopLevelDecl -> MethodDecl .

    SEMICOLON       reduce using rule 85 (TopLevelDecl -> MethodDecl .)


state 14

    (80) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 80 (Declaration -> ConstDecl .)


state 15

    (81) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 81 (Declaration -> TypeDecl .)


state 16

    (82) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 82 (Declaration -> VarDecl .)


state 17

    (121) FunctionDecl -> FUNCTION . FunctionName Signature FunctionBodyPlus
    (126) MethodDecl -> FUNCTION . Receiver MethodName Signature FunctionBodyPlus
    (124) FunctionName -> . IDENT
    (127) Receiver -> . Parameters
    (52) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    IDENT           shift and go to state 32
    LEFT_PARENTHESIS shift and go to state 34

    FunctionName                   shift and go to state 30
    Receiver                       shift and go to state 31
    Parameters                     shift and go to state 33

state 18

    (86) ConstDecl -> CONST . ConstSpecOr
    (87) ConstSpecOr -> . ConstSpec
    (88) ConstSpecOr -> . LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS
    (91) ConstSpec -> . IdentifierList TypeAssignmentExpressionListPlus
    (96) IdentifierList -> . IDENT IdentStar

    LEFT_PARENTHESIS shift and go to state 37
    IDENT           shift and go to state 39

    ConstSpecOr                    shift and go to state 35
    ConstSpec                      shift and go to state 36
    IdentifierList                 shift and go to state 38

state 19

    (102) TypeDecl -> TYPE . TypeSpecOr
    (103) TypeSpecOr -> . TypeSpec
    (104) TypeSpecOr -> . LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESIS
    (107) TypeSpec -> . AliasDecl
    (108) TypeSpec -> . TypeDef
    (109) AliasDecl -> . IDENT ASSIGNMENT Type
    (110) TypeDef -> . IDENT Type

    LEFT_PARENTHESIS shift and go to state 42
    IDENT           shift and go to state 45

    TypeSpecOr                     shift and go to state 40
    TypeSpec                       shift and go to state 41
    AliasDecl                      shift and go to state 43
    TypeDef                        shift and go to state 44

state 20

    (111) VarDecl -> VARIABLE . VarSpec
    (112) VarDecl -> VARIABLE . LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (115) VarSpec -> . IdentifierList TypeExpressionListOr
    (96) IdentifierList -> . IDENT IdentStar

    LEFT_PARENTHESIS shift and go to state 47
    IDENT           shift and go to state 39

    VarSpec                        shift and go to state 46
    IdentifierList                 shift and go to state 48

state 21

    (2) ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .

    IMPORT          reduce using rule 2 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)
    FUNCTION        reduce using rule 2 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)
    CONST           reduce using rule 2 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)
    TYPE            reduce using rule 2 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)
    VARIABLE        reduce using rule 2 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)
    $end            reduce using rule 2 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)


state 22

    (7) ImportDecl -> IMPORT ImportSpecOr .

    SEMICOLON       reduce using rule 7 (ImportDecl -> IMPORT ImportSpecOr .)


state 23

    (8) ImportSpecOr -> ImportSpec .

    SEMICOLON       reduce using rule 8 (ImportSpecOr -> ImportSpec .)


state 24

    (9) ImportSpecOr -> LEFT_PARENTHESIS . ImportSpecSemicolonStar RIGHT_PARENTHESIS
    (10) ImportSpecSemicolonStar -> . ImportSpecSemicolonStar ImportSpec SEMICOLON
    (11) ImportSpecSemicolonStar -> .

    RIGHT_PARENTHESIS reduce using rule 11 (ImportSpecSemicolonStar -> .)
    PERIOD          reduce using rule 11 (ImportSpecSemicolonStar -> .)
    IDENT           reduce using rule 11 (ImportSpecSemicolonStar -> .)
    STRING          reduce using rule 11 (ImportSpecSemicolonStar -> .)

    ImportSpecSemicolonStar        shift and go to state 49

state 25

    (12) ImportSpec -> PeriodPackageNamePlus . ImportPath
    (17) ImportPath -> . STRING

    STRING          shift and go to state 51

    ImportPath                     shift and go to state 50

state 26

    (13) PeriodPackageNamePlus -> PeriodPackageNameOr .

    STRING          reduce using rule 13 (PeriodPackageNamePlus -> PeriodPackageNameOr .)


state 27

    (15) PeriodPackageNameOr -> PERIOD .

    STRING          reduce using rule 15 (PeriodPackageNameOr -> PERIOD .)


state 28

    (16) PeriodPackageNameOr -> IDENT .

    STRING          reduce using rule 16 (PeriodPackageNameOr -> IDENT .)


state 29

    (4) TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .

    FUNCTION        reduce using rule 4 (TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 4 (TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 4 (TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .)
    VARIABLE        reduce using rule 4 (TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .)
    $end            reduce using rule 4 (TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .)


state 30

    (121) FunctionDecl -> FUNCTION FunctionName . Signature FunctionBodyPlus
    (47) Signature -> . Parameters ResultPlus
    (52) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 34

    Signature                      shift and go to state 52
    Parameters                     shift and go to state 53

state 31

    (126) MethodDecl -> FUNCTION Receiver . MethodName Signature FunctionBodyPlus
    (69) MethodName -> . IDENT

    IDENT           shift and go to state 55

    MethodName                     shift and go to state 54

state 32

    (124) FunctionName -> IDENT .

    LEFT_PARENTHESIS reduce using rule 124 (FunctionName -> IDENT .)


state 33

    (127) Receiver -> Parameters .

    IDENT           reduce using rule 127 (Receiver -> Parameters .)


state 34

    (52) Parameters -> LEFT_PARENTHESIS . ParameterListPlus RIGHT_PARENTHESIS
    (53) ParameterListPlus -> . ParameterList COMMA
    (54) ParameterListPlus -> . ParameterList
    (55) ParameterListPlus -> .
    (56) ParameterList -> . ParameterDecl
    (57) ParameterList -> . ParameterDecl COMMA ParameterList
    (58) ParameterDecl -> . IdentifierListPlus EllipsisPlus Type
    (59) IdentifierListPlus -> . IdentifierList
    (60) IdentifierListPlus -> .
    (96) IdentifierList -> . IDENT IdentStar

  ! shift/reduce conflict for IDENT resolved as shift
    RIGHT_PARENTHESIS reduce using rule 55 (ParameterListPlus -> .)
    ELLIPSIS        reduce using rule 60 (IdentifierListPlus -> .)
    LEFT_PARENTHESIS reduce using rule 60 (IdentifierListPlus -> .)
    LEFT_BRACKET    reduce using rule 60 (IdentifierListPlus -> .)
    STRUCT          reduce using rule 60 (IdentifierListPlus -> .)
    MULTIPLY        reduce using rule 60 (IdentifierListPlus -> .)
    FUNCTION        reduce using rule 60 (IdentifierListPlus -> .)
    INTERFACE       reduce using rule 60 (IdentifierListPlus -> .)
    MAP             reduce using rule 60 (IdentifierListPlus -> .)
    CHAN            reduce using rule 60 (IdentifierListPlus -> .)
    ARROW           reduce using rule 60 (IdentifierListPlus -> .)
    IDENT           shift and go to state 39

  ! IDENT           [ reduce using rule 60 (IdentifierListPlus -> .) ]

    ParameterListPlus              shift and go to state 56
    ParameterList                  shift and go to state 57
    ParameterDecl                  shift and go to state 58
    IdentifierListPlus             shift and go to state 59
    IdentifierList                 shift and go to state 60

state 35

    (86) ConstDecl -> CONST ConstSpecOr .

    SEMICOLON       reduce using rule 86 (ConstDecl -> CONST ConstSpecOr .)


state 36

    (87) ConstSpecOr -> ConstSpec .

    SEMICOLON       reduce using rule 87 (ConstSpecOr -> ConstSpec .)


state 37

    (88) ConstSpecOr -> LEFT_PARENTHESIS . ConstSpecStar RIGHT_PARENTHESIS
    (89) ConstSpecStar -> . ConstSpecStar ConstSpec SEMICOLON
    (90) ConstSpecStar -> .

    RIGHT_PARENTHESIS reduce using rule 90 (ConstSpecStar -> .)
    IDENT           reduce using rule 90 (ConstSpecStar -> .)

    ConstSpecStar                  shift and go to state 61

state 38

    (91) ConstSpec -> IdentifierList . TypeAssignmentExpressionListPlus
    (92) TypeAssignmentExpressionListPlus -> . TypePlus ASSIGNMENT ExpressionList
    (93) TypeAssignmentExpressionListPlus -> .
    (94) TypePlus -> . Type
    (95) TypePlus -> .
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    SEMICOLON       reduce using rule 93 (TypeAssignmentExpressionListPlus -> .)
    ASSIGNMENT      reduce using rule 95 (TypePlus -> .)
    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    TypeAssignmentExpressionListPlus shift and go to state 62
    TypePlus                       shift and go to state 63
    Type                           shift and go to state 64
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 39

    (96) IdentifierList -> IDENT . IdentStar
    (97) IdentStar -> . COMMA IDENT IdentStar
    (98) IdentStar -> .

    COMMA           shift and go to state 88
    LEFT_PARENTHESIS reduce using rule 98 (IdentStar -> .)
    IDENT           reduce using rule 98 (IdentStar -> .)
    LEFT_BRACKET    reduce using rule 98 (IdentStar -> .)
    STRUCT          reduce using rule 98 (IdentStar -> .)
    MULTIPLY        reduce using rule 98 (IdentStar -> .)
    FUNCTION        reduce using rule 98 (IdentStar -> .)
    INTERFACE       reduce using rule 98 (IdentStar -> .)
    MAP             reduce using rule 98 (IdentStar -> .)
    CHAN            reduce using rule 98 (IdentStar -> .)
    ARROW           reduce using rule 98 (IdentStar -> .)
    ASSIGNMENT      reduce using rule 98 (IdentStar -> .)
    SEMICOLON       reduce using rule 98 (IdentStar -> .)
    ELLIPSIS        reduce using rule 98 (IdentStar -> .)

    IdentStar                      shift and go to state 87

state 40

    (102) TypeDecl -> TYPE TypeSpecOr .

    SEMICOLON       reduce using rule 102 (TypeDecl -> TYPE TypeSpecOr .)


state 41

    (103) TypeSpecOr -> TypeSpec .

    SEMICOLON       reduce using rule 103 (TypeSpecOr -> TypeSpec .)


state 42

    (104) TypeSpecOr -> LEFT_PARENTHESIS . TypeSpecStar RIGHT_PARENTHESIS
    (105) TypeSpecStar -> . TypeSpecStar TypeSpec SEMICOLON
    (106) TypeSpecStar -> .

    RIGHT_PARENTHESIS reduce using rule 106 (TypeSpecStar -> .)
    IDENT           reduce using rule 106 (TypeSpecStar -> .)

    TypeSpecStar                   shift and go to state 89

state 43

    (107) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 107 (TypeSpec -> AliasDecl .)


state 44

    (108) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 108 (TypeSpec -> TypeDef .)


state 45

    (109) AliasDecl -> IDENT . ASSIGNMENT Type
    (110) TypeDef -> IDENT . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ASSIGNMENT      shift and go to state 90
    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 91
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 46

    (111) VarDecl -> VARIABLE VarSpec .

    SEMICOLON       reduce using rule 111 (VarDecl -> VARIABLE VarSpec .)


state 47

    (112) VarDecl -> VARIABLE LEFT_PARENTHESIS . VarSpecStar RIGHT_PARENTHESIS
    (113) VarSpecStar -> . VarSpecStar VarSpec SEMICOLON
    (114) VarSpecStar -> .

    RIGHT_PARENTHESIS reduce using rule 114 (VarSpecStar -> .)
    IDENT           reduce using rule 114 (VarSpecStar -> .)

    VarSpecStar                    shift and go to state 92

state 48

    (115) VarSpec -> IdentifierList . TypeExpressionListOr
    (116) TypeExpressionListOr -> . Type AssignmentExpressionListPlus
    (117) TypeExpressionListOr -> . ASSIGNMENT ExpressionList
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ASSIGNMENT      shift and go to state 95
    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    TypeExpressionListOr           shift and go to state 93
    Type                           shift and go to state 94
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 49

    (9) ImportSpecOr -> LEFT_PARENTHESIS ImportSpecSemicolonStar . RIGHT_PARENTHESIS
    (10) ImportSpecSemicolonStar -> ImportSpecSemicolonStar . ImportSpec SEMICOLON
    (12) ImportSpec -> . PeriodPackageNamePlus ImportPath
    (13) PeriodPackageNamePlus -> . PeriodPackageNameOr
    (14) PeriodPackageNamePlus -> .
    (15) PeriodPackageNameOr -> . PERIOD
    (16) PeriodPackageNameOr -> . IDENT

    RIGHT_PARENTHESIS shift and go to state 96
    STRING          reduce using rule 14 (PeriodPackageNamePlus -> .)
    PERIOD          shift and go to state 27
    IDENT           shift and go to state 28

    ImportSpec                     shift and go to state 97
    PeriodPackageNamePlus          shift and go to state 25
    PeriodPackageNameOr            shift and go to state 26

state 50

    (12) ImportSpec -> PeriodPackageNamePlus ImportPath .

    SEMICOLON       reduce using rule 12 (ImportSpec -> PeriodPackageNamePlus ImportPath .)


state 51

    (17) ImportPath -> STRING .

    SEMICOLON       reduce using rule 17 (ImportPath -> STRING .)


state 52

    (121) FunctionDecl -> FUNCTION FunctionName Signature . FunctionBodyPlus
    (122) FunctionBodyPlus -> . FunctionBody
    (123) FunctionBodyPlus -> .
    (125) FunctionBody -> . Block
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    SEMICOLON       reduce using rule 123 (FunctionBodyPlus -> .)
    LEFT_BRACE      shift and go to state 101

    FunctionBodyPlus               shift and go to state 98
    FunctionBody                   shift and go to state 99
    Block                          shift and go to state 100

state 53

    (47) Signature -> Parameters . ResultPlus
    (48) ResultPlus -> . Result
    (49) ResultPlus -> .
    (50) Result -> . Parameters
    (51) Result -> . Type
    (52) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
    LEFT_BRACE      reduce using rule 49 (ResultPlus -> .)
    SEMICOLON       reduce using rule 49 (ResultPlus -> .)
    ASSIGNMENT      reduce using rule 49 (ResultPlus -> .)
    RIGHT_PARENTHESIS reduce using rule 49 (ResultPlus -> .)
    PERIOD          reduce using rule 49 (ResultPlus -> .)
    COMMA           reduce using rule 49 (ResultPlus -> .)
    RIGHT_BRACKET   reduce using rule 49 (ResultPlus -> .)
    ADD             reduce using rule 49 (ResultPlus -> .)
    SUBTRACT        reduce using rule 49 (ResultPlus -> .)
    NOT             reduce using rule 49 (ResultPlus -> .)
    XOR             reduce using rule 49 (ResultPlus -> .)
    AND             reduce using rule 49 (ResultPlus -> .)
    INT             reduce using rule 49 (ResultPlus -> .)
    FLOAT           reduce using rule 49 (ResultPlus -> .)
    IMAGINARY       reduce using rule 49 (ResultPlus -> .)
    RUNE            reduce using rule 49 (ResultPlus -> .)
    STRING          reduce using rule 49 (ResultPlus -> .)
    COLON           reduce using rule 49 (ResultPlus -> .)
    LEFT_PARENTHESIS shift and go to state 106
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

  ! LEFT_PARENTHESIS [ reduce using rule 49 (ResultPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 49 (ResultPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 49 (ResultPlus -> .) ]
  ! ARROW           [ reduce using rule 49 (ResultPlus -> .) ]
  ! IDENT           [ reduce using rule 49 (ResultPlus -> .) ]
  ! FUNCTION        [ reduce using rule 49 (ResultPlus -> .) ]
  ! STRUCT          [ reduce using rule 49 (ResultPlus -> .) ]
  ! INTERFACE       [ reduce using rule 49 (ResultPlus -> .) ]
  ! MAP             [ reduce using rule 49 (ResultPlus -> .) ]
  ! CHAN            [ reduce using rule 49 (ResultPlus -> .) ]

    Parameters                     shift and go to state 102
    ResultPlus                     shift and go to state 103
    Result                         shift and go to state 104
    Type                           shift and go to state 105
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 54

    (126) MethodDecl -> FUNCTION Receiver MethodName . Signature FunctionBodyPlus
    (47) Signature -> . Parameters ResultPlus
    (52) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 34

    Signature                      shift and go to state 107
    Parameters                     shift and go to state 53

state 55

    (69) MethodName -> IDENT .

    LEFT_PARENTHESIS reduce using rule 69 (MethodName -> IDENT .)
    PERIOD          reduce using rule 69 (MethodName -> IDENT .)
    LEFT_BRACKET    reduce using rule 69 (MethodName -> IDENT .)
    LOGICAL_OR      reduce using rule 69 (MethodName -> IDENT .)
    LOGICAL_AND     reduce using rule 69 (MethodName -> IDENT .)
    EQUAL           reduce using rule 69 (MethodName -> IDENT .)
    NOT_EQUAL       reduce using rule 69 (MethodName -> IDENT .)
    LESS_THAN       reduce using rule 69 (MethodName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 69 (MethodName -> IDENT .)
    GREATER_THAN    reduce using rule 69 (MethodName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 69 (MethodName -> IDENT .)
    ADD             reduce using rule 69 (MethodName -> IDENT .)
    SUBTRACT        reduce using rule 69 (MethodName -> IDENT .)
    OR              reduce using rule 69 (MethodName -> IDENT .)
    XOR             reduce using rule 69 (MethodName -> IDENT .)
    MULTIPLY        reduce using rule 69 (MethodName -> IDENT .)
    QUOTIENT        reduce using rule 69 (MethodName -> IDENT .)
    REMAINDER       reduce using rule 69 (MethodName -> IDENT .)
    SHIFT_LEFT      reduce using rule 69 (MethodName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 69 (MethodName -> IDENT .)
    AND             reduce using rule 69 (MethodName -> IDENT .)
    AND_NOT         reduce using rule 69 (MethodName -> IDENT .)
    RIGHT_BRACKET   reduce using rule 69 (MethodName -> IDENT .)
    COMMA           reduce using rule 69 (MethodName -> IDENT .)
    SEMICOLON       reduce using rule 69 (MethodName -> IDENT .)
    RIGHT_PARENTHESIS reduce using rule 69 (MethodName -> IDENT .)
    INCREMENT       reduce using rule 69 (MethodName -> IDENT .)
    DECREMENT       reduce using rule 69 (MethodName -> IDENT .)
    ARROW           reduce using rule 69 (MethodName -> IDENT .)
    ASSIGNMENT      reduce using rule 69 (MethodName -> IDENT .)
    COLON           reduce using rule 69 (MethodName -> IDENT .)
    LEFT_BRACE      reduce using rule 69 (MethodName -> IDENT .)


state 56

    (52) Parameters -> LEFT_PARENTHESIS ParameterListPlus . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 108


state 57

    (53) ParameterListPlus -> ParameterList . COMMA
    (54) ParameterListPlus -> ParameterList .

    COMMA           shift and go to state 109
    RIGHT_PARENTHESIS reduce using rule 54 (ParameterListPlus -> ParameterList .)


state 58

    (56) ParameterList -> ParameterDecl .
    (57) ParameterList -> ParameterDecl . COMMA ParameterList

  ! shift/reduce conflict for COMMA resolved as shift
    RIGHT_PARENTHESIS reduce using rule 56 (ParameterList -> ParameterDecl .)
    COMMA           shift and go to state 110

  ! COMMA           [ reduce using rule 56 (ParameterList -> ParameterDecl .) ]


state 59

    (58) ParameterDecl -> IdentifierListPlus . EllipsisPlus Type
    (61) EllipsisPlus -> . ELLIPSIS
    (62) EllipsisPlus -> .

    ELLIPSIS        shift and go to state 112
    LEFT_PARENTHESIS reduce using rule 62 (EllipsisPlus -> .)
    IDENT           reduce using rule 62 (EllipsisPlus -> .)
    LEFT_BRACKET    reduce using rule 62 (EllipsisPlus -> .)
    STRUCT          reduce using rule 62 (EllipsisPlus -> .)
    MULTIPLY        reduce using rule 62 (EllipsisPlus -> .)
    FUNCTION        reduce using rule 62 (EllipsisPlus -> .)
    INTERFACE       reduce using rule 62 (EllipsisPlus -> .)
    MAP             reduce using rule 62 (EllipsisPlus -> .)
    CHAN            reduce using rule 62 (EllipsisPlus -> .)
    ARROW           reduce using rule 62 (EllipsisPlus -> .)

    EllipsisPlus                   shift and go to state 111

state 60

    (59) IdentifierListPlus -> IdentifierList .

    ELLIPSIS        reduce using rule 59 (IdentifierListPlus -> IdentifierList .)
    LEFT_PARENTHESIS reduce using rule 59 (IdentifierListPlus -> IdentifierList .)
    IDENT           reduce using rule 59 (IdentifierListPlus -> IdentifierList .)
    LEFT_BRACKET    reduce using rule 59 (IdentifierListPlus -> IdentifierList .)
    STRUCT          reduce using rule 59 (IdentifierListPlus -> IdentifierList .)
    MULTIPLY        reduce using rule 59 (IdentifierListPlus -> IdentifierList .)
    FUNCTION        reduce using rule 59 (IdentifierListPlus -> IdentifierList .)
    INTERFACE       reduce using rule 59 (IdentifierListPlus -> IdentifierList .)
    MAP             reduce using rule 59 (IdentifierListPlus -> IdentifierList .)
    CHAN            reduce using rule 59 (IdentifierListPlus -> IdentifierList .)
    ARROW           reduce using rule 59 (IdentifierListPlus -> IdentifierList .)


state 61

    (88) ConstSpecOr -> LEFT_PARENTHESIS ConstSpecStar . RIGHT_PARENTHESIS
    (89) ConstSpecStar -> ConstSpecStar . ConstSpec SEMICOLON
    (91) ConstSpec -> . IdentifierList TypeAssignmentExpressionListPlus
    (96) IdentifierList -> . IDENT IdentStar

    RIGHT_PARENTHESIS shift and go to state 113
    IDENT           shift and go to state 39

    ConstSpec                      shift and go to state 114
    IdentifierList                 shift and go to state 38

state 62

    (91) ConstSpec -> IdentifierList TypeAssignmentExpressionListPlus .

    SEMICOLON       reduce using rule 91 (ConstSpec -> IdentifierList TypeAssignmentExpressionListPlus .)


state 63

    (92) TypeAssignmentExpressionListPlus -> TypePlus . ASSIGNMENT ExpressionList

    ASSIGNMENT      shift and go to state 115


state 64

    (94) TypePlus -> Type .

    ASSIGNMENT      reduce using rule 94 (TypePlus -> Type .)


state 65

    (18) Type -> TypeName .

    ASSIGNMENT      reduce using rule 18 (Type -> TypeName .)
    SEMICOLON       reduce using rule 18 (Type -> TypeName .)
    LEFT_BRACE      reduce using rule 18 (Type -> TypeName .)
    RIGHT_PARENTHESIS reduce using rule 18 (Type -> TypeName .)
    LEFT_PARENTHESIS reduce using rule 18 (Type -> TypeName .)
    PERIOD          reduce using rule 18 (Type -> TypeName .)
    COMMA           reduce using rule 18 (Type -> TypeName .)
    LEFT_BRACKET    reduce using rule 18 (Type -> TypeName .)
    RIGHT_BRACKET   reduce using rule 18 (Type -> TypeName .)
    ADD             reduce using rule 18 (Type -> TypeName .)
    SUBTRACT        reduce using rule 18 (Type -> TypeName .)
    NOT             reduce using rule 18 (Type -> TypeName .)
    XOR             reduce using rule 18 (Type -> TypeName .)
    MULTIPLY        reduce using rule 18 (Type -> TypeName .)
    AND             reduce using rule 18 (Type -> TypeName .)
    ARROW           reduce using rule 18 (Type -> TypeName .)
    IDENT           reduce using rule 18 (Type -> TypeName .)
    INT             reduce using rule 18 (Type -> TypeName .)
    FLOAT           reduce using rule 18 (Type -> TypeName .)
    IMAGINARY       reduce using rule 18 (Type -> TypeName .)
    RUNE            reduce using rule 18 (Type -> TypeName .)
    STRING          reduce using rule 18 (Type -> TypeName .)
    FUNCTION        reduce using rule 18 (Type -> TypeName .)
    STRUCT          reduce using rule 18 (Type -> TypeName .)
    INTERFACE       reduce using rule 18 (Type -> TypeName .)
    MAP             reduce using rule 18 (Type -> TypeName .)
    CHAN            reduce using rule 18 (Type -> TypeName .)
    COLON           reduce using rule 18 (Type -> TypeName .)


state 66

    (19) Type -> TypeLit .

    ASSIGNMENT      reduce using rule 19 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 19 (Type -> TypeLit .)
    LEFT_BRACE      reduce using rule 19 (Type -> TypeLit .)
    RIGHT_PARENTHESIS reduce using rule 19 (Type -> TypeLit .)
    LEFT_PARENTHESIS reduce using rule 19 (Type -> TypeLit .)
    PERIOD          reduce using rule 19 (Type -> TypeLit .)
    COMMA           reduce using rule 19 (Type -> TypeLit .)
    LEFT_BRACKET    reduce using rule 19 (Type -> TypeLit .)
    RIGHT_BRACKET   reduce using rule 19 (Type -> TypeLit .)
    ADD             reduce using rule 19 (Type -> TypeLit .)
    SUBTRACT        reduce using rule 19 (Type -> TypeLit .)
    NOT             reduce using rule 19 (Type -> TypeLit .)
    XOR             reduce using rule 19 (Type -> TypeLit .)
    MULTIPLY        reduce using rule 19 (Type -> TypeLit .)
    AND             reduce using rule 19 (Type -> TypeLit .)
    ARROW           reduce using rule 19 (Type -> TypeLit .)
    IDENT           reduce using rule 19 (Type -> TypeLit .)
    INT             reduce using rule 19 (Type -> TypeLit .)
    FLOAT           reduce using rule 19 (Type -> TypeLit .)
    IMAGINARY       reduce using rule 19 (Type -> TypeLit .)
    RUNE            reduce using rule 19 (Type -> TypeLit .)
    STRING          reduce using rule 19 (Type -> TypeLit .)
    FUNCTION        reduce using rule 19 (Type -> TypeLit .)
    STRUCT          reduce using rule 19 (Type -> TypeLit .)
    INTERFACE       reduce using rule 19 (Type -> TypeLit .)
    MAP             reduce using rule 19 (Type -> TypeLit .)
    CHAN            reduce using rule 19 (Type -> TypeLit .)
    COLON           reduce using rule 19 (Type -> TypeLit .)


state 67

    (20) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 116
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 68

    (21) TypeName -> IDENT .
    (141) QualifiedIdent -> IDENT . PERIOD IDENT

  ! shift/reduce conflict for PERIOD resolved as shift
    ASSIGNMENT      reduce using rule 21 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 21 (TypeName -> IDENT .)
    LEFT_BRACE      reduce using rule 21 (TypeName -> IDENT .)
    RIGHT_PARENTHESIS reduce using rule 21 (TypeName -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 21 (TypeName -> IDENT .)
    COMMA           reduce using rule 21 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 21 (TypeName -> IDENT .)
    RIGHT_BRACKET   reduce using rule 21 (TypeName -> IDENT .)
    ADD             reduce using rule 21 (TypeName -> IDENT .)
    SUBTRACT        reduce using rule 21 (TypeName -> IDENT .)
    NOT             reduce using rule 21 (TypeName -> IDENT .)
    XOR             reduce using rule 21 (TypeName -> IDENT .)
    MULTIPLY        reduce using rule 21 (TypeName -> IDENT .)
    AND             reduce using rule 21 (TypeName -> IDENT .)
    ARROW           reduce using rule 21 (TypeName -> IDENT .)
    IDENT           reduce using rule 21 (TypeName -> IDENT .)
    INT             reduce using rule 21 (TypeName -> IDENT .)
    FLOAT           reduce using rule 21 (TypeName -> IDENT .)
    IMAGINARY       reduce using rule 21 (TypeName -> IDENT .)
    RUNE            reduce using rule 21 (TypeName -> IDENT .)
    STRING          reduce using rule 21 (TypeName -> IDENT .)
    FUNCTION        reduce using rule 21 (TypeName -> IDENT .)
    STRUCT          reduce using rule 21 (TypeName -> IDENT .)
    INTERFACE       reduce using rule 21 (TypeName -> IDENT .)
    MAP             reduce using rule 21 (TypeName -> IDENT .)
    CHAN            reduce using rule 21 (TypeName -> IDENT .)
    COLON           reduce using rule 21 (TypeName -> IDENT .)
    PERIOD          shift and go to state 117

  ! PERIOD          [ reduce using rule 21 (TypeName -> IDENT .) ]


state 69

    (22) TypeName -> QualifiedIdent .

    ASSIGNMENT      reduce using rule 22 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 22 (TypeName -> QualifiedIdent .)
    LEFT_BRACE      reduce using rule 22 (TypeName -> QualifiedIdent .)
    RIGHT_PARENTHESIS reduce using rule 22 (TypeName -> QualifiedIdent .)
    LEFT_PARENTHESIS reduce using rule 22 (TypeName -> QualifiedIdent .)
    PERIOD          reduce using rule 22 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 22 (TypeName -> QualifiedIdent .)
    LEFT_BRACKET    reduce using rule 22 (TypeName -> QualifiedIdent .)
    RIGHT_BRACKET   reduce using rule 22 (TypeName -> QualifiedIdent .)
    ADD             reduce using rule 22 (TypeName -> QualifiedIdent .)
    SUBTRACT        reduce using rule 22 (TypeName -> QualifiedIdent .)
    NOT             reduce using rule 22 (TypeName -> QualifiedIdent .)
    XOR             reduce using rule 22 (TypeName -> QualifiedIdent .)
    MULTIPLY        reduce using rule 22 (TypeName -> QualifiedIdent .)
    AND             reduce using rule 22 (TypeName -> QualifiedIdent .)
    ARROW           reduce using rule 22 (TypeName -> QualifiedIdent .)
    IDENT           reduce using rule 22 (TypeName -> QualifiedIdent .)
    INT             reduce using rule 22 (TypeName -> QualifiedIdent .)
    FLOAT           reduce using rule 22 (TypeName -> QualifiedIdent .)
    IMAGINARY       reduce using rule 22 (TypeName -> QualifiedIdent .)
    RUNE            reduce using rule 22 (TypeName -> QualifiedIdent .)
    STRING          reduce using rule 22 (TypeName -> QualifiedIdent .)
    FUNCTION        reduce using rule 22 (TypeName -> QualifiedIdent .)
    STRUCT          reduce using rule 22 (TypeName -> QualifiedIdent .)
    INTERFACE       reduce using rule 22 (TypeName -> QualifiedIdent .)
    MAP             reduce using rule 22 (TypeName -> QualifiedIdent .)
    CHAN            reduce using rule 22 (TypeName -> QualifiedIdent .)
    COLON           reduce using rule 22 (TypeName -> QualifiedIdent .)


state 70

    (23) TypeLit -> ArrayType .

    ASSIGNMENT      reduce using rule 23 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 23 (TypeLit -> ArrayType .)
    LEFT_BRACE      reduce using rule 23 (TypeLit -> ArrayType .)
    RIGHT_PARENTHESIS reduce using rule 23 (TypeLit -> ArrayType .)
    LEFT_PARENTHESIS reduce using rule 23 (TypeLit -> ArrayType .)
    PERIOD          reduce using rule 23 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 23 (TypeLit -> ArrayType .)
    LEFT_BRACKET    reduce using rule 23 (TypeLit -> ArrayType .)
    RIGHT_BRACKET   reduce using rule 23 (TypeLit -> ArrayType .)
    ADD             reduce using rule 23 (TypeLit -> ArrayType .)
    SUBTRACT        reduce using rule 23 (TypeLit -> ArrayType .)
    NOT             reduce using rule 23 (TypeLit -> ArrayType .)
    XOR             reduce using rule 23 (TypeLit -> ArrayType .)
    MULTIPLY        reduce using rule 23 (TypeLit -> ArrayType .)
    AND             reduce using rule 23 (TypeLit -> ArrayType .)
    ARROW           reduce using rule 23 (TypeLit -> ArrayType .)
    IDENT           reduce using rule 23 (TypeLit -> ArrayType .)
    INT             reduce using rule 23 (TypeLit -> ArrayType .)
    FLOAT           reduce using rule 23 (TypeLit -> ArrayType .)
    IMAGINARY       reduce using rule 23 (TypeLit -> ArrayType .)
    RUNE            reduce using rule 23 (TypeLit -> ArrayType .)
    STRING          reduce using rule 23 (TypeLit -> ArrayType .)
    FUNCTION        reduce using rule 23 (TypeLit -> ArrayType .)
    STRUCT          reduce using rule 23 (TypeLit -> ArrayType .)
    INTERFACE       reduce using rule 23 (TypeLit -> ArrayType .)
    MAP             reduce using rule 23 (TypeLit -> ArrayType .)
    CHAN            reduce using rule 23 (TypeLit -> ArrayType .)
    COLON           reduce using rule 23 (TypeLit -> ArrayType .)


state 71

    (24) TypeLit -> StructType .

    ASSIGNMENT      reduce using rule 24 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 24 (TypeLit -> StructType .)
    LEFT_BRACE      reduce using rule 24 (TypeLit -> StructType .)
    RIGHT_PARENTHESIS reduce using rule 24 (TypeLit -> StructType .)
    LEFT_PARENTHESIS reduce using rule 24 (TypeLit -> StructType .)
    PERIOD          reduce using rule 24 (TypeLit -> StructType .)
    COMMA           reduce using rule 24 (TypeLit -> StructType .)
    LEFT_BRACKET    reduce using rule 24 (TypeLit -> StructType .)
    RIGHT_BRACKET   reduce using rule 24 (TypeLit -> StructType .)
    ADD             reduce using rule 24 (TypeLit -> StructType .)
    SUBTRACT        reduce using rule 24 (TypeLit -> StructType .)
    NOT             reduce using rule 24 (TypeLit -> StructType .)
    XOR             reduce using rule 24 (TypeLit -> StructType .)
    MULTIPLY        reduce using rule 24 (TypeLit -> StructType .)
    AND             reduce using rule 24 (TypeLit -> StructType .)
    ARROW           reduce using rule 24 (TypeLit -> StructType .)
    IDENT           reduce using rule 24 (TypeLit -> StructType .)
    INT             reduce using rule 24 (TypeLit -> StructType .)
    FLOAT           reduce using rule 24 (TypeLit -> StructType .)
    IMAGINARY       reduce using rule 24 (TypeLit -> StructType .)
    RUNE            reduce using rule 24 (TypeLit -> StructType .)
    STRING          reduce using rule 24 (TypeLit -> StructType .)
    FUNCTION        reduce using rule 24 (TypeLit -> StructType .)
    STRUCT          reduce using rule 24 (TypeLit -> StructType .)
    INTERFACE       reduce using rule 24 (TypeLit -> StructType .)
    MAP             reduce using rule 24 (TypeLit -> StructType .)
    CHAN            reduce using rule 24 (TypeLit -> StructType .)
    COLON           reduce using rule 24 (TypeLit -> StructType .)


state 72

    (25) TypeLit -> PointerType .

    ASSIGNMENT      reduce using rule 25 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 25 (TypeLit -> PointerType .)
    LEFT_BRACE      reduce using rule 25 (TypeLit -> PointerType .)
    RIGHT_PARENTHESIS reduce using rule 25 (TypeLit -> PointerType .)
    LEFT_PARENTHESIS reduce using rule 25 (TypeLit -> PointerType .)
    PERIOD          reduce using rule 25 (TypeLit -> PointerType .)
    COMMA           reduce using rule 25 (TypeLit -> PointerType .)
    LEFT_BRACKET    reduce using rule 25 (TypeLit -> PointerType .)
    RIGHT_BRACKET   reduce using rule 25 (TypeLit -> PointerType .)
    ADD             reduce using rule 25 (TypeLit -> PointerType .)
    SUBTRACT        reduce using rule 25 (TypeLit -> PointerType .)
    NOT             reduce using rule 25 (TypeLit -> PointerType .)
    XOR             reduce using rule 25 (TypeLit -> PointerType .)
    MULTIPLY        reduce using rule 25 (TypeLit -> PointerType .)
    AND             reduce using rule 25 (TypeLit -> PointerType .)
    ARROW           reduce using rule 25 (TypeLit -> PointerType .)
    IDENT           reduce using rule 25 (TypeLit -> PointerType .)
    INT             reduce using rule 25 (TypeLit -> PointerType .)
    FLOAT           reduce using rule 25 (TypeLit -> PointerType .)
    IMAGINARY       reduce using rule 25 (TypeLit -> PointerType .)
    RUNE            reduce using rule 25 (TypeLit -> PointerType .)
    STRING          reduce using rule 25 (TypeLit -> PointerType .)
    FUNCTION        reduce using rule 25 (TypeLit -> PointerType .)
    STRUCT          reduce using rule 25 (TypeLit -> PointerType .)
    INTERFACE       reduce using rule 25 (TypeLit -> PointerType .)
    MAP             reduce using rule 25 (TypeLit -> PointerType .)
    CHAN            reduce using rule 25 (TypeLit -> PointerType .)
    COLON           reduce using rule 25 (TypeLit -> PointerType .)


state 73

    (26) TypeLit -> FunctionType .

    ASSIGNMENT      reduce using rule 26 (TypeLit -> FunctionType .)
    SEMICOLON       reduce using rule 26 (TypeLit -> FunctionType .)
    LEFT_BRACE      reduce using rule 26 (TypeLit -> FunctionType .)
    RIGHT_PARENTHESIS reduce using rule 26 (TypeLit -> FunctionType .)
    LEFT_PARENTHESIS reduce using rule 26 (TypeLit -> FunctionType .)
    PERIOD          reduce using rule 26 (TypeLit -> FunctionType .)
    COMMA           reduce using rule 26 (TypeLit -> FunctionType .)
    LEFT_BRACKET    reduce using rule 26 (TypeLit -> FunctionType .)
    RIGHT_BRACKET   reduce using rule 26 (TypeLit -> FunctionType .)
    ADD             reduce using rule 26 (TypeLit -> FunctionType .)
    SUBTRACT        reduce using rule 26 (TypeLit -> FunctionType .)
    NOT             reduce using rule 26 (TypeLit -> FunctionType .)
    XOR             reduce using rule 26 (TypeLit -> FunctionType .)
    MULTIPLY        reduce using rule 26 (TypeLit -> FunctionType .)
    AND             reduce using rule 26 (TypeLit -> FunctionType .)
    ARROW           reduce using rule 26 (TypeLit -> FunctionType .)
    IDENT           reduce using rule 26 (TypeLit -> FunctionType .)
    INT             reduce using rule 26 (TypeLit -> FunctionType .)
    FLOAT           reduce using rule 26 (TypeLit -> FunctionType .)
    IMAGINARY       reduce using rule 26 (TypeLit -> FunctionType .)
    RUNE            reduce using rule 26 (TypeLit -> FunctionType .)
    STRING          reduce using rule 26 (TypeLit -> FunctionType .)
    FUNCTION        reduce using rule 26 (TypeLit -> FunctionType .)
    STRUCT          reduce using rule 26 (TypeLit -> FunctionType .)
    INTERFACE       reduce using rule 26 (TypeLit -> FunctionType .)
    MAP             reduce using rule 26 (TypeLit -> FunctionType .)
    CHAN            reduce using rule 26 (TypeLit -> FunctionType .)
    COLON           reduce using rule 26 (TypeLit -> FunctionType .)


state 74

    (27) TypeLit -> InterfaceType .

    ASSIGNMENT      reduce using rule 27 (TypeLit -> InterfaceType .)
    SEMICOLON       reduce using rule 27 (TypeLit -> InterfaceType .)
    LEFT_BRACE      reduce using rule 27 (TypeLit -> InterfaceType .)
    RIGHT_PARENTHESIS reduce using rule 27 (TypeLit -> InterfaceType .)
    LEFT_PARENTHESIS reduce using rule 27 (TypeLit -> InterfaceType .)
    PERIOD          reduce using rule 27 (TypeLit -> InterfaceType .)
    COMMA           reduce using rule 27 (TypeLit -> InterfaceType .)
    LEFT_BRACKET    reduce using rule 27 (TypeLit -> InterfaceType .)
    RIGHT_BRACKET   reduce using rule 27 (TypeLit -> InterfaceType .)
    ADD             reduce using rule 27 (TypeLit -> InterfaceType .)
    SUBTRACT        reduce using rule 27 (TypeLit -> InterfaceType .)
    NOT             reduce using rule 27 (TypeLit -> InterfaceType .)
    XOR             reduce using rule 27 (TypeLit -> InterfaceType .)
    MULTIPLY        reduce using rule 27 (TypeLit -> InterfaceType .)
    AND             reduce using rule 27 (TypeLit -> InterfaceType .)
    ARROW           reduce using rule 27 (TypeLit -> InterfaceType .)
    IDENT           reduce using rule 27 (TypeLit -> InterfaceType .)
    INT             reduce using rule 27 (TypeLit -> InterfaceType .)
    FLOAT           reduce using rule 27 (TypeLit -> InterfaceType .)
    IMAGINARY       reduce using rule 27 (TypeLit -> InterfaceType .)
    RUNE            reduce using rule 27 (TypeLit -> InterfaceType .)
    STRING          reduce using rule 27 (TypeLit -> InterfaceType .)
    FUNCTION        reduce using rule 27 (TypeLit -> InterfaceType .)
    STRUCT          reduce using rule 27 (TypeLit -> InterfaceType .)
    INTERFACE       reduce using rule 27 (TypeLit -> InterfaceType .)
    MAP             reduce using rule 27 (TypeLit -> InterfaceType .)
    CHAN            reduce using rule 27 (TypeLit -> InterfaceType .)
    COLON           reduce using rule 27 (TypeLit -> InterfaceType .)


state 75

    (28) TypeLit -> SliceType .

    ASSIGNMENT      reduce using rule 28 (TypeLit -> SliceType .)
    SEMICOLON       reduce using rule 28 (TypeLit -> SliceType .)
    LEFT_BRACE      reduce using rule 28 (TypeLit -> SliceType .)
    RIGHT_PARENTHESIS reduce using rule 28 (TypeLit -> SliceType .)
    LEFT_PARENTHESIS reduce using rule 28 (TypeLit -> SliceType .)
    PERIOD          reduce using rule 28 (TypeLit -> SliceType .)
    COMMA           reduce using rule 28 (TypeLit -> SliceType .)
    LEFT_BRACKET    reduce using rule 28 (TypeLit -> SliceType .)
    RIGHT_BRACKET   reduce using rule 28 (TypeLit -> SliceType .)
    ADD             reduce using rule 28 (TypeLit -> SliceType .)
    SUBTRACT        reduce using rule 28 (TypeLit -> SliceType .)
    NOT             reduce using rule 28 (TypeLit -> SliceType .)
    XOR             reduce using rule 28 (TypeLit -> SliceType .)
    MULTIPLY        reduce using rule 28 (TypeLit -> SliceType .)
    AND             reduce using rule 28 (TypeLit -> SliceType .)
    ARROW           reduce using rule 28 (TypeLit -> SliceType .)
    IDENT           reduce using rule 28 (TypeLit -> SliceType .)
    INT             reduce using rule 28 (TypeLit -> SliceType .)
    FLOAT           reduce using rule 28 (TypeLit -> SliceType .)
    IMAGINARY       reduce using rule 28 (TypeLit -> SliceType .)
    RUNE            reduce using rule 28 (TypeLit -> SliceType .)
    STRING          reduce using rule 28 (TypeLit -> SliceType .)
    FUNCTION        reduce using rule 28 (TypeLit -> SliceType .)
    STRUCT          reduce using rule 28 (TypeLit -> SliceType .)
    INTERFACE       reduce using rule 28 (TypeLit -> SliceType .)
    MAP             reduce using rule 28 (TypeLit -> SliceType .)
    CHAN            reduce using rule 28 (TypeLit -> SliceType .)
    COLON           reduce using rule 28 (TypeLit -> SliceType .)


state 76

    (29) TypeLit -> MapType .

    ASSIGNMENT      reduce using rule 29 (TypeLit -> MapType .)
    SEMICOLON       reduce using rule 29 (TypeLit -> MapType .)
    LEFT_BRACE      reduce using rule 29 (TypeLit -> MapType .)
    RIGHT_PARENTHESIS reduce using rule 29 (TypeLit -> MapType .)
    LEFT_PARENTHESIS reduce using rule 29 (TypeLit -> MapType .)
    PERIOD          reduce using rule 29 (TypeLit -> MapType .)
    COMMA           reduce using rule 29 (TypeLit -> MapType .)
    LEFT_BRACKET    reduce using rule 29 (TypeLit -> MapType .)
    RIGHT_BRACKET   reduce using rule 29 (TypeLit -> MapType .)
    ADD             reduce using rule 29 (TypeLit -> MapType .)
    SUBTRACT        reduce using rule 29 (TypeLit -> MapType .)
    NOT             reduce using rule 29 (TypeLit -> MapType .)
    XOR             reduce using rule 29 (TypeLit -> MapType .)
    MULTIPLY        reduce using rule 29 (TypeLit -> MapType .)
    AND             reduce using rule 29 (TypeLit -> MapType .)
    ARROW           reduce using rule 29 (TypeLit -> MapType .)
    IDENT           reduce using rule 29 (TypeLit -> MapType .)
    INT             reduce using rule 29 (TypeLit -> MapType .)
    FLOAT           reduce using rule 29 (TypeLit -> MapType .)
    IMAGINARY       reduce using rule 29 (TypeLit -> MapType .)
    RUNE            reduce using rule 29 (TypeLit -> MapType .)
    STRING          reduce using rule 29 (TypeLit -> MapType .)
    FUNCTION        reduce using rule 29 (TypeLit -> MapType .)
    STRUCT          reduce using rule 29 (TypeLit -> MapType .)
    INTERFACE       reduce using rule 29 (TypeLit -> MapType .)
    MAP             reduce using rule 29 (TypeLit -> MapType .)
    CHAN            reduce using rule 29 (TypeLit -> MapType .)
    COLON           reduce using rule 29 (TypeLit -> MapType .)


state 77

    (30) TypeLit -> ChannelType .

    ASSIGNMENT      reduce using rule 30 (TypeLit -> ChannelType .)
    SEMICOLON       reduce using rule 30 (TypeLit -> ChannelType .)
    LEFT_BRACE      reduce using rule 30 (TypeLit -> ChannelType .)
    RIGHT_PARENTHESIS reduce using rule 30 (TypeLit -> ChannelType .)
    LEFT_PARENTHESIS reduce using rule 30 (TypeLit -> ChannelType .)
    PERIOD          reduce using rule 30 (TypeLit -> ChannelType .)
    COMMA           reduce using rule 30 (TypeLit -> ChannelType .)
    LEFT_BRACKET    reduce using rule 30 (TypeLit -> ChannelType .)
    RIGHT_BRACKET   reduce using rule 30 (TypeLit -> ChannelType .)
    ADD             reduce using rule 30 (TypeLit -> ChannelType .)
    SUBTRACT        reduce using rule 30 (TypeLit -> ChannelType .)
    NOT             reduce using rule 30 (TypeLit -> ChannelType .)
    XOR             reduce using rule 30 (TypeLit -> ChannelType .)
    MULTIPLY        reduce using rule 30 (TypeLit -> ChannelType .)
    AND             reduce using rule 30 (TypeLit -> ChannelType .)
    ARROW           reduce using rule 30 (TypeLit -> ChannelType .)
    IDENT           reduce using rule 30 (TypeLit -> ChannelType .)
    INT             reduce using rule 30 (TypeLit -> ChannelType .)
    FLOAT           reduce using rule 30 (TypeLit -> ChannelType .)
    IMAGINARY       reduce using rule 30 (TypeLit -> ChannelType .)
    RUNE            reduce using rule 30 (TypeLit -> ChannelType .)
    STRING          reduce using rule 30 (TypeLit -> ChannelType .)
    FUNCTION        reduce using rule 30 (TypeLit -> ChannelType .)
    STRUCT          reduce using rule 30 (TypeLit -> ChannelType .)
    INTERFACE       reduce using rule 30 (TypeLit -> ChannelType .)
    MAP             reduce using rule 30 (TypeLit -> ChannelType .)
    CHAN            reduce using rule 30 (TypeLit -> ChannelType .)
    COLON           reduce using rule 30 (TypeLit -> ChannelType .)


state 78

    (31) ArrayType -> LEFT_BRACKET . ArrayLength RIGHT_BRACKET Type
    (33) SliceType -> LEFT_BRACKET . RIGHT_BRACKET Type
    (32) ArrayLength -> . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACKET   shift and go to state 120
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ArrayLength                    shift and go to state 119
    Type                           shift and go to state 121
    Expression                     shift and go to state 122
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 79

    (34) StructType -> STRUCT . LEFT_BRACE FieldDeclStar RIGHT_BRACE

    LEFT_BRACE      shift and go to state 157


state 80

    (44) PointerType -> MULTIPLY . BaseType
    (45) BaseType -> . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    BaseType                       shift and go to state 158
    Type                           shift and go to state 159
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 81

    (46) FunctionType -> FUNCTION . Signature
    (47) Signature -> . Parameters ResultPlus
    (52) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 34

    Signature                      shift and go to state 160
    Parameters                     shift and go to state 53

state 82

    (63) InterfaceType -> INTERFACE . LEFT_BRACE InterfaceTypePlus RIGHT_BRACE

    LEFT_BRACE      shift and go to state 161


state 83

    (71) MapType -> MAP . LEFT_BRACKET KeyType RIGHT_BRACKET Type

    LEFT_BRACKET    shift and go to state 162


state 84

    (73) ChannelType -> ChannelTypeOr . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    ChannelTypeOr                  shift and go to state 84
    Type                           shift and go to state 163
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77

state 85

    (74) ChannelTypeOr -> CHAN .
    (75) ChannelTypeOr -> CHAN . ARROW

  ! shift/reduce conflict for ARROW resolved as shift
    LEFT_PARENTHESIS reduce using rule 74 (ChannelTypeOr -> CHAN .)
    IDENT           reduce using rule 74 (ChannelTypeOr -> CHAN .)
    LEFT_BRACKET    reduce using rule 74 (ChannelTypeOr -> CHAN .)
    STRUCT          reduce using rule 74 (ChannelTypeOr -> CHAN .)
    MULTIPLY        reduce using rule 74 (ChannelTypeOr -> CHAN .)
    FUNCTION        reduce using rule 74 (ChannelTypeOr -> CHAN .)
    INTERFACE       reduce using rule 74 (ChannelTypeOr -> CHAN .)
    MAP             reduce using rule 74 (ChannelTypeOr -> CHAN .)
    CHAN            reduce using rule 74 (ChannelTypeOr -> CHAN .)
    ARROW           shift and go to state 164

  ! ARROW           [ reduce using rule 74 (ChannelTypeOr -> CHAN .) ]


state 86

    (76) ChannelTypeOr -> ARROW . CHAN

    CHAN            shift and go to state 165


state 87

    (96) IdentifierList -> IDENT IdentStar .

    LEFT_PARENTHESIS reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    IDENT           reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    LEFT_BRACKET    reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    STRUCT          reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    MULTIPLY        reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    FUNCTION        reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    INTERFACE       reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    MAP             reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    CHAN            reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    ARROW           reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    ASSIGNMENT      reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    SEMICOLON       reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    ELLIPSIS        reduce using rule 96 (IdentifierList -> IDENT IdentStar .)
    DEFINE          reduce using rule 96 (IdentifierList -> IDENT IdentStar .)


state 88

    (97) IdentStar -> COMMA . IDENT IdentStar

    IDENT           shift and go to state 166


state 89

    (104) TypeSpecOr -> LEFT_PARENTHESIS TypeSpecStar . RIGHT_PARENTHESIS
    (105) TypeSpecStar -> TypeSpecStar . TypeSpec SEMICOLON
    (107) TypeSpec -> . AliasDecl
    (108) TypeSpec -> . TypeDef
    (109) AliasDecl -> . IDENT ASSIGNMENT Type
    (110) TypeDef -> . IDENT Type

    RIGHT_PARENTHESIS shift and go to state 167
    IDENT           shift and go to state 45

    TypeSpec                       shift and go to state 168
    AliasDecl                      shift and go to state 43
    TypeDef                        shift and go to state 44

state 90

    (109) AliasDecl -> IDENT ASSIGNMENT . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 169
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 91

    (110) TypeDef -> IDENT Type .

    SEMICOLON       reduce using rule 110 (TypeDef -> IDENT Type .)


state 92

    (112) VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar . RIGHT_PARENTHESIS
    (113) VarSpecStar -> VarSpecStar . VarSpec SEMICOLON
    (115) VarSpec -> . IdentifierList TypeExpressionListOr
    (96) IdentifierList -> . IDENT IdentStar

    RIGHT_PARENTHESIS shift and go to state 170
    IDENT           shift and go to state 39

    VarSpec                        shift and go to state 171
    IdentifierList                 shift and go to state 48

state 93

    (115) VarSpec -> IdentifierList TypeExpressionListOr .

    SEMICOLON       reduce using rule 115 (VarSpec -> IdentifierList TypeExpressionListOr .)


state 94

    (116) TypeExpressionListOr -> Type . AssignmentExpressionListPlus
    (118) AssignmentExpressionListPlus -> . ASSIGNMENT Expression
    (119) AssignmentExpressionListPlus -> .

    ASSIGNMENT      shift and go to state 173
    SEMICOLON       reduce using rule 119 (AssignmentExpressionListPlus -> .)

    AssignmentExpressionListPlus   shift and go to state 172

state 95

    (117) TypeExpressionListOr -> ASSIGNMENT . ExpressionList
    (99) ExpressionList -> . Expression ExpressionStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ExpressionList                 shift and go to state 174
    Expression                     shift and go to state 175
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 96

    (9) ImportSpecOr -> LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 9 (ImportSpecOr -> LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS .)


state 97

    (10) ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 176


state 98

    (121) FunctionDecl -> FUNCTION FunctionName Signature FunctionBodyPlus .

    SEMICOLON       reduce using rule 121 (FunctionDecl -> FUNCTION FunctionName Signature FunctionBodyPlus .)


state 99

    (122) FunctionBodyPlus -> FunctionBody .

    SEMICOLON       reduce using rule 122 (FunctionBodyPlus -> FunctionBody .)


state 100

    (125) FunctionBody -> Block .

    SEMICOLON       reduce using rule 125 (FunctionBody -> Block .)
    PERIOD          reduce using rule 125 (FunctionBody -> Block .)
    LEFT_BRACKET    reduce using rule 125 (FunctionBody -> Block .)
    LEFT_PARENTHESIS reduce using rule 125 (FunctionBody -> Block .)
    LOGICAL_OR      reduce using rule 125 (FunctionBody -> Block .)
    LOGICAL_AND     reduce using rule 125 (FunctionBody -> Block .)
    EQUAL           reduce using rule 125 (FunctionBody -> Block .)
    NOT_EQUAL       reduce using rule 125 (FunctionBody -> Block .)
    LESS_THAN       reduce using rule 125 (FunctionBody -> Block .)
    LESS_THAN_EQUAL reduce using rule 125 (FunctionBody -> Block .)
    GREATER_THAN    reduce using rule 125 (FunctionBody -> Block .)
    GREATER_THAN_EQUAL reduce using rule 125 (FunctionBody -> Block .)
    ADD             reduce using rule 125 (FunctionBody -> Block .)
    SUBTRACT        reduce using rule 125 (FunctionBody -> Block .)
    OR              reduce using rule 125 (FunctionBody -> Block .)
    XOR             reduce using rule 125 (FunctionBody -> Block .)
    MULTIPLY        reduce using rule 125 (FunctionBody -> Block .)
    QUOTIENT        reduce using rule 125 (FunctionBody -> Block .)
    REMAINDER       reduce using rule 125 (FunctionBody -> Block .)
    SHIFT_LEFT      reduce using rule 125 (FunctionBody -> Block .)
    SHIFT_RIGHT     reduce using rule 125 (FunctionBody -> Block .)
    AND             reduce using rule 125 (FunctionBody -> Block .)
    AND_NOT         reduce using rule 125 (FunctionBody -> Block .)
    RIGHT_BRACKET   reduce using rule 125 (FunctionBody -> Block .)
    COMMA           reduce using rule 125 (FunctionBody -> Block .)
    RIGHT_PARENTHESIS reduce using rule 125 (FunctionBody -> Block .)
    INCREMENT       reduce using rule 125 (FunctionBody -> Block .)
    DECREMENT       reduce using rule 125 (FunctionBody -> Block .)
    ARROW           reduce using rule 125 (FunctionBody -> Block .)
    ASSIGNMENT      reduce using rule 125 (FunctionBody -> Block .)
    COLON           reduce using rule 125 (FunctionBody -> Block .)
    LEFT_BRACE      reduce using rule 125 (FunctionBody -> Block .)


state 101

    (77) Block -> LEFT_BRACE . StatementList RIGHT_BRACE
    (78) StatementList -> . StatementList Statement SEMICOLON
    (79) StatementList -> .

    RIGHT_BRACE     reduce using rule 79 (StatementList -> .)
    GO              reduce using rule 79 (StatementList -> .)
    RETURN          reduce using rule 79 (StatementList -> .)
    BREAK           reduce using rule 79 (StatementList -> .)
    CONTINUE        reduce using rule 79 (StatementList -> .)
    GOTO            reduce using rule 79 (StatementList -> .)
    FALLTHROUGH     reduce using rule 79 (StatementList -> .)
    LEFT_BRACE      reduce using rule 79 (StatementList -> .)
    IF              reduce using rule 79 (StatementList -> .)
    SELECT          reduce using rule 79 (StatementList -> .)
    FOR             reduce using rule 79 (StatementList -> .)
    DEFER           reduce using rule 79 (StatementList -> .)
    CONST           reduce using rule 79 (StatementList -> .)
    TYPE            reduce using rule 79 (StatementList -> .)
    VARIABLE        reduce using rule 79 (StatementList -> .)
    IDENT           reduce using rule 79 (StatementList -> .)
    SWITCH          reduce using rule 79 (StatementList -> .)
    ADD             reduce using rule 79 (StatementList -> .)
    SUBTRACT        reduce using rule 79 (StatementList -> .)
    NOT             reduce using rule 79 (StatementList -> .)
    XOR             reduce using rule 79 (StatementList -> .)
    MULTIPLY        reduce using rule 79 (StatementList -> .)
    AND             reduce using rule 79 (StatementList -> .)
    ARROW           reduce using rule 79 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 79 (StatementList -> .)
    INT             reduce using rule 79 (StatementList -> .)
    FLOAT           reduce using rule 79 (StatementList -> .)
    IMAGINARY       reduce using rule 79 (StatementList -> .)
    RUNE            reduce using rule 79 (StatementList -> .)
    STRING          reduce using rule 79 (StatementList -> .)
    FUNCTION        reduce using rule 79 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 79 (StatementList -> .)
    STRUCT          reduce using rule 79 (StatementList -> .)
    INTERFACE       reduce using rule 79 (StatementList -> .)
    MAP             reduce using rule 79 (StatementList -> .)
    CHAN            reduce using rule 79 (StatementList -> .)
    SEMICOLON       reduce using rule 79 (StatementList -> .)

    StatementList                  shift and go to state 177

state 102

    (50) Result -> Parameters .

    LEFT_BRACE      reduce using rule 50 (Result -> Parameters .)
    SEMICOLON       reduce using rule 50 (Result -> Parameters .)
    ASSIGNMENT      reduce using rule 50 (Result -> Parameters .)
    RIGHT_PARENTHESIS reduce using rule 50 (Result -> Parameters .)
    LEFT_PARENTHESIS reduce using rule 50 (Result -> Parameters .)
    PERIOD          reduce using rule 50 (Result -> Parameters .)
    COMMA           reduce using rule 50 (Result -> Parameters .)
    LEFT_BRACKET    reduce using rule 50 (Result -> Parameters .)
    RIGHT_BRACKET   reduce using rule 50 (Result -> Parameters .)
    ADD             reduce using rule 50 (Result -> Parameters .)
    SUBTRACT        reduce using rule 50 (Result -> Parameters .)
    NOT             reduce using rule 50 (Result -> Parameters .)
    XOR             reduce using rule 50 (Result -> Parameters .)
    MULTIPLY        reduce using rule 50 (Result -> Parameters .)
    AND             reduce using rule 50 (Result -> Parameters .)
    ARROW           reduce using rule 50 (Result -> Parameters .)
    IDENT           reduce using rule 50 (Result -> Parameters .)
    INT             reduce using rule 50 (Result -> Parameters .)
    FLOAT           reduce using rule 50 (Result -> Parameters .)
    IMAGINARY       reduce using rule 50 (Result -> Parameters .)
    RUNE            reduce using rule 50 (Result -> Parameters .)
    STRING          reduce using rule 50 (Result -> Parameters .)
    FUNCTION        reduce using rule 50 (Result -> Parameters .)
    STRUCT          reduce using rule 50 (Result -> Parameters .)
    INTERFACE       reduce using rule 50 (Result -> Parameters .)
    MAP             reduce using rule 50 (Result -> Parameters .)
    CHAN            reduce using rule 50 (Result -> Parameters .)
    COLON           reduce using rule 50 (Result -> Parameters .)


state 103

    (47) Signature -> Parameters ResultPlus .

    LEFT_BRACE      reduce using rule 47 (Signature -> Parameters ResultPlus .)
    SEMICOLON       reduce using rule 47 (Signature -> Parameters ResultPlus .)
    ASSIGNMENT      reduce using rule 47 (Signature -> Parameters ResultPlus .)
    RIGHT_PARENTHESIS reduce using rule 47 (Signature -> Parameters ResultPlus .)
    LEFT_PARENTHESIS reduce using rule 47 (Signature -> Parameters ResultPlus .)
    PERIOD          reduce using rule 47 (Signature -> Parameters ResultPlus .)
    COMMA           reduce using rule 47 (Signature -> Parameters ResultPlus .)
    LEFT_BRACKET    reduce using rule 47 (Signature -> Parameters ResultPlus .)
    RIGHT_BRACKET   reduce using rule 47 (Signature -> Parameters ResultPlus .)
    ADD             reduce using rule 47 (Signature -> Parameters ResultPlus .)
    SUBTRACT        reduce using rule 47 (Signature -> Parameters ResultPlus .)
    NOT             reduce using rule 47 (Signature -> Parameters ResultPlus .)
    XOR             reduce using rule 47 (Signature -> Parameters ResultPlus .)
    MULTIPLY        reduce using rule 47 (Signature -> Parameters ResultPlus .)
    AND             reduce using rule 47 (Signature -> Parameters ResultPlus .)
    ARROW           reduce using rule 47 (Signature -> Parameters ResultPlus .)
    IDENT           reduce using rule 47 (Signature -> Parameters ResultPlus .)
    INT             reduce using rule 47 (Signature -> Parameters ResultPlus .)
    FLOAT           reduce using rule 47 (Signature -> Parameters ResultPlus .)
    IMAGINARY       reduce using rule 47 (Signature -> Parameters ResultPlus .)
    RUNE            reduce using rule 47 (Signature -> Parameters ResultPlus .)
    STRING          reduce using rule 47 (Signature -> Parameters ResultPlus .)
    FUNCTION        reduce using rule 47 (Signature -> Parameters ResultPlus .)
    STRUCT          reduce using rule 47 (Signature -> Parameters ResultPlus .)
    INTERFACE       reduce using rule 47 (Signature -> Parameters ResultPlus .)
    MAP             reduce using rule 47 (Signature -> Parameters ResultPlus .)
    CHAN            reduce using rule 47 (Signature -> Parameters ResultPlus .)
    COLON           reduce using rule 47 (Signature -> Parameters ResultPlus .)


state 104

    (48) ResultPlus -> Result .

    LEFT_BRACE      reduce using rule 48 (ResultPlus -> Result .)
    SEMICOLON       reduce using rule 48 (ResultPlus -> Result .)
    ASSIGNMENT      reduce using rule 48 (ResultPlus -> Result .)
    RIGHT_PARENTHESIS reduce using rule 48 (ResultPlus -> Result .)
    LEFT_PARENTHESIS reduce using rule 48 (ResultPlus -> Result .)
    PERIOD          reduce using rule 48 (ResultPlus -> Result .)
    COMMA           reduce using rule 48 (ResultPlus -> Result .)
    LEFT_BRACKET    reduce using rule 48 (ResultPlus -> Result .)
    RIGHT_BRACKET   reduce using rule 48 (ResultPlus -> Result .)
    ADD             reduce using rule 48 (ResultPlus -> Result .)
    SUBTRACT        reduce using rule 48 (ResultPlus -> Result .)
    NOT             reduce using rule 48 (ResultPlus -> Result .)
    XOR             reduce using rule 48 (ResultPlus -> Result .)
    MULTIPLY        reduce using rule 48 (ResultPlus -> Result .)
    AND             reduce using rule 48 (ResultPlus -> Result .)
    ARROW           reduce using rule 48 (ResultPlus -> Result .)
    IDENT           reduce using rule 48 (ResultPlus -> Result .)
    INT             reduce using rule 48 (ResultPlus -> Result .)
    FLOAT           reduce using rule 48 (ResultPlus -> Result .)
    IMAGINARY       reduce using rule 48 (ResultPlus -> Result .)
    RUNE            reduce using rule 48 (ResultPlus -> Result .)
    STRING          reduce using rule 48 (ResultPlus -> Result .)
    FUNCTION        reduce using rule 48 (ResultPlus -> Result .)
    STRUCT          reduce using rule 48 (ResultPlus -> Result .)
    INTERFACE       reduce using rule 48 (ResultPlus -> Result .)
    MAP             reduce using rule 48 (ResultPlus -> Result .)
    CHAN            reduce using rule 48 (ResultPlus -> Result .)
    COLON           reduce using rule 48 (ResultPlus -> Result .)


state 105

    (51) Result -> Type .

    LEFT_BRACE      reduce using rule 51 (Result -> Type .)
    SEMICOLON       reduce using rule 51 (Result -> Type .)
    ASSIGNMENT      reduce using rule 51 (Result -> Type .)
    RIGHT_PARENTHESIS reduce using rule 51 (Result -> Type .)
    LEFT_PARENTHESIS reduce using rule 51 (Result -> Type .)
    PERIOD          reduce using rule 51 (Result -> Type .)
    COMMA           reduce using rule 51 (Result -> Type .)
    LEFT_BRACKET    reduce using rule 51 (Result -> Type .)
    RIGHT_BRACKET   reduce using rule 51 (Result -> Type .)
    ADD             reduce using rule 51 (Result -> Type .)
    SUBTRACT        reduce using rule 51 (Result -> Type .)
    NOT             reduce using rule 51 (Result -> Type .)
    XOR             reduce using rule 51 (Result -> Type .)
    MULTIPLY        reduce using rule 51 (Result -> Type .)
    AND             reduce using rule 51 (Result -> Type .)
    ARROW           reduce using rule 51 (Result -> Type .)
    IDENT           reduce using rule 51 (Result -> Type .)
    INT             reduce using rule 51 (Result -> Type .)
    FLOAT           reduce using rule 51 (Result -> Type .)
    IMAGINARY       reduce using rule 51 (Result -> Type .)
    RUNE            reduce using rule 51 (Result -> Type .)
    STRING          reduce using rule 51 (Result -> Type .)
    FUNCTION        reduce using rule 51 (Result -> Type .)
    STRUCT          reduce using rule 51 (Result -> Type .)
    INTERFACE       reduce using rule 51 (Result -> Type .)
    MAP             reduce using rule 51 (Result -> Type .)
    CHAN            reduce using rule 51 (Result -> Type .)
    COLON           reduce using rule 51 (Result -> Type .)


state 106

    (52) Parameters -> LEFT_PARENTHESIS . ParameterListPlus RIGHT_PARENTHESIS
    (20) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (53) ParameterListPlus -> . ParameterList COMMA
    (54) ParameterListPlus -> . ParameterList
    (55) ParameterListPlus -> .
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (56) ParameterList -> . ParameterDecl
    (57) ParameterList -> . ParameterDecl COMMA ParameterList
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (58) ParameterDecl -> . IdentifierListPlus EllipsisPlus Type
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (59) IdentifierListPlus -> . IdentifierList
    (60) IdentifierListPlus -> .
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN
    (96) IdentifierList -> . IDENT IdentStar

  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
    RIGHT_PARENTHESIS reduce using rule 55 (ParameterListPlus -> .)
    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 178
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    ELLIPSIS        reduce using rule 60 (IdentifierListPlus -> .)
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

  ! LEFT_PARENTHESIS [ reduce using rule 60 (IdentifierListPlus -> .) ]
  ! IDENT           [ reduce using rule 60 (IdentifierListPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 60 (IdentifierListPlus -> .) ]
  ! STRUCT          [ reduce using rule 60 (IdentifierListPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 60 (IdentifierListPlus -> .) ]
  ! FUNCTION        [ reduce using rule 60 (IdentifierListPlus -> .) ]
  ! INTERFACE       [ reduce using rule 60 (IdentifierListPlus -> .) ]
  ! MAP             [ reduce using rule 60 (IdentifierListPlus -> .) ]
  ! CHAN            [ reduce using rule 60 (IdentifierListPlus -> .) ]
  ! ARROW           [ reduce using rule 60 (IdentifierListPlus -> .) ]

    ParameterListPlus              shift and go to state 56
    Type                           shift and go to state 116
    ParameterList                  shift and go to state 57
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    ParameterDecl                  shift and go to state 58
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    IdentifierListPlus             shift and go to state 59
    ChannelTypeOr                  shift and go to state 84
    IdentifierList                 shift and go to state 60

state 107

    (126) MethodDecl -> FUNCTION Receiver MethodName Signature . FunctionBodyPlus
    (122) FunctionBodyPlus -> . FunctionBody
    (123) FunctionBodyPlus -> .
    (125) FunctionBody -> . Block
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    SEMICOLON       reduce using rule 123 (FunctionBodyPlus -> .)
    LEFT_BRACE      shift and go to state 101

    FunctionBodyPlus               shift and go to state 179
    FunctionBody                   shift and go to state 99
    Block                          shift and go to state 100

state 108

    (52) Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .

    IDENT           reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    STRUCT          reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    FUNCTION        reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    INTERFACE       reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    MAP             reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    CHAN            reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    PERIOD          reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    ADD             reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    NOT             reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    XOR             reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    AND             reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    INT             reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    FLOAT           reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    IMAGINARY       reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    RUNE            reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    STRING          reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)
    COLON           reduce using rule 52 (Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS .)


state 109

    (53) ParameterListPlus -> ParameterList COMMA .

    RIGHT_PARENTHESIS reduce using rule 53 (ParameterListPlus -> ParameterList COMMA .)


state 110

    (57) ParameterList -> ParameterDecl COMMA . ParameterList
    (56) ParameterList -> . ParameterDecl
    (57) ParameterList -> . ParameterDecl COMMA ParameterList
    (58) ParameterDecl -> . IdentifierListPlus EllipsisPlus Type
    (59) IdentifierListPlus -> . IdentifierList
    (60) IdentifierListPlus -> .
    (96) IdentifierList -> . IDENT IdentStar

  ! shift/reduce conflict for IDENT resolved as shift
    ELLIPSIS        reduce using rule 60 (IdentifierListPlus -> .)
    LEFT_PARENTHESIS reduce using rule 60 (IdentifierListPlus -> .)
    LEFT_BRACKET    reduce using rule 60 (IdentifierListPlus -> .)
    STRUCT          reduce using rule 60 (IdentifierListPlus -> .)
    MULTIPLY        reduce using rule 60 (IdentifierListPlus -> .)
    FUNCTION        reduce using rule 60 (IdentifierListPlus -> .)
    INTERFACE       reduce using rule 60 (IdentifierListPlus -> .)
    MAP             reduce using rule 60 (IdentifierListPlus -> .)
    CHAN            reduce using rule 60 (IdentifierListPlus -> .)
    ARROW           reduce using rule 60 (IdentifierListPlus -> .)
    IDENT           shift and go to state 39

  ! IDENT           [ reduce using rule 60 (IdentifierListPlus -> .) ]

    ParameterDecl                  shift and go to state 58
    ParameterList                  shift and go to state 180
    IdentifierListPlus             shift and go to state 59
    IdentifierList                 shift and go to state 60

state 111

    (58) ParameterDecl -> IdentifierListPlus EllipsisPlus . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 181
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 112

    (61) EllipsisPlus -> ELLIPSIS .

    LEFT_PARENTHESIS reduce using rule 61 (EllipsisPlus -> ELLIPSIS .)
    IDENT           reduce using rule 61 (EllipsisPlus -> ELLIPSIS .)
    LEFT_BRACKET    reduce using rule 61 (EllipsisPlus -> ELLIPSIS .)
    STRUCT          reduce using rule 61 (EllipsisPlus -> ELLIPSIS .)
    MULTIPLY        reduce using rule 61 (EllipsisPlus -> ELLIPSIS .)
    FUNCTION        reduce using rule 61 (EllipsisPlus -> ELLIPSIS .)
    INTERFACE       reduce using rule 61 (EllipsisPlus -> ELLIPSIS .)
    MAP             reduce using rule 61 (EllipsisPlus -> ELLIPSIS .)
    CHAN            reduce using rule 61 (EllipsisPlus -> ELLIPSIS .)
    ARROW           reduce using rule 61 (EllipsisPlus -> ELLIPSIS .)


state 113

    (88) ConstSpecOr -> LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 88 (ConstSpecOr -> LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS .)


state 114

    (89) ConstSpecStar -> ConstSpecStar ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 182


state 115

    (92) TypeAssignmentExpressionListPlus -> TypePlus ASSIGNMENT . ExpressionList
    (99) ExpressionList -> . Expression ExpressionStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ExpressionList                 shift and go to state 183
    Expression                     shift and go to state 175
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 116

    (20) Type -> LEFT_PARENTHESIS Type . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 184


state 117

    (141) QualifiedIdent -> IDENT PERIOD . IDENT

    IDENT           shift and go to state 185


state 118

    (145) LiteralType -> LEFT_BRACKET . ELLIPSIS RIGHT_BRACKET Type
    (31) ArrayType -> LEFT_BRACKET . ArrayLength RIGHT_BRACKET Type
    (33) SliceType -> LEFT_BRACKET . RIGHT_BRACKET Type
    (32) ArrayLength -> . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ELLIPSIS        shift and go to state 186
    RIGHT_BRACKET   shift and go to state 120
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Type                           shift and go to state 121
    ArrayLength                    shift and go to state 119
    Expression                     shift and go to state 122
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 119

    (31) ArrayType -> LEFT_BRACKET ArrayLength . RIGHT_BRACKET Type

    RIGHT_BRACKET   shift and go to state 187


state 120

    (33) SliceType -> LEFT_BRACKET RIGHT_BRACKET . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 188
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 121

    (222) Conversion -> Type . LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> Type . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (188) ReceiverType -> Type .

    LEFT_PARENTHESIS shift and go to state 189
    PERIOD          reduce using rule 188 (ReceiverType -> Type .)


state 122

    (32) ArrayLength -> Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    RIGHT_BRACKET   reduce using rule 32 (ArrayLength -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 123

    (189) Expression -> UnaryExpr .

    LOGICAL_OR      reduce using rule 189 (Expression -> UnaryExpr .)
    LOGICAL_AND     reduce using rule 189 (Expression -> UnaryExpr .)
    EQUAL           reduce using rule 189 (Expression -> UnaryExpr .)
    NOT_EQUAL       reduce using rule 189 (Expression -> UnaryExpr .)
    LESS_THAN       reduce using rule 189 (Expression -> UnaryExpr .)
    LESS_THAN_EQUAL reduce using rule 189 (Expression -> UnaryExpr .)
    GREATER_THAN    reduce using rule 189 (Expression -> UnaryExpr .)
    GREATER_THAN_EQUAL reduce using rule 189 (Expression -> UnaryExpr .)
    ADD             reduce using rule 189 (Expression -> UnaryExpr .)
    SUBTRACT        reduce using rule 189 (Expression -> UnaryExpr .)
    OR              reduce using rule 189 (Expression -> UnaryExpr .)
    XOR             reduce using rule 189 (Expression -> UnaryExpr .)
    MULTIPLY        reduce using rule 189 (Expression -> UnaryExpr .)
    QUOTIENT        reduce using rule 189 (Expression -> UnaryExpr .)
    REMAINDER       reduce using rule 189 (Expression -> UnaryExpr .)
    SHIFT_LEFT      reduce using rule 189 (Expression -> UnaryExpr .)
    SHIFT_RIGHT     reduce using rule 189 (Expression -> UnaryExpr .)
    AND             reduce using rule 189 (Expression -> UnaryExpr .)
    AND_NOT         reduce using rule 189 (Expression -> UnaryExpr .)
    RIGHT_BRACKET   reduce using rule 189 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 189 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 189 (Expression -> UnaryExpr .)
    RIGHT_PARENTHESIS reduce using rule 189 (Expression -> UnaryExpr .)
    INCREMENT       reduce using rule 189 (Expression -> UnaryExpr .)
    DECREMENT       reduce using rule 189 (Expression -> UnaryExpr .)
    ARROW           reduce using rule 189 (Expression -> UnaryExpr .)
    ASSIGNMENT      reduce using rule 189 (Expression -> UnaryExpr .)
    COLON           reduce using rule 189 (Expression -> UnaryExpr .)
    LEFT_BRACE      reduce using rule 189 (Expression -> UnaryExpr .)


state 124

    (191) UnaryExpr -> PrimaryExpr .
    (169) PrimaryExpr -> PrimaryExpr . Selector
    (170) PrimaryExpr -> PrimaryExpr . Index
    (171) PrimaryExpr -> PrimaryExpr . Slice
    (172) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (173) PrimaryExpr -> PrimaryExpr . Arguments
    (174) Selector -> . PERIOD IDENT
    (175) Index -> . LEFT_BRACKET Expression RIGHT_BRACKET
    (176) Slice -> . LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET
    (177) Slice -> . LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET
    (178) TypeAssertion -> . PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (179) Arguments -> . LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS

    LOGICAL_OR      reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    LOGICAL_AND     reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    NOT_EQUAL       reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    LESS_THAN       reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    LESS_THAN_EQUAL reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    GREATER_THAN    reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    GREATER_THAN_EQUAL reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    SUBTRACT        reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    MULTIPLY        reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    QUOTIENT        reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    REMAINDER       reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    SHIFT_LEFT      reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    SHIFT_RIGHT     reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    RIGHT_BRACKET   reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    RIGHT_PARENTHESIS reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    INCREMENT       reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    DECREMENT       reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    ARROW           reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    ASSIGNMENT      reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    LEFT_BRACE      reduce using rule 191 (UnaryExpr -> PrimaryExpr .)
    PERIOD          shift and go to state 218
    LEFT_BRACKET    shift and go to state 219
    LEFT_PARENTHESIS shift and go to state 220

    Selector                       shift and go to state 213
    Index                          shift and go to state 214
    Slice                          shift and go to state 215
    TypeAssertion                  shift and go to state 216
    Arguments                      shift and go to state 217

state 125

    (192) UnaryExpr -> unary_op . UnaryExpr
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    unary_op                       shift and go to state 125
    UnaryExpr                      shift and go to state 221
    PrimaryExpr                    shift and go to state 124
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 126

    (166) PrimaryExpr -> Operand .

    PERIOD          reduce using rule 166 (PrimaryExpr -> Operand .)
    LEFT_BRACKET    reduce using rule 166 (PrimaryExpr -> Operand .)
    LEFT_PARENTHESIS reduce using rule 166 (PrimaryExpr -> Operand .)
    LOGICAL_OR      reduce using rule 166 (PrimaryExpr -> Operand .)
    LOGICAL_AND     reduce using rule 166 (PrimaryExpr -> Operand .)
    EQUAL           reduce using rule 166 (PrimaryExpr -> Operand .)
    NOT_EQUAL       reduce using rule 166 (PrimaryExpr -> Operand .)
    LESS_THAN       reduce using rule 166 (PrimaryExpr -> Operand .)
    LESS_THAN_EQUAL reduce using rule 166 (PrimaryExpr -> Operand .)
    GREATER_THAN    reduce using rule 166 (PrimaryExpr -> Operand .)
    GREATER_THAN_EQUAL reduce using rule 166 (PrimaryExpr -> Operand .)
    ADD             reduce using rule 166 (PrimaryExpr -> Operand .)
    SUBTRACT        reduce using rule 166 (PrimaryExpr -> Operand .)
    OR              reduce using rule 166 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 166 (PrimaryExpr -> Operand .)
    MULTIPLY        reduce using rule 166 (PrimaryExpr -> Operand .)
    QUOTIENT        reduce using rule 166 (PrimaryExpr -> Operand .)
    REMAINDER       reduce using rule 166 (PrimaryExpr -> Operand .)
    SHIFT_LEFT      reduce using rule 166 (PrimaryExpr -> Operand .)
    SHIFT_RIGHT     reduce using rule 166 (PrimaryExpr -> Operand .)
    AND             reduce using rule 166 (PrimaryExpr -> Operand .)
    AND_NOT         reduce using rule 166 (PrimaryExpr -> Operand .)
    RIGHT_BRACKET   reduce using rule 166 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 166 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 166 (PrimaryExpr -> Operand .)
    RIGHT_PARENTHESIS reduce using rule 166 (PrimaryExpr -> Operand .)
    INCREMENT       reduce using rule 166 (PrimaryExpr -> Operand .)
    DECREMENT       reduce using rule 166 (PrimaryExpr -> Operand .)
    ARROW           reduce using rule 166 (PrimaryExpr -> Operand .)
    ASSIGNMENT      reduce using rule 166 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 166 (PrimaryExpr -> Operand .)
    LEFT_BRACE      reduce using rule 166 (PrimaryExpr -> Operand .)


state 127

    (167) PrimaryExpr -> Conversion .

    PERIOD          reduce using rule 167 (PrimaryExpr -> Conversion .)
    LEFT_BRACKET    reduce using rule 167 (PrimaryExpr -> Conversion .)
    LEFT_PARENTHESIS reduce using rule 167 (PrimaryExpr -> Conversion .)
    LOGICAL_OR      reduce using rule 167 (PrimaryExpr -> Conversion .)
    LOGICAL_AND     reduce using rule 167 (PrimaryExpr -> Conversion .)
    EQUAL           reduce using rule 167 (PrimaryExpr -> Conversion .)
    NOT_EQUAL       reduce using rule 167 (PrimaryExpr -> Conversion .)
    LESS_THAN       reduce using rule 167 (PrimaryExpr -> Conversion .)
    LESS_THAN_EQUAL reduce using rule 167 (PrimaryExpr -> Conversion .)
    GREATER_THAN    reduce using rule 167 (PrimaryExpr -> Conversion .)
    GREATER_THAN_EQUAL reduce using rule 167 (PrimaryExpr -> Conversion .)
    ADD             reduce using rule 167 (PrimaryExpr -> Conversion .)
    SUBTRACT        reduce using rule 167 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 167 (PrimaryExpr -> Conversion .)
    XOR             reduce using rule 167 (PrimaryExpr -> Conversion .)
    MULTIPLY        reduce using rule 167 (PrimaryExpr -> Conversion .)
    QUOTIENT        reduce using rule 167 (PrimaryExpr -> Conversion .)
    REMAINDER       reduce using rule 167 (PrimaryExpr -> Conversion .)
    SHIFT_LEFT      reduce using rule 167 (PrimaryExpr -> Conversion .)
    SHIFT_RIGHT     reduce using rule 167 (PrimaryExpr -> Conversion .)
    AND             reduce using rule 167 (PrimaryExpr -> Conversion .)
    AND_NOT         reduce using rule 167 (PrimaryExpr -> Conversion .)
    RIGHT_BRACKET   reduce using rule 167 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 167 (PrimaryExpr -> Conversion .)
    SEMICOLON       reduce using rule 167 (PrimaryExpr -> Conversion .)
    RIGHT_PARENTHESIS reduce using rule 167 (PrimaryExpr -> Conversion .)
    INCREMENT       reduce using rule 167 (PrimaryExpr -> Conversion .)
    DECREMENT       reduce using rule 167 (PrimaryExpr -> Conversion .)
    ARROW           reduce using rule 167 (PrimaryExpr -> Conversion .)
    ASSIGNMENT      reduce using rule 167 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 167 (PrimaryExpr -> Conversion .)
    LEFT_BRACE      reduce using rule 167 (PrimaryExpr -> Conversion .)


state 128

    (168) PrimaryExpr -> MethodExpr .

    PERIOD          reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    LEFT_BRACKET    reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    LEFT_PARENTHESIS reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    LOGICAL_OR      reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    LOGICAL_AND     reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    EQUAL           reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    NOT_EQUAL       reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    LESS_THAN       reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    LESS_THAN_EQUAL reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    GREATER_THAN    reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    GREATER_THAN_EQUAL reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    ADD             reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    SUBTRACT        reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    OR              reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    XOR             reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    MULTIPLY        reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    QUOTIENT        reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    REMAINDER       reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    SHIFT_LEFT      reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    SHIFT_RIGHT     reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    AND             reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    AND_NOT         reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    RIGHT_BRACKET   reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    COMMA           reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    SEMICOLON       reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    RIGHT_PARENTHESIS reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    INCREMENT       reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    DECREMENT       reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    ARROW           reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    ASSIGNMENT      reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    COLON           reduce using rule 168 (PrimaryExpr -> MethodExpr .)
    LEFT_BRACE      reduce using rule 168 (PrimaryExpr -> MethodExpr .)


state 129

    (215) unary_op -> ADD .

    ADD             reduce using rule 215 (unary_op -> ADD .)
    SUBTRACT        reduce using rule 215 (unary_op -> ADD .)
    NOT             reduce using rule 215 (unary_op -> ADD .)
    XOR             reduce using rule 215 (unary_op -> ADD .)
    MULTIPLY        reduce using rule 215 (unary_op -> ADD .)
    AND             reduce using rule 215 (unary_op -> ADD .)
    ARROW           reduce using rule 215 (unary_op -> ADD .)
    LEFT_PARENTHESIS reduce using rule 215 (unary_op -> ADD .)
    IDENT           reduce using rule 215 (unary_op -> ADD .)
    INT             reduce using rule 215 (unary_op -> ADD .)
    FLOAT           reduce using rule 215 (unary_op -> ADD .)
    IMAGINARY       reduce using rule 215 (unary_op -> ADD .)
    RUNE            reduce using rule 215 (unary_op -> ADD .)
    STRING          reduce using rule 215 (unary_op -> ADD .)
    FUNCTION        reduce using rule 215 (unary_op -> ADD .)
    LEFT_BRACKET    reduce using rule 215 (unary_op -> ADD .)
    STRUCT          reduce using rule 215 (unary_op -> ADD .)
    INTERFACE       reduce using rule 215 (unary_op -> ADD .)
    MAP             reduce using rule 215 (unary_op -> ADD .)
    CHAN            reduce using rule 215 (unary_op -> ADD .)


state 130

    (216) unary_op -> SUBTRACT .

    ADD             reduce using rule 216 (unary_op -> SUBTRACT .)
    SUBTRACT        reduce using rule 216 (unary_op -> SUBTRACT .)
    NOT             reduce using rule 216 (unary_op -> SUBTRACT .)
    XOR             reduce using rule 216 (unary_op -> SUBTRACT .)
    MULTIPLY        reduce using rule 216 (unary_op -> SUBTRACT .)
    AND             reduce using rule 216 (unary_op -> SUBTRACT .)
    ARROW           reduce using rule 216 (unary_op -> SUBTRACT .)
    LEFT_PARENTHESIS reduce using rule 216 (unary_op -> SUBTRACT .)
    IDENT           reduce using rule 216 (unary_op -> SUBTRACT .)
    INT             reduce using rule 216 (unary_op -> SUBTRACT .)
    FLOAT           reduce using rule 216 (unary_op -> SUBTRACT .)
    IMAGINARY       reduce using rule 216 (unary_op -> SUBTRACT .)
    RUNE            reduce using rule 216 (unary_op -> SUBTRACT .)
    STRING          reduce using rule 216 (unary_op -> SUBTRACT .)
    FUNCTION        reduce using rule 216 (unary_op -> SUBTRACT .)
    LEFT_BRACKET    reduce using rule 216 (unary_op -> SUBTRACT .)
    STRUCT          reduce using rule 216 (unary_op -> SUBTRACT .)
    INTERFACE       reduce using rule 216 (unary_op -> SUBTRACT .)
    MAP             reduce using rule 216 (unary_op -> SUBTRACT .)
    CHAN            reduce using rule 216 (unary_op -> SUBTRACT .)


state 131

    (217) unary_op -> NOT .

    ADD             reduce using rule 217 (unary_op -> NOT .)
    SUBTRACT        reduce using rule 217 (unary_op -> NOT .)
    NOT             reduce using rule 217 (unary_op -> NOT .)
    XOR             reduce using rule 217 (unary_op -> NOT .)
    MULTIPLY        reduce using rule 217 (unary_op -> NOT .)
    AND             reduce using rule 217 (unary_op -> NOT .)
    ARROW           reduce using rule 217 (unary_op -> NOT .)
    LEFT_PARENTHESIS reduce using rule 217 (unary_op -> NOT .)
    IDENT           reduce using rule 217 (unary_op -> NOT .)
    INT             reduce using rule 217 (unary_op -> NOT .)
    FLOAT           reduce using rule 217 (unary_op -> NOT .)
    IMAGINARY       reduce using rule 217 (unary_op -> NOT .)
    RUNE            reduce using rule 217 (unary_op -> NOT .)
    STRING          reduce using rule 217 (unary_op -> NOT .)
    FUNCTION        reduce using rule 217 (unary_op -> NOT .)
    LEFT_BRACKET    reduce using rule 217 (unary_op -> NOT .)
    STRUCT          reduce using rule 217 (unary_op -> NOT .)
    INTERFACE       reduce using rule 217 (unary_op -> NOT .)
    MAP             reduce using rule 217 (unary_op -> NOT .)
    CHAN            reduce using rule 217 (unary_op -> NOT .)


state 132

    (218) unary_op -> XOR .

    ADD             reduce using rule 218 (unary_op -> XOR .)
    SUBTRACT        reduce using rule 218 (unary_op -> XOR .)
    NOT             reduce using rule 218 (unary_op -> XOR .)
    XOR             reduce using rule 218 (unary_op -> XOR .)
    MULTIPLY        reduce using rule 218 (unary_op -> XOR .)
    AND             reduce using rule 218 (unary_op -> XOR .)
    ARROW           reduce using rule 218 (unary_op -> XOR .)
    LEFT_PARENTHESIS reduce using rule 218 (unary_op -> XOR .)
    IDENT           reduce using rule 218 (unary_op -> XOR .)
    INT             reduce using rule 218 (unary_op -> XOR .)
    FLOAT           reduce using rule 218 (unary_op -> XOR .)
    IMAGINARY       reduce using rule 218 (unary_op -> XOR .)
    RUNE            reduce using rule 218 (unary_op -> XOR .)
    STRING          reduce using rule 218 (unary_op -> XOR .)
    FUNCTION        reduce using rule 218 (unary_op -> XOR .)
    LEFT_BRACKET    reduce using rule 218 (unary_op -> XOR .)
    STRUCT          reduce using rule 218 (unary_op -> XOR .)
    INTERFACE       reduce using rule 218 (unary_op -> XOR .)
    MAP             reduce using rule 218 (unary_op -> XOR .)
    CHAN            reduce using rule 218 (unary_op -> XOR .)


state 133

    (219) unary_op -> MULTIPLY .
    (44) PointerType -> MULTIPLY . BaseType
    (45) BaseType -> . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             reduce using rule 219 (unary_op -> MULTIPLY .)
    SUBTRACT        reduce using rule 219 (unary_op -> MULTIPLY .)
    NOT             reduce using rule 219 (unary_op -> MULTIPLY .)
    XOR             reduce using rule 219 (unary_op -> MULTIPLY .)
    MULTIPLY        reduce using rule 219 (unary_op -> MULTIPLY .)
    AND             reduce using rule 219 (unary_op -> MULTIPLY .)
    ARROW           reduce using rule 219 (unary_op -> MULTIPLY .)
    LEFT_PARENTHESIS reduce using rule 219 (unary_op -> MULTIPLY .)
    IDENT           reduce using rule 219 (unary_op -> MULTIPLY .)
    INT             reduce using rule 219 (unary_op -> MULTIPLY .)
    FLOAT           reduce using rule 219 (unary_op -> MULTIPLY .)
    IMAGINARY       reduce using rule 219 (unary_op -> MULTIPLY .)
    RUNE            reduce using rule 219 (unary_op -> MULTIPLY .)
    STRING          reduce using rule 219 (unary_op -> MULTIPLY .)
    FUNCTION        reduce using rule 219 (unary_op -> MULTIPLY .)
    LEFT_BRACKET    reduce using rule 219 (unary_op -> MULTIPLY .)
    STRUCT          reduce using rule 219 (unary_op -> MULTIPLY .)
    INTERFACE       reduce using rule 219 (unary_op -> MULTIPLY .)
    MAP             reduce using rule 219 (unary_op -> MULTIPLY .)
    CHAN            reduce using rule 219 (unary_op -> MULTIPLY .)

  ! LEFT_PARENTHESIS [ shift and go to state 67 ]
  ! IDENT           [ shift and go to state 68 ]
  ! LEFT_BRACKET    [ shift and go to state 78 ]
  ! STRUCT          [ shift and go to state 79 ]
  ! MULTIPLY        [ shift and go to state 80 ]
  ! FUNCTION        [ shift and go to state 81 ]
  ! INTERFACE       [ shift and go to state 82 ]
  ! MAP             [ shift and go to state 83 ]
  ! CHAN            [ shift and go to state 85 ]
  ! ARROW           [ shift and go to state 86 ]

    BaseType                       shift and go to state 158
    Type                           shift and go to state 159
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 134

    (220) unary_op -> AND .

    ADD             reduce using rule 220 (unary_op -> AND .)
    SUBTRACT        reduce using rule 220 (unary_op -> AND .)
    NOT             reduce using rule 220 (unary_op -> AND .)
    XOR             reduce using rule 220 (unary_op -> AND .)
    MULTIPLY        reduce using rule 220 (unary_op -> AND .)
    AND             reduce using rule 220 (unary_op -> AND .)
    ARROW           reduce using rule 220 (unary_op -> AND .)
    LEFT_PARENTHESIS reduce using rule 220 (unary_op -> AND .)
    IDENT           reduce using rule 220 (unary_op -> AND .)
    INT             reduce using rule 220 (unary_op -> AND .)
    FLOAT           reduce using rule 220 (unary_op -> AND .)
    IMAGINARY       reduce using rule 220 (unary_op -> AND .)
    RUNE            reduce using rule 220 (unary_op -> AND .)
    STRING          reduce using rule 220 (unary_op -> AND .)
    FUNCTION        reduce using rule 220 (unary_op -> AND .)
    LEFT_BRACKET    reduce using rule 220 (unary_op -> AND .)
    STRUCT          reduce using rule 220 (unary_op -> AND .)
    INTERFACE       reduce using rule 220 (unary_op -> AND .)
    MAP             reduce using rule 220 (unary_op -> AND .)
    CHAN            reduce using rule 220 (unary_op -> AND .)


state 135

    (221) unary_op -> ARROW .
    (76) ChannelTypeOr -> ARROW . CHAN

  ! shift/reduce conflict for CHAN resolved as shift
    ADD             reduce using rule 221 (unary_op -> ARROW .)
    SUBTRACT        reduce using rule 221 (unary_op -> ARROW .)
    NOT             reduce using rule 221 (unary_op -> ARROW .)
    XOR             reduce using rule 221 (unary_op -> ARROW .)
    MULTIPLY        reduce using rule 221 (unary_op -> ARROW .)
    AND             reduce using rule 221 (unary_op -> ARROW .)
    ARROW           reduce using rule 221 (unary_op -> ARROW .)
    LEFT_PARENTHESIS reduce using rule 221 (unary_op -> ARROW .)
    IDENT           reduce using rule 221 (unary_op -> ARROW .)
    INT             reduce using rule 221 (unary_op -> ARROW .)
    FLOAT           reduce using rule 221 (unary_op -> ARROW .)
    IMAGINARY       reduce using rule 221 (unary_op -> ARROW .)
    RUNE            reduce using rule 221 (unary_op -> ARROW .)
    STRING          reduce using rule 221 (unary_op -> ARROW .)
    FUNCTION        reduce using rule 221 (unary_op -> ARROW .)
    LEFT_BRACKET    reduce using rule 221 (unary_op -> ARROW .)
    STRUCT          reduce using rule 221 (unary_op -> ARROW .)
    INTERFACE       reduce using rule 221 (unary_op -> ARROW .)
    MAP             reduce using rule 221 (unary_op -> ARROW .)
    CHAN            shift and go to state 165

  ! CHAN            [ reduce using rule 221 (unary_op -> ARROW .) ]


state 136

    (128) Operand -> Literal .

    PERIOD          reduce using rule 128 (Operand -> Literal .)
    LEFT_BRACKET    reduce using rule 128 (Operand -> Literal .)
    LEFT_PARENTHESIS reduce using rule 128 (Operand -> Literal .)
    LOGICAL_OR      reduce using rule 128 (Operand -> Literal .)
    LOGICAL_AND     reduce using rule 128 (Operand -> Literal .)
    EQUAL           reduce using rule 128 (Operand -> Literal .)
    NOT_EQUAL       reduce using rule 128 (Operand -> Literal .)
    LESS_THAN       reduce using rule 128 (Operand -> Literal .)
    LESS_THAN_EQUAL reduce using rule 128 (Operand -> Literal .)
    GREATER_THAN    reduce using rule 128 (Operand -> Literal .)
    GREATER_THAN_EQUAL reduce using rule 128 (Operand -> Literal .)
    ADD             reduce using rule 128 (Operand -> Literal .)
    SUBTRACT        reduce using rule 128 (Operand -> Literal .)
    OR              reduce using rule 128 (Operand -> Literal .)
    XOR             reduce using rule 128 (Operand -> Literal .)
    MULTIPLY        reduce using rule 128 (Operand -> Literal .)
    QUOTIENT        reduce using rule 128 (Operand -> Literal .)
    REMAINDER       reduce using rule 128 (Operand -> Literal .)
    SHIFT_LEFT      reduce using rule 128 (Operand -> Literal .)
    SHIFT_RIGHT     reduce using rule 128 (Operand -> Literal .)
    AND             reduce using rule 128 (Operand -> Literal .)
    AND_NOT         reduce using rule 128 (Operand -> Literal .)
    RIGHT_BRACKET   reduce using rule 128 (Operand -> Literal .)
    COMMA           reduce using rule 128 (Operand -> Literal .)
    SEMICOLON       reduce using rule 128 (Operand -> Literal .)
    RIGHT_PARENTHESIS reduce using rule 128 (Operand -> Literal .)
    INCREMENT       reduce using rule 128 (Operand -> Literal .)
    DECREMENT       reduce using rule 128 (Operand -> Literal .)
    ARROW           reduce using rule 128 (Operand -> Literal .)
    ASSIGNMENT      reduce using rule 128 (Operand -> Literal .)
    COLON           reduce using rule 128 (Operand -> Literal .)
    LEFT_BRACE      reduce using rule 128 (Operand -> Literal .)


state 137

    (129) Operand -> OperandName .

    PERIOD          reduce using rule 129 (Operand -> OperandName .)
    LEFT_BRACKET    reduce using rule 129 (Operand -> OperandName .)
    LEFT_PARENTHESIS reduce using rule 129 (Operand -> OperandName .)
    LOGICAL_OR      reduce using rule 129 (Operand -> OperandName .)
    LOGICAL_AND     reduce using rule 129 (Operand -> OperandName .)
    EQUAL           reduce using rule 129 (Operand -> OperandName .)
    NOT_EQUAL       reduce using rule 129 (Operand -> OperandName .)
    LESS_THAN       reduce using rule 129 (Operand -> OperandName .)
    LESS_THAN_EQUAL reduce using rule 129 (Operand -> OperandName .)
    GREATER_THAN    reduce using rule 129 (Operand -> OperandName .)
    GREATER_THAN_EQUAL reduce using rule 129 (Operand -> OperandName .)
    ADD             reduce using rule 129 (Operand -> OperandName .)
    SUBTRACT        reduce using rule 129 (Operand -> OperandName .)
    OR              reduce using rule 129 (Operand -> OperandName .)
    XOR             reduce using rule 129 (Operand -> OperandName .)
    MULTIPLY        reduce using rule 129 (Operand -> OperandName .)
    QUOTIENT        reduce using rule 129 (Operand -> OperandName .)
    REMAINDER       reduce using rule 129 (Operand -> OperandName .)
    SHIFT_LEFT      reduce using rule 129 (Operand -> OperandName .)
    SHIFT_RIGHT     reduce using rule 129 (Operand -> OperandName .)
    AND             reduce using rule 129 (Operand -> OperandName .)
    AND_NOT         reduce using rule 129 (Operand -> OperandName .)
    RIGHT_BRACKET   reduce using rule 129 (Operand -> OperandName .)
    COMMA           reduce using rule 129 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 129 (Operand -> OperandName .)
    RIGHT_PARENTHESIS reduce using rule 129 (Operand -> OperandName .)
    INCREMENT       reduce using rule 129 (Operand -> OperandName .)
    DECREMENT       reduce using rule 129 (Operand -> OperandName .)
    ARROW           reduce using rule 129 (Operand -> OperandName .)
    ASSIGNMENT      reduce using rule 129 (Operand -> OperandName .)
    COLON           reduce using rule 129 (Operand -> OperandName .)
    LEFT_BRACE      reduce using rule 129 (Operand -> OperandName .)


state 138

    (130) Operand -> LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (20) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName

    LEFT_PARENTHESIS shift and go to state 222
    IDENT           shift and go to state 225
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_BRACKET    shift and go to state 227
    STRUCT          shift and go to state 79
    FUNCTION        shift and go to state 228
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150

    Expression                     shift and go to state 223
    Type                           shift and go to state 224
    UnaryExpr                      shift and go to state 123
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    QualifiedIdent                 shift and go to state 226
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    ChannelTypeOr                  shift and go to state 84
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    LiteralType                    shift and go to state 151

state 139

    (187) MethodExpr -> ReceiverType . PERIOD MethodName

    PERIOD          shift and go to state 229


state 140

    (131) Literal -> BasicLit .

    PERIOD          reduce using rule 131 (Literal -> BasicLit .)
    LEFT_BRACKET    reduce using rule 131 (Literal -> BasicLit .)
    LEFT_PARENTHESIS reduce using rule 131 (Literal -> BasicLit .)
    LOGICAL_OR      reduce using rule 131 (Literal -> BasicLit .)
    LOGICAL_AND     reduce using rule 131 (Literal -> BasicLit .)
    EQUAL           reduce using rule 131 (Literal -> BasicLit .)
    NOT_EQUAL       reduce using rule 131 (Literal -> BasicLit .)
    LESS_THAN       reduce using rule 131 (Literal -> BasicLit .)
    LESS_THAN_EQUAL reduce using rule 131 (Literal -> BasicLit .)
    GREATER_THAN    reduce using rule 131 (Literal -> BasicLit .)
    GREATER_THAN_EQUAL reduce using rule 131 (Literal -> BasicLit .)
    ADD             reduce using rule 131 (Literal -> BasicLit .)
    SUBTRACT        reduce using rule 131 (Literal -> BasicLit .)
    OR              reduce using rule 131 (Literal -> BasicLit .)
    XOR             reduce using rule 131 (Literal -> BasicLit .)
    MULTIPLY        reduce using rule 131 (Literal -> BasicLit .)
    QUOTIENT        reduce using rule 131 (Literal -> BasicLit .)
    REMAINDER       reduce using rule 131 (Literal -> BasicLit .)
    SHIFT_LEFT      reduce using rule 131 (Literal -> BasicLit .)
    SHIFT_RIGHT     reduce using rule 131 (Literal -> BasicLit .)
    AND             reduce using rule 131 (Literal -> BasicLit .)
    AND_NOT         reduce using rule 131 (Literal -> BasicLit .)
    RIGHT_BRACKET   reduce using rule 131 (Literal -> BasicLit .)
    COMMA           reduce using rule 131 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 131 (Literal -> BasicLit .)
    RIGHT_PARENTHESIS reduce using rule 131 (Literal -> BasicLit .)
    INCREMENT       reduce using rule 131 (Literal -> BasicLit .)
    DECREMENT       reduce using rule 131 (Literal -> BasicLit .)
    ARROW           reduce using rule 131 (Literal -> BasicLit .)
    ASSIGNMENT      reduce using rule 131 (Literal -> BasicLit .)
    COLON           reduce using rule 131 (Literal -> BasicLit .)
    LEFT_BRACE      reduce using rule 131 (Literal -> BasicLit .)


state 141

    (132) Literal -> CompositeLit .

    PERIOD          reduce using rule 132 (Literal -> CompositeLit .)
    LEFT_BRACKET    reduce using rule 132 (Literal -> CompositeLit .)
    LEFT_PARENTHESIS reduce using rule 132 (Literal -> CompositeLit .)
    LOGICAL_OR      reduce using rule 132 (Literal -> CompositeLit .)
    LOGICAL_AND     reduce using rule 132 (Literal -> CompositeLit .)
    EQUAL           reduce using rule 132 (Literal -> CompositeLit .)
    NOT_EQUAL       reduce using rule 132 (Literal -> CompositeLit .)
    LESS_THAN       reduce using rule 132 (Literal -> CompositeLit .)
    LESS_THAN_EQUAL reduce using rule 132 (Literal -> CompositeLit .)
    GREATER_THAN    reduce using rule 132 (Literal -> CompositeLit .)
    GREATER_THAN_EQUAL reduce using rule 132 (Literal -> CompositeLit .)
    ADD             reduce using rule 132 (Literal -> CompositeLit .)
    SUBTRACT        reduce using rule 132 (Literal -> CompositeLit .)
    OR              reduce using rule 132 (Literal -> CompositeLit .)
    XOR             reduce using rule 132 (Literal -> CompositeLit .)
    MULTIPLY        reduce using rule 132 (Literal -> CompositeLit .)
    QUOTIENT        reduce using rule 132 (Literal -> CompositeLit .)
    REMAINDER       reduce using rule 132 (Literal -> CompositeLit .)
    SHIFT_LEFT      reduce using rule 132 (Literal -> CompositeLit .)
    SHIFT_RIGHT     reduce using rule 132 (Literal -> CompositeLit .)
    AND             reduce using rule 132 (Literal -> CompositeLit .)
    AND_NOT         reduce using rule 132 (Literal -> CompositeLit .)
    RIGHT_BRACKET   reduce using rule 132 (Literal -> CompositeLit .)
    COMMA           reduce using rule 132 (Literal -> CompositeLit .)
    SEMICOLON       reduce using rule 132 (Literal -> CompositeLit .)
    RIGHT_PARENTHESIS reduce using rule 132 (Literal -> CompositeLit .)
    INCREMENT       reduce using rule 132 (Literal -> CompositeLit .)
    DECREMENT       reduce using rule 132 (Literal -> CompositeLit .)
    ARROW           reduce using rule 132 (Literal -> CompositeLit .)
    ASSIGNMENT      reduce using rule 132 (Literal -> CompositeLit .)
    COLON           reduce using rule 132 (Literal -> CompositeLit .)
    LEFT_BRACE      reduce using rule 132 (Literal -> CompositeLit .)


state 142

    (133) Literal -> FunctionLit .

    PERIOD          reduce using rule 133 (Literal -> FunctionLit .)
    LEFT_BRACKET    reduce using rule 133 (Literal -> FunctionLit .)
    LEFT_PARENTHESIS reduce using rule 133 (Literal -> FunctionLit .)
    LOGICAL_OR      reduce using rule 133 (Literal -> FunctionLit .)
    LOGICAL_AND     reduce using rule 133 (Literal -> FunctionLit .)
    EQUAL           reduce using rule 133 (Literal -> FunctionLit .)
    NOT_EQUAL       reduce using rule 133 (Literal -> FunctionLit .)
    LESS_THAN       reduce using rule 133 (Literal -> FunctionLit .)
    LESS_THAN_EQUAL reduce using rule 133 (Literal -> FunctionLit .)
    GREATER_THAN    reduce using rule 133 (Literal -> FunctionLit .)
    GREATER_THAN_EQUAL reduce using rule 133 (Literal -> FunctionLit .)
    ADD             reduce using rule 133 (Literal -> FunctionLit .)
    SUBTRACT        reduce using rule 133 (Literal -> FunctionLit .)
    OR              reduce using rule 133 (Literal -> FunctionLit .)
    XOR             reduce using rule 133 (Literal -> FunctionLit .)
    MULTIPLY        reduce using rule 133 (Literal -> FunctionLit .)
    QUOTIENT        reduce using rule 133 (Literal -> FunctionLit .)
    REMAINDER       reduce using rule 133 (Literal -> FunctionLit .)
    SHIFT_LEFT      reduce using rule 133 (Literal -> FunctionLit .)
    SHIFT_RIGHT     reduce using rule 133 (Literal -> FunctionLit .)
    AND             reduce using rule 133 (Literal -> FunctionLit .)
    AND_NOT         reduce using rule 133 (Literal -> FunctionLit .)
    RIGHT_BRACKET   reduce using rule 133 (Literal -> FunctionLit .)
    COMMA           reduce using rule 133 (Literal -> FunctionLit .)
    SEMICOLON       reduce using rule 133 (Literal -> FunctionLit .)
    RIGHT_PARENTHESIS reduce using rule 133 (Literal -> FunctionLit .)
    INCREMENT       reduce using rule 133 (Literal -> FunctionLit .)
    DECREMENT       reduce using rule 133 (Literal -> FunctionLit .)
    ARROW           reduce using rule 133 (Literal -> FunctionLit .)
    ASSIGNMENT      reduce using rule 133 (Literal -> FunctionLit .)
    COLON           reduce using rule 133 (Literal -> FunctionLit .)
    LEFT_BRACE      reduce using rule 133 (Literal -> FunctionLit .)


state 143

    (139) OperandName -> IDENT .
    (141) QualifiedIdent -> IDENT . PERIOD IDENT
    (21) TypeName -> IDENT .

  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 21 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 21 (TypeName -> IDENT .)
    LOGICAL_OR      reduce using rule 139 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 139 (OperandName -> IDENT .)
    EQUAL           reduce using rule 139 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    ADD             reduce using rule 139 (OperandName -> IDENT .)
    SUBTRACT        reduce using rule 139 (OperandName -> IDENT .)
    OR              reduce using rule 139 (OperandName -> IDENT .)
    XOR             reduce using rule 139 (OperandName -> IDENT .)
    MULTIPLY        reduce using rule 139 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 139 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 139 (OperandName -> IDENT .)
    AND             reduce using rule 139 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 139 (OperandName -> IDENT .)
    RIGHT_BRACKET   reduce using rule 139 (OperandName -> IDENT .)
    COMMA           reduce using rule 139 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 139 (OperandName -> IDENT .)
    RIGHT_PARENTHESIS reduce using rule 139 (OperandName -> IDENT .)
    INCREMENT       reduce using rule 139 (OperandName -> IDENT .)
    DECREMENT       reduce using rule 139 (OperandName -> IDENT .)
    ARROW           reduce using rule 139 (OperandName -> IDENT .)
    ASSIGNMENT      reduce using rule 139 (OperandName -> IDENT .)
    COLON           reduce using rule 139 (OperandName -> IDENT .)
    LEFT_BRACE      reduce using rule 139 (OperandName -> IDENT .)
    PERIOD          shift and go to state 117
    LEFT_PARENTHESIS reduce using rule 21 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 21 (TypeName -> IDENT .)

  ! PERIOD          [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 21 (TypeName -> IDENT .) ]


state 144

    (140) OperandName -> QualifiedIdent .
    (22) TypeName -> QualifiedIdent .

  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for PERIOD resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 22 (TypeName -> QualifiedIdent .)
    LOGICAL_OR      reduce using rule 140 (OperandName -> QualifiedIdent .)
    LOGICAL_AND     reduce using rule 140 (OperandName -> QualifiedIdent .)
    EQUAL           reduce using rule 140 (OperandName -> QualifiedIdent .)
    NOT_EQUAL       reduce using rule 140 (OperandName -> QualifiedIdent .)
    LESS_THAN       reduce using rule 140 (OperandName -> QualifiedIdent .)
    LESS_THAN_EQUAL reduce using rule 140 (OperandName -> QualifiedIdent .)
    GREATER_THAN    reduce using rule 140 (OperandName -> QualifiedIdent .)
    GREATER_THAN_EQUAL reduce using rule 140 (OperandName -> QualifiedIdent .)
    ADD             reduce using rule 140 (OperandName -> QualifiedIdent .)
    SUBTRACT        reduce using rule 140 (OperandName -> QualifiedIdent .)
    OR              reduce using rule 140 (OperandName -> QualifiedIdent .)
    XOR             reduce using rule 140 (OperandName -> QualifiedIdent .)
    MULTIPLY        reduce using rule 140 (OperandName -> QualifiedIdent .)
    QUOTIENT        reduce using rule 140 (OperandName -> QualifiedIdent .)
    REMAINDER       reduce using rule 140 (OperandName -> QualifiedIdent .)
    SHIFT_LEFT      reduce using rule 140 (OperandName -> QualifiedIdent .)
    SHIFT_RIGHT     reduce using rule 140 (OperandName -> QualifiedIdent .)
    AND             reduce using rule 140 (OperandName -> QualifiedIdent .)
    AND_NOT         reduce using rule 140 (OperandName -> QualifiedIdent .)
    RIGHT_BRACKET   reduce using rule 140 (OperandName -> QualifiedIdent .)
    COMMA           reduce using rule 140 (OperandName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 140 (OperandName -> QualifiedIdent .)
    RIGHT_PARENTHESIS reduce using rule 140 (OperandName -> QualifiedIdent .)
    INCREMENT       reduce using rule 140 (OperandName -> QualifiedIdent .)
    DECREMENT       reduce using rule 140 (OperandName -> QualifiedIdent .)
    ARROW           reduce using rule 140 (OperandName -> QualifiedIdent .)
    ASSIGNMENT      reduce using rule 140 (OperandName -> QualifiedIdent .)
    COLON           reduce using rule 140 (OperandName -> QualifiedIdent .)
    LEFT_BRACE      reduce using rule 140 (OperandName -> QualifiedIdent .)
    LEFT_PARENTHESIS reduce using rule 22 (TypeName -> QualifiedIdent .)
    PERIOD          reduce using rule 22 (TypeName -> QualifiedIdent .)
    LEFT_BRACKET    reduce using rule 22 (TypeName -> QualifiedIdent .)

  ! PERIOD          [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! LEFT_BRACKET    [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]


state 145

    (18) Type -> TypeName .
    (148) LiteralType -> TypeName .

  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 18 (Type -> TypeName .)
    LEFT_PARENTHESIS reduce using rule 18 (Type -> TypeName .)
    PERIOD          reduce using rule 18 (Type -> TypeName .)
    RIGHT_PARENTHESIS reduce using rule 18 (Type -> TypeName .)
    COMMA           reduce using rule 18 (Type -> TypeName .)
    ADD             reduce using rule 18 (Type -> TypeName .)
    SUBTRACT        reduce using rule 18 (Type -> TypeName .)
    NOT             reduce using rule 18 (Type -> TypeName .)
    XOR             reduce using rule 18 (Type -> TypeName .)
    MULTIPLY        reduce using rule 18 (Type -> TypeName .)
    AND             reduce using rule 18 (Type -> TypeName .)
    ARROW           reduce using rule 18 (Type -> TypeName .)
    IDENT           reduce using rule 18 (Type -> TypeName .)
    INT             reduce using rule 18 (Type -> TypeName .)
    FLOAT           reduce using rule 18 (Type -> TypeName .)
    IMAGINARY       reduce using rule 18 (Type -> TypeName .)
    RUNE            reduce using rule 18 (Type -> TypeName .)
    STRING          reduce using rule 18 (Type -> TypeName .)
    FUNCTION        reduce using rule 18 (Type -> TypeName .)
    LEFT_BRACKET    reduce using rule 18 (Type -> TypeName .)
    STRUCT          reduce using rule 18 (Type -> TypeName .)
    INTERFACE       reduce using rule 18 (Type -> TypeName .)
    MAP             reduce using rule 18 (Type -> TypeName .)
    CHAN            reduce using rule 18 (Type -> TypeName .)

  ! LEFT_BRACKET    [ reduce using rule 148 (LiteralType -> TypeName .) ]


state 146

    (134) BasicLit -> INT .

    PERIOD          reduce using rule 134 (BasicLit -> INT .)
    LEFT_BRACKET    reduce using rule 134 (BasicLit -> INT .)
    LEFT_PARENTHESIS reduce using rule 134 (BasicLit -> INT .)
    LOGICAL_OR      reduce using rule 134 (BasicLit -> INT .)
    LOGICAL_AND     reduce using rule 134 (BasicLit -> INT .)
    EQUAL           reduce using rule 134 (BasicLit -> INT .)
    NOT_EQUAL       reduce using rule 134 (BasicLit -> INT .)
    LESS_THAN       reduce using rule 134 (BasicLit -> INT .)
    LESS_THAN_EQUAL reduce using rule 134 (BasicLit -> INT .)
    GREATER_THAN    reduce using rule 134 (BasicLit -> INT .)
    GREATER_THAN_EQUAL reduce using rule 134 (BasicLit -> INT .)
    ADD             reduce using rule 134 (BasicLit -> INT .)
    SUBTRACT        reduce using rule 134 (BasicLit -> INT .)
    OR              reduce using rule 134 (BasicLit -> INT .)
    XOR             reduce using rule 134 (BasicLit -> INT .)
    MULTIPLY        reduce using rule 134 (BasicLit -> INT .)
    QUOTIENT        reduce using rule 134 (BasicLit -> INT .)
    REMAINDER       reduce using rule 134 (BasicLit -> INT .)
    SHIFT_LEFT      reduce using rule 134 (BasicLit -> INT .)
    SHIFT_RIGHT     reduce using rule 134 (BasicLit -> INT .)
    AND             reduce using rule 134 (BasicLit -> INT .)
    AND_NOT         reduce using rule 134 (BasicLit -> INT .)
    RIGHT_BRACKET   reduce using rule 134 (BasicLit -> INT .)
    COMMA           reduce using rule 134 (BasicLit -> INT .)
    SEMICOLON       reduce using rule 134 (BasicLit -> INT .)
    RIGHT_PARENTHESIS reduce using rule 134 (BasicLit -> INT .)
    INCREMENT       reduce using rule 134 (BasicLit -> INT .)
    DECREMENT       reduce using rule 134 (BasicLit -> INT .)
    ARROW           reduce using rule 134 (BasicLit -> INT .)
    ASSIGNMENT      reduce using rule 134 (BasicLit -> INT .)
    COLON           reduce using rule 134 (BasicLit -> INT .)
    LEFT_BRACE      reduce using rule 134 (BasicLit -> INT .)


state 147

    (135) BasicLit -> FLOAT .

    PERIOD          reduce using rule 135 (BasicLit -> FLOAT .)
    LEFT_BRACKET    reduce using rule 135 (BasicLit -> FLOAT .)
    LEFT_PARENTHESIS reduce using rule 135 (BasicLit -> FLOAT .)
    LOGICAL_OR      reduce using rule 135 (BasicLit -> FLOAT .)
    LOGICAL_AND     reduce using rule 135 (BasicLit -> FLOAT .)
    EQUAL           reduce using rule 135 (BasicLit -> FLOAT .)
    NOT_EQUAL       reduce using rule 135 (BasicLit -> FLOAT .)
    LESS_THAN       reduce using rule 135 (BasicLit -> FLOAT .)
    LESS_THAN_EQUAL reduce using rule 135 (BasicLit -> FLOAT .)
    GREATER_THAN    reduce using rule 135 (BasicLit -> FLOAT .)
    GREATER_THAN_EQUAL reduce using rule 135 (BasicLit -> FLOAT .)
    ADD             reduce using rule 135 (BasicLit -> FLOAT .)
    SUBTRACT        reduce using rule 135 (BasicLit -> FLOAT .)
    OR              reduce using rule 135 (BasicLit -> FLOAT .)
    XOR             reduce using rule 135 (BasicLit -> FLOAT .)
    MULTIPLY        reduce using rule 135 (BasicLit -> FLOAT .)
    QUOTIENT        reduce using rule 135 (BasicLit -> FLOAT .)
    REMAINDER       reduce using rule 135 (BasicLit -> FLOAT .)
    SHIFT_LEFT      reduce using rule 135 (BasicLit -> FLOAT .)
    SHIFT_RIGHT     reduce using rule 135 (BasicLit -> FLOAT .)
    AND             reduce using rule 135 (BasicLit -> FLOAT .)
    AND_NOT         reduce using rule 135 (BasicLit -> FLOAT .)
    RIGHT_BRACKET   reduce using rule 135 (BasicLit -> FLOAT .)
    COMMA           reduce using rule 135 (BasicLit -> FLOAT .)
    SEMICOLON       reduce using rule 135 (BasicLit -> FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 135 (BasicLit -> FLOAT .)
    INCREMENT       reduce using rule 135 (BasicLit -> FLOAT .)
    DECREMENT       reduce using rule 135 (BasicLit -> FLOAT .)
    ARROW           reduce using rule 135 (BasicLit -> FLOAT .)
    ASSIGNMENT      reduce using rule 135 (BasicLit -> FLOAT .)
    COLON           reduce using rule 135 (BasicLit -> FLOAT .)
    LEFT_BRACE      reduce using rule 135 (BasicLit -> FLOAT .)


state 148

    (136) BasicLit -> IMAGINARY .

    PERIOD          reduce using rule 136 (BasicLit -> IMAGINARY .)
    LEFT_BRACKET    reduce using rule 136 (BasicLit -> IMAGINARY .)
    LEFT_PARENTHESIS reduce using rule 136 (BasicLit -> IMAGINARY .)
    LOGICAL_OR      reduce using rule 136 (BasicLit -> IMAGINARY .)
    LOGICAL_AND     reduce using rule 136 (BasicLit -> IMAGINARY .)
    EQUAL           reduce using rule 136 (BasicLit -> IMAGINARY .)
    NOT_EQUAL       reduce using rule 136 (BasicLit -> IMAGINARY .)
    LESS_THAN       reduce using rule 136 (BasicLit -> IMAGINARY .)
    LESS_THAN_EQUAL reduce using rule 136 (BasicLit -> IMAGINARY .)
    GREATER_THAN    reduce using rule 136 (BasicLit -> IMAGINARY .)
    GREATER_THAN_EQUAL reduce using rule 136 (BasicLit -> IMAGINARY .)
    ADD             reduce using rule 136 (BasicLit -> IMAGINARY .)
    SUBTRACT        reduce using rule 136 (BasicLit -> IMAGINARY .)
    OR              reduce using rule 136 (BasicLit -> IMAGINARY .)
    XOR             reduce using rule 136 (BasicLit -> IMAGINARY .)
    MULTIPLY        reduce using rule 136 (BasicLit -> IMAGINARY .)
    QUOTIENT        reduce using rule 136 (BasicLit -> IMAGINARY .)
    REMAINDER       reduce using rule 136 (BasicLit -> IMAGINARY .)
    SHIFT_LEFT      reduce using rule 136 (BasicLit -> IMAGINARY .)
    SHIFT_RIGHT     reduce using rule 136 (BasicLit -> IMAGINARY .)
    AND             reduce using rule 136 (BasicLit -> IMAGINARY .)
    AND_NOT         reduce using rule 136 (BasicLit -> IMAGINARY .)
    RIGHT_BRACKET   reduce using rule 136 (BasicLit -> IMAGINARY .)
    COMMA           reduce using rule 136 (BasicLit -> IMAGINARY .)
    SEMICOLON       reduce using rule 136 (BasicLit -> IMAGINARY .)
    RIGHT_PARENTHESIS reduce using rule 136 (BasicLit -> IMAGINARY .)
    INCREMENT       reduce using rule 136 (BasicLit -> IMAGINARY .)
    DECREMENT       reduce using rule 136 (BasicLit -> IMAGINARY .)
    ARROW           reduce using rule 136 (BasicLit -> IMAGINARY .)
    ASSIGNMENT      reduce using rule 136 (BasicLit -> IMAGINARY .)
    COLON           reduce using rule 136 (BasicLit -> IMAGINARY .)
    LEFT_BRACE      reduce using rule 136 (BasicLit -> IMAGINARY .)


state 149

    (137) BasicLit -> RUNE .

    PERIOD          reduce using rule 137 (BasicLit -> RUNE .)
    LEFT_BRACKET    reduce using rule 137 (BasicLit -> RUNE .)
    LEFT_PARENTHESIS reduce using rule 137 (BasicLit -> RUNE .)
    LOGICAL_OR      reduce using rule 137 (BasicLit -> RUNE .)
    LOGICAL_AND     reduce using rule 137 (BasicLit -> RUNE .)
    EQUAL           reduce using rule 137 (BasicLit -> RUNE .)
    NOT_EQUAL       reduce using rule 137 (BasicLit -> RUNE .)
    LESS_THAN       reduce using rule 137 (BasicLit -> RUNE .)
    LESS_THAN_EQUAL reduce using rule 137 (BasicLit -> RUNE .)
    GREATER_THAN    reduce using rule 137 (BasicLit -> RUNE .)
    GREATER_THAN_EQUAL reduce using rule 137 (BasicLit -> RUNE .)
    ADD             reduce using rule 137 (BasicLit -> RUNE .)
    SUBTRACT        reduce using rule 137 (BasicLit -> RUNE .)
    OR              reduce using rule 137 (BasicLit -> RUNE .)
    XOR             reduce using rule 137 (BasicLit -> RUNE .)
    MULTIPLY        reduce using rule 137 (BasicLit -> RUNE .)
    QUOTIENT        reduce using rule 137 (BasicLit -> RUNE .)
    REMAINDER       reduce using rule 137 (BasicLit -> RUNE .)
    SHIFT_LEFT      reduce using rule 137 (BasicLit -> RUNE .)
    SHIFT_RIGHT     reduce using rule 137 (BasicLit -> RUNE .)
    AND             reduce using rule 137 (BasicLit -> RUNE .)
    AND_NOT         reduce using rule 137 (BasicLit -> RUNE .)
    RIGHT_BRACKET   reduce using rule 137 (BasicLit -> RUNE .)
    COMMA           reduce using rule 137 (BasicLit -> RUNE .)
    SEMICOLON       reduce using rule 137 (BasicLit -> RUNE .)
    RIGHT_PARENTHESIS reduce using rule 137 (BasicLit -> RUNE .)
    INCREMENT       reduce using rule 137 (BasicLit -> RUNE .)
    DECREMENT       reduce using rule 137 (BasicLit -> RUNE .)
    ARROW           reduce using rule 137 (BasicLit -> RUNE .)
    ASSIGNMENT      reduce using rule 137 (BasicLit -> RUNE .)
    COLON           reduce using rule 137 (BasicLit -> RUNE .)
    LEFT_BRACE      reduce using rule 137 (BasicLit -> RUNE .)


state 150

    (138) BasicLit -> STRING .

    PERIOD          reduce using rule 138 (BasicLit -> STRING .)
    LEFT_BRACKET    reduce using rule 138 (BasicLit -> STRING .)
    LEFT_PARENTHESIS reduce using rule 138 (BasicLit -> STRING .)
    LOGICAL_OR      reduce using rule 138 (BasicLit -> STRING .)
    LOGICAL_AND     reduce using rule 138 (BasicLit -> STRING .)
    EQUAL           reduce using rule 138 (BasicLit -> STRING .)
    NOT_EQUAL       reduce using rule 138 (BasicLit -> STRING .)
    LESS_THAN       reduce using rule 138 (BasicLit -> STRING .)
    LESS_THAN_EQUAL reduce using rule 138 (BasicLit -> STRING .)
    GREATER_THAN    reduce using rule 138 (BasicLit -> STRING .)
    GREATER_THAN_EQUAL reduce using rule 138 (BasicLit -> STRING .)
    ADD             reduce using rule 138 (BasicLit -> STRING .)
    SUBTRACT        reduce using rule 138 (BasicLit -> STRING .)
    OR              reduce using rule 138 (BasicLit -> STRING .)
    XOR             reduce using rule 138 (BasicLit -> STRING .)
    MULTIPLY        reduce using rule 138 (BasicLit -> STRING .)
    QUOTIENT        reduce using rule 138 (BasicLit -> STRING .)
    REMAINDER       reduce using rule 138 (BasicLit -> STRING .)
    SHIFT_LEFT      reduce using rule 138 (BasicLit -> STRING .)
    SHIFT_RIGHT     reduce using rule 138 (BasicLit -> STRING .)
    AND             reduce using rule 138 (BasicLit -> STRING .)
    AND_NOT         reduce using rule 138 (BasicLit -> STRING .)
    RIGHT_BRACKET   reduce using rule 138 (BasicLit -> STRING .)
    COMMA           reduce using rule 138 (BasicLit -> STRING .)
    SEMICOLON       reduce using rule 138 (BasicLit -> STRING .)
    RIGHT_PARENTHESIS reduce using rule 138 (BasicLit -> STRING .)
    INCREMENT       reduce using rule 138 (BasicLit -> STRING .)
    DECREMENT       reduce using rule 138 (BasicLit -> STRING .)
    ARROW           reduce using rule 138 (BasicLit -> STRING .)
    ASSIGNMENT      reduce using rule 138 (BasicLit -> STRING .)
    COLON           reduce using rule 138 (BasicLit -> STRING .)
    LEFT_BRACE      reduce using rule 138 (BasicLit -> STRING .)


state 151

    (142) CompositeLit -> LiteralType . LiteralValue
    (149) LiteralValue -> . LEFT_BRACKET ElementListPlus RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 231

    LiteralValue                   shift and go to state 230

state 152

    (165) FunctionLit -> FUNCTION . Signature FunctionBody
    (46) FunctionType -> FUNCTION . Signature
    (47) Signature -> . Parameters ResultPlus
    (52) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 34

    Signature                      shift and go to state 232
    Parameters                     shift and go to state 53

state 153

    (23) TypeLit -> ArrayType .
    (144) LiteralType -> ArrayType .

  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 23 (TypeLit -> ArrayType .)
    LEFT_PARENTHESIS reduce using rule 23 (TypeLit -> ArrayType .)
    PERIOD          reduce using rule 23 (TypeLit -> ArrayType .)
    RIGHT_PARENTHESIS reduce using rule 23 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 23 (TypeLit -> ArrayType .)
    ADD             reduce using rule 23 (TypeLit -> ArrayType .)
    SUBTRACT        reduce using rule 23 (TypeLit -> ArrayType .)
    NOT             reduce using rule 23 (TypeLit -> ArrayType .)
    XOR             reduce using rule 23 (TypeLit -> ArrayType .)
    MULTIPLY        reduce using rule 23 (TypeLit -> ArrayType .)
    AND             reduce using rule 23 (TypeLit -> ArrayType .)
    ARROW           reduce using rule 23 (TypeLit -> ArrayType .)
    IDENT           reduce using rule 23 (TypeLit -> ArrayType .)
    INT             reduce using rule 23 (TypeLit -> ArrayType .)
    FLOAT           reduce using rule 23 (TypeLit -> ArrayType .)
    IMAGINARY       reduce using rule 23 (TypeLit -> ArrayType .)
    RUNE            reduce using rule 23 (TypeLit -> ArrayType .)
    STRING          reduce using rule 23 (TypeLit -> ArrayType .)
    FUNCTION        reduce using rule 23 (TypeLit -> ArrayType .)
    LEFT_BRACKET    reduce using rule 23 (TypeLit -> ArrayType .)
    STRUCT          reduce using rule 23 (TypeLit -> ArrayType .)
    INTERFACE       reduce using rule 23 (TypeLit -> ArrayType .)
    MAP             reduce using rule 23 (TypeLit -> ArrayType .)
    CHAN            reduce using rule 23 (TypeLit -> ArrayType .)

  ! LEFT_BRACKET    [ reduce using rule 144 (LiteralType -> ArrayType .) ]


state 154

    (24) TypeLit -> StructType .
    (143) LiteralType -> StructType .

  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 24 (TypeLit -> StructType .)
    LEFT_PARENTHESIS reduce using rule 24 (TypeLit -> StructType .)
    PERIOD          reduce using rule 24 (TypeLit -> StructType .)
    RIGHT_PARENTHESIS reduce using rule 24 (TypeLit -> StructType .)
    COMMA           reduce using rule 24 (TypeLit -> StructType .)
    ADD             reduce using rule 24 (TypeLit -> StructType .)
    SUBTRACT        reduce using rule 24 (TypeLit -> StructType .)
    NOT             reduce using rule 24 (TypeLit -> StructType .)
    XOR             reduce using rule 24 (TypeLit -> StructType .)
    MULTIPLY        reduce using rule 24 (TypeLit -> StructType .)
    AND             reduce using rule 24 (TypeLit -> StructType .)
    ARROW           reduce using rule 24 (TypeLit -> StructType .)
    IDENT           reduce using rule 24 (TypeLit -> StructType .)
    INT             reduce using rule 24 (TypeLit -> StructType .)
    FLOAT           reduce using rule 24 (TypeLit -> StructType .)
    IMAGINARY       reduce using rule 24 (TypeLit -> StructType .)
    RUNE            reduce using rule 24 (TypeLit -> StructType .)
    STRING          reduce using rule 24 (TypeLit -> StructType .)
    FUNCTION        reduce using rule 24 (TypeLit -> StructType .)
    LEFT_BRACKET    reduce using rule 24 (TypeLit -> StructType .)
    STRUCT          reduce using rule 24 (TypeLit -> StructType .)
    INTERFACE       reduce using rule 24 (TypeLit -> StructType .)
    MAP             reduce using rule 24 (TypeLit -> StructType .)
    CHAN            reduce using rule 24 (TypeLit -> StructType .)

  ! LEFT_BRACKET    [ reduce using rule 143 (LiteralType -> StructType .) ]


state 155

    (28) TypeLit -> SliceType .
    (146) LiteralType -> SliceType .

  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 28 (TypeLit -> SliceType .)
    LEFT_PARENTHESIS reduce using rule 28 (TypeLit -> SliceType .)
    PERIOD          reduce using rule 28 (TypeLit -> SliceType .)
    RIGHT_PARENTHESIS reduce using rule 28 (TypeLit -> SliceType .)
    COMMA           reduce using rule 28 (TypeLit -> SliceType .)
    ADD             reduce using rule 28 (TypeLit -> SliceType .)
    SUBTRACT        reduce using rule 28 (TypeLit -> SliceType .)
    NOT             reduce using rule 28 (TypeLit -> SliceType .)
    XOR             reduce using rule 28 (TypeLit -> SliceType .)
    MULTIPLY        reduce using rule 28 (TypeLit -> SliceType .)
    AND             reduce using rule 28 (TypeLit -> SliceType .)
    ARROW           reduce using rule 28 (TypeLit -> SliceType .)
    IDENT           reduce using rule 28 (TypeLit -> SliceType .)
    INT             reduce using rule 28 (TypeLit -> SliceType .)
    FLOAT           reduce using rule 28 (TypeLit -> SliceType .)
    IMAGINARY       reduce using rule 28 (TypeLit -> SliceType .)
    RUNE            reduce using rule 28 (TypeLit -> SliceType .)
    STRING          reduce using rule 28 (TypeLit -> SliceType .)
    FUNCTION        reduce using rule 28 (TypeLit -> SliceType .)
    LEFT_BRACKET    reduce using rule 28 (TypeLit -> SliceType .)
    STRUCT          reduce using rule 28 (TypeLit -> SliceType .)
    INTERFACE       reduce using rule 28 (TypeLit -> SliceType .)
    MAP             reduce using rule 28 (TypeLit -> SliceType .)
    CHAN            reduce using rule 28 (TypeLit -> SliceType .)

  ! LEFT_BRACKET    [ reduce using rule 146 (LiteralType -> SliceType .) ]


state 156

    (29) TypeLit -> MapType .
    (147) LiteralType -> MapType .

  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 29 (TypeLit -> MapType .)
    LEFT_PARENTHESIS reduce using rule 29 (TypeLit -> MapType .)
    PERIOD          reduce using rule 29 (TypeLit -> MapType .)
    RIGHT_PARENTHESIS reduce using rule 29 (TypeLit -> MapType .)
    COMMA           reduce using rule 29 (TypeLit -> MapType .)
    ADD             reduce using rule 29 (TypeLit -> MapType .)
    SUBTRACT        reduce using rule 29 (TypeLit -> MapType .)
    NOT             reduce using rule 29 (TypeLit -> MapType .)
    XOR             reduce using rule 29 (TypeLit -> MapType .)
    MULTIPLY        reduce using rule 29 (TypeLit -> MapType .)
    AND             reduce using rule 29 (TypeLit -> MapType .)
    ARROW           reduce using rule 29 (TypeLit -> MapType .)
    IDENT           reduce using rule 29 (TypeLit -> MapType .)
    INT             reduce using rule 29 (TypeLit -> MapType .)
    FLOAT           reduce using rule 29 (TypeLit -> MapType .)
    IMAGINARY       reduce using rule 29 (TypeLit -> MapType .)
    RUNE            reduce using rule 29 (TypeLit -> MapType .)
    STRING          reduce using rule 29 (TypeLit -> MapType .)
    FUNCTION        reduce using rule 29 (TypeLit -> MapType .)
    LEFT_BRACKET    reduce using rule 29 (TypeLit -> MapType .)
    STRUCT          reduce using rule 29 (TypeLit -> MapType .)
    INTERFACE       reduce using rule 29 (TypeLit -> MapType .)
    MAP             reduce using rule 29 (TypeLit -> MapType .)
    CHAN            reduce using rule 29 (TypeLit -> MapType .)

  ! LEFT_BRACKET    [ reduce using rule 147 (LiteralType -> MapType .) ]


state 157

    (34) StructType -> STRUCT LEFT_BRACE . FieldDeclStar RIGHT_BRACE
    (35) FieldDeclStar -> . FieldDeclStar FieldDecl SEMICOLON
    (36) FieldDeclStar -> .

    RIGHT_BRACE     reduce using rule 36 (FieldDeclStar -> .)
    IDENT           reduce using rule 36 (FieldDeclStar -> .)
    MULTIPLY        reduce using rule 36 (FieldDeclStar -> .)

    FieldDeclStar                  shift and go to state 233

state 158

    (44) PointerType -> MULTIPLY BaseType .

    ASSIGNMENT      reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    SEMICOLON       reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    LEFT_BRACE      reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    RIGHT_PARENTHESIS reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    LEFT_PARENTHESIS reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    PERIOD          reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    COMMA           reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    LEFT_BRACKET    reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    RIGHT_BRACKET   reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    ADD             reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    SUBTRACT        reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    NOT             reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    XOR             reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    MULTIPLY        reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    AND             reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    ARROW           reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    IDENT           reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    INT             reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    FLOAT           reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    IMAGINARY       reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    RUNE            reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    STRING          reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    FUNCTION        reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    STRUCT          reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    INTERFACE       reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    MAP             reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    CHAN            reduce using rule 44 (PointerType -> MULTIPLY BaseType .)
    COLON           reduce using rule 44 (PointerType -> MULTIPLY BaseType .)


state 159

    (45) BaseType -> Type .

    LEFT_BRACE      reduce using rule 45 (BaseType -> Type .)
    SEMICOLON       reduce using rule 45 (BaseType -> Type .)
    ASSIGNMENT      reduce using rule 45 (BaseType -> Type .)
    RIGHT_PARENTHESIS reduce using rule 45 (BaseType -> Type .)
    LEFT_PARENTHESIS reduce using rule 45 (BaseType -> Type .)
    PERIOD          reduce using rule 45 (BaseType -> Type .)
    COMMA           reduce using rule 45 (BaseType -> Type .)
    LEFT_BRACKET    reduce using rule 45 (BaseType -> Type .)
    RIGHT_BRACKET   reduce using rule 45 (BaseType -> Type .)
    ADD             reduce using rule 45 (BaseType -> Type .)
    SUBTRACT        reduce using rule 45 (BaseType -> Type .)
    NOT             reduce using rule 45 (BaseType -> Type .)
    XOR             reduce using rule 45 (BaseType -> Type .)
    MULTIPLY        reduce using rule 45 (BaseType -> Type .)
    AND             reduce using rule 45 (BaseType -> Type .)
    ARROW           reduce using rule 45 (BaseType -> Type .)
    IDENT           reduce using rule 45 (BaseType -> Type .)
    INT             reduce using rule 45 (BaseType -> Type .)
    FLOAT           reduce using rule 45 (BaseType -> Type .)
    IMAGINARY       reduce using rule 45 (BaseType -> Type .)
    RUNE            reduce using rule 45 (BaseType -> Type .)
    STRING          reduce using rule 45 (BaseType -> Type .)
    FUNCTION        reduce using rule 45 (BaseType -> Type .)
    STRUCT          reduce using rule 45 (BaseType -> Type .)
    INTERFACE       reduce using rule 45 (BaseType -> Type .)
    MAP             reduce using rule 45 (BaseType -> Type .)
    CHAN            reduce using rule 45 (BaseType -> Type .)
    COLON           reduce using rule 45 (BaseType -> Type .)


state 160

    (46) FunctionType -> FUNCTION Signature .

    ASSIGNMENT      reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    SEMICOLON       reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    LEFT_BRACE      reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    RIGHT_PARENTHESIS reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    LEFT_PARENTHESIS reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    PERIOD          reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    COMMA           reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    LEFT_BRACKET    reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    RIGHT_BRACKET   reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    ADD             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    SUBTRACT        reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    NOT             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    XOR             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    MULTIPLY        reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    AND             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    ARROW           reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    IDENT           reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    INT             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    FLOAT           reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    IMAGINARY       reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    RUNE            reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    STRING          reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    FUNCTION        reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    STRUCT          reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    INTERFACE       reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    MAP             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    CHAN            reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    COLON           reduce using rule 46 (FunctionType -> FUNCTION Signature .)


state 161

    (63) InterfaceType -> INTERFACE LEFT_BRACE . InterfaceTypePlus RIGHT_BRACE
    (64) InterfaceTypePlus -> . InterfaceTypePlus InterfaceTypeMethod SEMICOLON
    (65) InterfaceTypePlus -> .

    RIGHT_BRACE     reduce using rule 65 (InterfaceTypePlus -> .)
    IDENT           reduce using rule 65 (InterfaceTypePlus -> .)

    InterfaceTypePlus              shift and go to state 234

state 162

    (71) MapType -> MAP LEFT_BRACKET . KeyType RIGHT_BRACKET Type
    (72) KeyType -> . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    KeyType                        shift and go to state 235
    Type                           shift and go to state 236
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 163

    (73) ChannelType -> ChannelTypeOr Type .

    ASSIGNMENT      reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    SEMICOLON       reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    LEFT_BRACE      reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    RIGHT_PARENTHESIS reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    LEFT_PARENTHESIS reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    PERIOD          reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    COMMA           reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    LEFT_BRACKET    reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    RIGHT_BRACKET   reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    ADD             reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    SUBTRACT        reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    NOT             reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    XOR             reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    MULTIPLY        reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    AND             reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    ARROW           reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    IDENT           reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    INT             reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    FLOAT           reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    IMAGINARY       reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    RUNE            reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    STRING          reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    FUNCTION        reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    STRUCT          reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    INTERFACE       reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    MAP             reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    CHAN            reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)
    COLON           reduce using rule 73 (ChannelType -> ChannelTypeOr Type .)


state 164

    (75) ChannelTypeOr -> CHAN ARROW .

    LEFT_PARENTHESIS reduce using rule 75 (ChannelTypeOr -> CHAN ARROW .)
    IDENT           reduce using rule 75 (ChannelTypeOr -> CHAN ARROW .)
    LEFT_BRACKET    reduce using rule 75 (ChannelTypeOr -> CHAN ARROW .)
    STRUCT          reduce using rule 75 (ChannelTypeOr -> CHAN ARROW .)
    MULTIPLY        reduce using rule 75 (ChannelTypeOr -> CHAN ARROW .)
    FUNCTION        reduce using rule 75 (ChannelTypeOr -> CHAN ARROW .)
    INTERFACE       reduce using rule 75 (ChannelTypeOr -> CHAN ARROW .)
    MAP             reduce using rule 75 (ChannelTypeOr -> CHAN ARROW .)
    CHAN            reduce using rule 75 (ChannelTypeOr -> CHAN ARROW .)
    ARROW           reduce using rule 75 (ChannelTypeOr -> CHAN ARROW .)


state 165

    (76) ChannelTypeOr -> ARROW CHAN .

    LEFT_PARENTHESIS reduce using rule 76 (ChannelTypeOr -> ARROW CHAN .)
    IDENT           reduce using rule 76 (ChannelTypeOr -> ARROW CHAN .)
    LEFT_BRACKET    reduce using rule 76 (ChannelTypeOr -> ARROW CHAN .)
    STRUCT          reduce using rule 76 (ChannelTypeOr -> ARROW CHAN .)
    MULTIPLY        reduce using rule 76 (ChannelTypeOr -> ARROW CHAN .)
    FUNCTION        reduce using rule 76 (ChannelTypeOr -> ARROW CHAN .)
    INTERFACE       reduce using rule 76 (ChannelTypeOr -> ARROW CHAN .)
    MAP             reduce using rule 76 (ChannelTypeOr -> ARROW CHAN .)
    CHAN            reduce using rule 76 (ChannelTypeOr -> ARROW CHAN .)
    ARROW           reduce using rule 76 (ChannelTypeOr -> ARROW CHAN .)


state 166

    (97) IdentStar -> COMMA IDENT . IdentStar
    (97) IdentStar -> . COMMA IDENT IdentStar
    (98) IdentStar -> .

    COMMA           shift and go to state 88
    LEFT_PARENTHESIS reduce using rule 98 (IdentStar -> .)
    IDENT           reduce using rule 98 (IdentStar -> .)
    LEFT_BRACKET    reduce using rule 98 (IdentStar -> .)
    STRUCT          reduce using rule 98 (IdentStar -> .)
    MULTIPLY        reduce using rule 98 (IdentStar -> .)
    FUNCTION        reduce using rule 98 (IdentStar -> .)
    INTERFACE       reduce using rule 98 (IdentStar -> .)
    MAP             reduce using rule 98 (IdentStar -> .)
    CHAN            reduce using rule 98 (IdentStar -> .)
    ARROW           reduce using rule 98 (IdentStar -> .)
    ASSIGNMENT      reduce using rule 98 (IdentStar -> .)
    SEMICOLON       reduce using rule 98 (IdentStar -> .)
    ELLIPSIS        reduce using rule 98 (IdentStar -> .)
    DEFINE          reduce using rule 98 (IdentStar -> .)

    IdentStar                      shift and go to state 237

state 167

    (104) TypeSpecOr -> LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 104 (TypeSpecOr -> LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESIS .)


state 168

    (105) TypeSpecStar -> TypeSpecStar TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 238


state 169

    (109) AliasDecl -> IDENT ASSIGNMENT Type .

    SEMICOLON       reduce using rule 109 (AliasDecl -> IDENT ASSIGNMENT Type .)


state 170

    (112) VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 112 (VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS .)


state 171

    (113) VarSpecStar -> VarSpecStar VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 239


state 172

    (116) TypeExpressionListOr -> Type AssignmentExpressionListPlus .

    SEMICOLON       reduce using rule 116 (TypeExpressionListOr -> Type AssignmentExpressionListPlus .)


state 173

    (118) AssignmentExpressionListPlus -> ASSIGNMENT . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Expression                     shift and go to state 240
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 174

    (117) TypeExpressionListOr -> ASSIGNMENT ExpressionList .

    SEMICOLON       reduce using rule 117 (TypeExpressionListOr -> ASSIGNMENT ExpressionList .)


state 175

    (99) ExpressionList -> Expression . ExpressionStar
    (190) Expression -> Expression . binary_op Expression
    (100) ExpressionStar -> . COMMA Expression ExpressionStar
    (101) ExpressionStar -> .
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    COMMA           shift and go to state 242
    SEMICOLON       reduce using rule 101 (ExpressionStar -> .)
    RIGHT_PARENTHESIS reduce using rule 101 (ExpressionStar -> .)
    LEFT_BRACE      reduce using rule 101 (ExpressionStar -> .)
    COLON           reduce using rule 101 (ExpressionStar -> .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    ExpressionStar                 shift and go to state 241
    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 176

    (10) ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON .

    RIGHT_PARENTHESIS reduce using rule 10 (ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON .)
    PERIOD          reduce using rule 10 (ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON .)
    IDENT           reduce using rule 10 (ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON .)
    STRING          reduce using rule 10 (ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON .)


state 177

    (77) Block -> LEFT_BRACE StatementList . RIGHT_BRACE
    (78) StatementList -> StatementList . Statement SEMICOLON
    (224) Statement -> . Declaration
    (225) Statement -> . LabeledStmt
    (226) Statement -> . SimpleStmt
    (227) Statement -> . GoStmt
    (228) Statement -> . ReturnStmt
    (229) Statement -> . BreakStmt
    (230) Statement -> . ContinueStmt
    (231) Statement -> . GotoStmt
    (232) Statement -> . FallthroughStmt
    (233) Statement -> . Block
    (234) Statement -> . IfStmt
    (235) Statement -> . SwitchStmt
    (236) Statement -> . SelectStmt
    (237) Statement -> . ForStmt
    (238) Statement -> . DeferStmt
    (80) Declaration -> . ConstDecl
    (81) Declaration -> . TypeDecl
    (82) Declaration -> . VarDecl
    (245) LabeledStmt -> . Label COLON Statement
    (239) SimpleStmt -> . ExpressionStmt
    (240) SimpleStmt -> . SendStmt
    (241) SimpleStmt -> . IncDecStmt
    (242) SimpleStmt -> . Assignment
    (243) SimpleStmt -> . ShortVarDecl
    (244) SimpleStmt -> .
    (307) GoStmt -> . GO Expression
    (318) ReturnStmt -> . RETURN ExpressionListPlus
    (321) BreakStmt -> . BREAK LabelPlus
    (324) ContinueStmt -> . CONTINUE LabelPlus
    (325) GotoStmt -> . GOTO Label
    (326) FallthroughStmt -> . FALLTHROUGH
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (259) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (266) SwitchStmt -> . ExprSwitchStmt
    (267) SwitchStmt -> . TypeSwitchStmt
    (308) SelectStmt -> . SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
    (288) ForStmt -> . FOR ForInternal Block
    (327) DeferStmt -> . DEFER Expression
    (86) ConstDecl -> . CONST ConstSpecOr
    (102) TypeDecl -> . TYPE TypeSpecOr
    (111) VarDecl -> . VARIABLE VarSpec
    (112) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (246) Label -> . IDENT
    (247) ExpressionStmt -> . Expression
    (248) SendStmt -> . Channel ARROW Expression
    (250) IncDecStmt -> . Expression IncDecOr
    (253) Assignment -> . ExpressionList assign_op ExpressionList
    (120) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (268) ExprSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (276) TypeSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (249) Channel -> . Expression
    (99) ExpressionList -> . Expression ExpressionStar
    (96) IdentifierList -> . IDENT IdentStar
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACE     shift and go to state 243
    SEMICOLON       reduce using rule 244 (SimpleStmt -> .)
    GO              shift and go to state 266
    RETURN          shift and go to state 268
    BREAK           shift and go to state 269
    CONTINUE        shift and go to state 270
    GOTO            shift and go to state 271
    FALLTHROUGH     shift and go to state 272
    LEFT_BRACE      shift and go to state 101
    IF              shift and go to state 273
    SELECT          shift and go to state 276
    FOR             shift and go to state 277
    DEFER           shift and go to state 278
    CONST           shift and go to state 18
    TYPE            shift and go to state 19
    VARIABLE        shift and go to state 20
    IDENT           shift and go to state 279
    SWITCH          shift and go to state 283
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Statement                      shift and go to state 244
    Declaration                    shift and go to state 245
    LabeledStmt                    shift and go to state 246
    SimpleStmt                     shift and go to state 247
    GoStmt                         shift and go to state 248
    ReturnStmt                     shift and go to state 249
    BreakStmt                      shift and go to state 250
    ContinueStmt                   shift and go to state 251
    GotoStmt                       shift and go to state 252
    FallthroughStmt                shift and go to state 253
    Block                          shift and go to state 254
    IfStmt                         shift and go to state 255
    SwitchStmt                     shift and go to state 256
    SelectStmt                     shift and go to state 257
    ForStmt                        shift and go to state 258
    DeferStmt                      shift and go to state 259
    ConstDecl                      shift and go to state 14
    TypeDecl                       shift and go to state 15
    VarDecl                        shift and go to state 16
    Label                          shift and go to state 260
    ExpressionStmt                 shift and go to state 261
    SendStmt                       shift and go to state 262
    IncDecStmt                     shift and go to state 263
    Assignment                     shift and go to state 264
    ShortVarDecl                   shift and go to state 265
    Expression                     shift and go to state 267
    ExprSwitchStmt                 shift and go to state 274
    TypeSwitchStmt                 shift and go to state 275
    Channel                        shift and go to state 280
    ExpressionList                 shift and go to state 281
    IdentifierList                 shift and go to state 282
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 178

    (21) TypeName -> IDENT .
    (141) QualifiedIdent -> IDENT . PERIOD IDENT
    (96) IdentifierList -> IDENT . IdentStar
    (97) IdentStar -> . COMMA IDENT IdentStar
    (98) IdentStar -> .

    RIGHT_PARENTHESIS reduce using rule 21 (TypeName -> IDENT .)
    PERIOD          shift and go to state 117
    COMMA           shift and go to state 88
    ELLIPSIS        reduce using rule 98 (IdentStar -> .)
    LEFT_PARENTHESIS reduce using rule 98 (IdentStar -> .)
    IDENT           reduce using rule 98 (IdentStar -> .)
    LEFT_BRACKET    reduce using rule 98 (IdentStar -> .)
    STRUCT          reduce using rule 98 (IdentStar -> .)
    MULTIPLY        reduce using rule 98 (IdentStar -> .)
    FUNCTION        reduce using rule 98 (IdentStar -> .)
    INTERFACE       reduce using rule 98 (IdentStar -> .)
    MAP             reduce using rule 98 (IdentStar -> .)
    CHAN            reduce using rule 98 (IdentStar -> .)
    ARROW           reduce using rule 98 (IdentStar -> .)

    IdentStar                      shift and go to state 87

state 179

    (126) MethodDecl -> FUNCTION Receiver MethodName Signature FunctionBodyPlus .

    SEMICOLON       reduce using rule 126 (MethodDecl -> FUNCTION Receiver MethodName Signature FunctionBodyPlus .)


state 180

    (57) ParameterList -> ParameterDecl COMMA ParameterList .

    COMMA           reduce using rule 57 (ParameterList -> ParameterDecl COMMA ParameterList .)
    RIGHT_PARENTHESIS reduce using rule 57 (ParameterList -> ParameterDecl COMMA ParameterList .)


state 181

    (58) ParameterDecl -> IdentifierListPlus EllipsisPlus Type .

    COMMA           reduce using rule 58 (ParameterDecl -> IdentifierListPlus EllipsisPlus Type .)
    RIGHT_PARENTHESIS reduce using rule 58 (ParameterDecl -> IdentifierListPlus EllipsisPlus Type .)


state 182

    (89) ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON .

    RIGHT_PARENTHESIS reduce using rule 89 (ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON .)
    IDENT           reduce using rule 89 (ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON .)


state 183

    (92) TypeAssignmentExpressionListPlus -> TypePlus ASSIGNMENT ExpressionList .

    SEMICOLON       reduce using rule 92 (TypeAssignmentExpressionListPlus -> TypePlus ASSIGNMENT ExpressionList .)


state 184

    (20) Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .

    ASSIGNMENT      reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    PERIOD          reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ADD             reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    NOT             reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    XOR             reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    AND             reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    IDENT           reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    INT             reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    FLOAT           reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    IMAGINARY       reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RUNE            reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    STRING          reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    FUNCTION        reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    STRUCT          reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    INTERFACE       reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    MAP             reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    CHAN            reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    COLON           reduce using rule 20 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)


state 185

    (141) QualifiedIdent -> IDENT PERIOD IDENT .

    ASSIGNMENT      reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    SEMICOLON       reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LEFT_BRACE      reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    RIGHT_PARENTHESIS reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LEFT_PARENTHESIS reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    PERIOD          reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    COMMA           reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LEFT_BRACKET    reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    RIGHT_BRACKET   reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    ADD             reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    SUBTRACT        reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    NOT             reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    XOR             reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    MULTIPLY        reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    AND             reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    ARROW           reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    IDENT           reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    INT             reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    FLOAT           reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    IMAGINARY       reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    RUNE            reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    STRING          reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    FUNCTION        reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    STRUCT          reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    INTERFACE       reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    MAP             reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    CHAN            reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    COLON           reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LOGICAL_OR      reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LOGICAL_AND     reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    EQUAL           reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    NOT_EQUAL       reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LESS_THAN       reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LESS_THAN_EQUAL reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    GREATER_THAN    reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    GREATER_THAN_EQUAL reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    OR              reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    QUOTIENT        reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    REMAINDER       reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    SHIFT_LEFT      reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    SHIFT_RIGHT     reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    AND_NOT         reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    INCREMENT       reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)
    DECREMENT       reduce using rule 141 (QualifiedIdent -> IDENT PERIOD IDENT .)


state 186

    (145) LiteralType -> LEFT_BRACKET ELLIPSIS . RIGHT_BRACKET Type

    RIGHT_BRACKET   shift and go to state 284


state 187

    (31) ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 285
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 188

    (33) SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .

    ASSIGNMENT      reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    SEMICOLON       reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    LEFT_BRACE      reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    RIGHT_PARENTHESIS reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    LEFT_PARENTHESIS reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    PERIOD          reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    COMMA           reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    LEFT_BRACKET    reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    RIGHT_BRACKET   reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    ADD             reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    SUBTRACT        reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    NOT             reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    XOR             reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    MULTIPLY        reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    AND             reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    ARROW           reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    IDENT           reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    INT             reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    FLOAT           reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    IMAGINARY       reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    RUNE            reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    STRING          reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    FUNCTION        reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    STRUCT          reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    INTERFACE       reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    MAP             reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    CHAN            reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)
    COLON           reduce using rule 33 (SliceType -> LEFT_BRACKET RIGHT_BRACKET Type .)


state 189

    (222) Conversion -> Type LEFT_PARENTHESIS . Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> Type LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Type                           shift and go to state 121
    Expression                     shift and go to state 286
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 190

    (190) Expression -> Expression binary_op . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Expression                     shift and go to state 287
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 191

    (193) binary_op -> LOGICAL_OR .

    ADD             reduce using rule 193 (binary_op -> LOGICAL_OR .)
    SUBTRACT        reduce using rule 193 (binary_op -> LOGICAL_OR .)
    NOT             reduce using rule 193 (binary_op -> LOGICAL_OR .)
    XOR             reduce using rule 193 (binary_op -> LOGICAL_OR .)
    MULTIPLY        reduce using rule 193 (binary_op -> LOGICAL_OR .)
    AND             reduce using rule 193 (binary_op -> LOGICAL_OR .)
    ARROW           reduce using rule 193 (binary_op -> LOGICAL_OR .)
    LEFT_PARENTHESIS reduce using rule 193 (binary_op -> LOGICAL_OR .)
    IDENT           reduce using rule 193 (binary_op -> LOGICAL_OR .)
    INT             reduce using rule 193 (binary_op -> LOGICAL_OR .)
    FLOAT           reduce using rule 193 (binary_op -> LOGICAL_OR .)
    IMAGINARY       reduce using rule 193 (binary_op -> LOGICAL_OR .)
    RUNE            reduce using rule 193 (binary_op -> LOGICAL_OR .)
    STRING          reduce using rule 193 (binary_op -> LOGICAL_OR .)
    FUNCTION        reduce using rule 193 (binary_op -> LOGICAL_OR .)
    LEFT_BRACKET    reduce using rule 193 (binary_op -> LOGICAL_OR .)
    STRUCT          reduce using rule 193 (binary_op -> LOGICAL_OR .)
    INTERFACE       reduce using rule 193 (binary_op -> LOGICAL_OR .)
    MAP             reduce using rule 193 (binary_op -> LOGICAL_OR .)
    CHAN            reduce using rule 193 (binary_op -> LOGICAL_OR .)


state 192

    (194) binary_op -> LOGICAL_AND .

    ADD             reduce using rule 194 (binary_op -> LOGICAL_AND .)
    SUBTRACT        reduce using rule 194 (binary_op -> LOGICAL_AND .)
    NOT             reduce using rule 194 (binary_op -> LOGICAL_AND .)
    XOR             reduce using rule 194 (binary_op -> LOGICAL_AND .)
    MULTIPLY        reduce using rule 194 (binary_op -> LOGICAL_AND .)
    AND             reduce using rule 194 (binary_op -> LOGICAL_AND .)
    ARROW           reduce using rule 194 (binary_op -> LOGICAL_AND .)
    LEFT_PARENTHESIS reduce using rule 194 (binary_op -> LOGICAL_AND .)
    IDENT           reduce using rule 194 (binary_op -> LOGICAL_AND .)
    INT             reduce using rule 194 (binary_op -> LOGICAL_AND .)
    FLOAT           reduce using rule 194 (binary_op -> LOGICAL_AND .)
    IMAGINARY       reduce using rule 194 (binary_op -> LOGICAL_AND .)
    RUNE            reduce using rule 194 (binary_op -> LOGICAL_AND .)
    STRING          reduce using rule 194 (binary_op -> LOGICAL_AND .)
    FUNCTION        reduce using rule 194 (binary_op -> LOGICAL_AND .)
    LEFT_BRACKET    reduce using rule 194 (binary_op -> LOGICAL_AND .)
    STRUCT          reduce using rule 194 (binary_op -> LOGICAL_AND .)
    INTERFACE       reduce using rule 194 (binary_op -> LOGICAL_AND .)
    MAP             reduce using rule 194 (binary_op -> LOGICAL_AND .)
    CHAN            reduce using rule 194 (binary_op -> LOGICAL_AND .)


state 193

    (195) binary_op -> rel_op .

    ADD             reduce using rule 195 (binary_op -> rel_op .)
    SUBTRACT        reduce using rule 195 (binary_op -> rel_op .)
    NOT             reduce using rule 195 (binary_op -> rel_op .)
    XOR             reduce using rule 195 (binary_op -> rel_op .)
    MULTIPLY        reduce using rule 195 (binary_op -> rel_op .)
    AND             reduce using rule 195 (binary_op -> rel_op .)
    ARROW           reduce using rule 195 (binary_op -> rel_op .)
    LEFT_PARENTHESIS reduce using rule 195 (binary_op -> rel_op .)
    IDENT           reduce using rule 195 (binary_op -> rel_op .)
    INT             reduce using rule 195 (binary_op -> rel_op .)
    FLOAT           reduce using rule 195 (binary_op -> rel_op .)
    IMAGINARY       reduce using rule 195 (binary_op -> rel_op .)
    RUNE            reduce using rule 195 (binary_op -> rel_op .)
    STRING          reduce using rule 195 (binary_op -> rel_op .)
    FUNCTION        reduce using rule 195 (binary_op -> rel_op .)
    LEFT_BRACKET    reduce using rule 195 (binary_op -> rel_op .)
    STRUCT          reduce using rule 195 (binary_op -> rel_op .)
    INTERFACE       reduce using rule 195 (binary_op -> rel_op .)
    MAP             reduce using rule 195 (binary_op -> rel_op .)
    CHAN            reduce using rule 195 (binary_op -> rel_op .)


state 194

    (196) binary_op -> add_op .

    ADD             reduce using rule 196 (binary_op -> add_op .)
    SUBTRACT        reduce using rule 196 (binary_op -> add_op .)
    NOT             reduce using rule 196 (binary_op -> add_op .)
    XOR             reduce using rule 196 (binary_op -> add_op .)
    MULTIPLY        reduce using rule 196 (binary_op -> add_op .)
    AND             reduce using rule 196 (binary_op -> add_op .)
    ARROW           reduce using rule 196 (binary_op -> add_op .)
    LEFT_PARENTHESIS reduce using rule 196 (binary_op -> add_op .)
    IDENT           reduce using rule 196 (binary_op -> add_op .)
    INT             reduce using rule 196 (binary_op -> add_op .)
    FLOAT           reduce using rule 196 (binary_op -> add_op .)
    IMAGINARY       reduce using rule 196 (binary_op -> add_op .)
    RUNE            reduce using rule 196 (binary_op -> add_op .)
    STRING          reduce using rule 196 (binary_op -> add_op .)
    FUNCTION        reduce using rule 196 (binary_op -> add_op .)
    LEFT_BRACKET    reduce using rule 196 (binary_op -> add_op .)
    STRUCT          reduce using rule 196 (binary_op -> add_op .)
    INTERFACE       reduce using rule 196 (binary_op -> add_op .)
    MAP             reduce using rule 196 (binary_op -> add_op .)
    CHAN            reduce using rule 196 (binary_op -> add_op .)


state 195

    (197) binary_op -> mul_op .

    ADD             reduce using rule 197 (binary_op -> mul_op .)
    SUBTRACT        reduce using rule 197 (binary_op -> mul_op .)
    NOT             reduce using rule 197 (binary_op -> mul_op .)
    XOR             reduce using rule 197 (binary_op -> mul_op .)
    MULTIPLY        reduce using rule 197 (binary_op -> mul_op .)
    AND             reduce using rule 197 (binary_op -> mul_op .)
    ARROW           reduce using rule 197 (binary_op -> mul_op .)
    LEFT_PARENTHESIS reduce using rule 197 (binary_op -> mul_op .)
    IDENT           reduce using rule 197 (binary_op -> mul_op .)
    INT             reduce using rule 197 (binary_op -> mul_op .)
    FLOAT           reduce using rule 197 (binary_op -> mul_op .)
    IMAGINARY       reduce using rule 197 (binary_op -> mul_op .)
    RUNE            reduce using rule 197 (binary_op -> mul_op .)
    STRING          reduce using rule 197 (binary_op -> mul_op .)
    FUNCTION        reduce using rule 197 (binary_op -> mul_op .)
    LEFT_BRACKET    reduce using rule 197 (binary_op -> mul_op .)
    STRUCT          reduce using rule 197 (binary_op -> mul_op .)
    INTERFACE       reduce using rule 197 (binary_op -> mul_op .)
    MAP             reduce using rule 197 (binary_op -> mul_op .)
    CHAN            reduce using rule 197 (binary_op -> mul_op .)


state 196

    (198) rel_op -> EQUAL .

    ADD             reduce using rule 198 (rel_op -> EQUAL .)
    SUBTRACT        reduce using rule 198 (rel_op -> EQUAL .)
    NOT             reduce using rule 198 (rel_op -> EQUAL .)
    XOR             reduce using rule 198 (rel_op -> EQUAL .)
    MULTIPLY        reduce using rule 198 (rel_op -> EQUAL .)
    AND             reduce using rule 198 (rel_op -> EQUAL .)
    ARROW           reduce using rule 198 (rel_op -> EQUAL .)
    LEFT_PARENTHESIS reduce using rule 198 (rel_op -> EQUAL .)
    IDENT           reduce using rule 198 (rel_op -> EQUAL .)
    INT             reduce using rule 198 (rel_op -> EQUAL .)
    FLOAT           reduce using rule 198 (rel_op -> EQUAL .)
    IMAGINARY       reduce using rule 198 (rel_op -> EQUAL .)
    RUNE            reduce using rule 198 (rel_op -> EQUAL .)
    STRING          reduce using rule 198 (rel_op -> EQUAL .)
    FUNCTION        reduce using rule 198 (rel_op -> EQUAL .)
    LEFT_BRACKET    reduce using rule 198 (rel_op -> EQUAL .)
    STRUCT          reduce using rule 198 (rel_op -> EQUAL .)
    INTERFACE       reduce using rule 198 (rel_op -> EQUAL .)
    MAP             reduce using rule 198 (rel_op -> EQUAL .)
    CHAN            reduce using rule 198 (rel_op -> EQUAL .)


state 197

    (199) rel_op -> NOT_EQUAL .

    ADD             reduce using rule 199 (rel_op -> NOT_EQUAL .)
    SUBTRACT        reduce using rule 199 (rel_op -> NOT_EQUAL .)
    NOT             reduce using rule 199 (rel_op -> NOT_EQUAL .)
    XOR             reduce using rule 199 (rel_op -> NOT_EQUAL .)
    MULTIPLY        reduce using rule 199 (rel_op -> NOT_EQUAL .)
    AND             reduce using rule 199 (rel_op -> NOT_EQUAL .)
    ARROW           reduce using rule 199 (rel_op -> NOT_EQUAL .)
    LEFT_PARENTHESIS reduce using rule 199 (rel_op -> NOT_EQUAL .)
    IDENT           reduce using rule 199 (rel_op -> NOT_EQUAL .)
    INT             reduce using rule 199 (rel_op -> NOT_EQUAL .)
    FLOAT           reduce using rule 199 (rel_op -> NOT_EQUAL .)
    IMAGINARY       reduce using rule 199 (rel_op -> NOT_EQUAL .)
    RUNE            reduce using rule 199 (rel_op -> NOT_EQUAL .)
    STRING          reduce using rule 199 (rel_op -> NOT_EQUAL .)
    FUNCTION        reduce using rule 199 (rel_op -> NOT_EQUAL .)
    LEFT_BRACKET    reduce using rule 199 (rel_op -> NOT_EQUAL .)
    STRUCT          reduce using rule 199 (rel_op -> NOT_EQUAL .)
    INTERFACE       reduce using rule 199 (rel_op -> NOT_EQUAL .)
    MAP             reduce using rule 199 (rel_op -> NOT_EQUAL .)
    CHAN            reduce using rule 199 (rel_op -> NOT_EQUAL .)


state 198

    (200) rel_op -> LESS_THAN .

    ADD             reduce using rule 200 (rel_op -> LESS_THAN .)
    SUBTRACT        reduce using rule 200 (rel_op -> LESS_THAN .)
    NOT             reduce using rule 200 (rel_op -> LESS_THAN .)
    XOR             reduce using rule 200 (rel_op -> LESS_THAN .)
    MULTIPLY        reduce using rule 200 (rel_op -> LESS_THAN .)
    AND             reduce using rule 200 (rel_op -> LESS_THAN .)
    ARROW           reduce using rule 200 (rel_op -> LESS_THAN .)
    LEFT_PARENTHESIS reduce using rule 200 (rel_op -> LESS_THAN .)
    IDENT           reduce using rule 200 (rel_op -> LESS_THAN .)
    INT             reduce using rule 200 (rel_op -> LESS_THAN .)
    FLOAT           reduce using rule 200 (rel_op -> LESS_THAN .)
    IMAGINARY       reduce using rule 200 (rel_op -> LESS_THAN .)
    RUNE            reduce using rule 200 (rel_op -> LESS_THAN .)
    STRING          reduce using rule 200 (rel_op -> LESS_THAN .)
    FUNCTION        reduce using rule 200 (rel_op -> LESS_THAN .)
    LEFT_BRACKET    reduce using rule 200 (rel_op -> LESS_THAN .)
    STRUCT          reduce using rule 200 (rel_op -> LESS_THAN .)
    INTERFACE       reduce using rule 200 (rel_op -> LESS_THAN .)
    MAP             reduce using rule 200 (rel_op -> LESS_THAN .)
    CHAN            reduce using rule 200 (rel_op -> LESS_THAN .)


state 199

    (201) rel_op -> LESS_THAN_EQUAL .

    ADD             reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    SUBTRACT        reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    NOT             reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    XOR             reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    MULTIPLY        reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    AND             reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    ARROW           reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    LEFT_PARENTHESIS reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    IDENT           reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    INT             reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    FLOAT           reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    IMAGINARY       reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    RUNE            reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    STRING          reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    FUNCTION        reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    LEFT_BRACKET    reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    STRUCT          reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    INTERFACE       reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    MAP             reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)
    CHAN            reduce using rule 201 (rel_op -> LESS_THAN_EQUAL .)


state 200

    (202) rel_op -> GREATER_THAN .

    ADD             reduce using rule 202 (rel_op -> GREATER_THAN .)
    SUBTRACT        reduce using rule 202 (rel_op -> GREATER_THAN .)
    NOT             reduce using rule 202 (rel_op -> GREATER_THAN .)
    XOR             reduce using rule 202 (rel_op -> GREATER_THAN .)
    MULTIPLY        reduce using rule 202 (rel_op -> GREATER_THAN .)
    AND             reduce using rule 202 (rel_op -> GREATER_THAN .)
    ARROW           reduce using rule 202 (rel_op -> GREATER_THAN .)
    LEFT_PARENTHESIS reduce using rule 202 (rel_op -> GREATER_THAN .)
    IDENT           reduce using rule 202 (rel_op -> GREATER_THAN .)
    INT             reduce using rule 202 (rel_op -> GREATER_THAN .)
    FLOAT           reduce using rule 202 (rel_op -> GREATER_THAN .)
    IMAGINARY       reduce using rule 202 (rel_op -> GREATER_THAN .)
    RUNE            reduce using rule 202 (rel_op -> GREATER_THAN .)
    STRING          reduce using rule 202 (rel_op -> GREATER_THAN .)
    FUNCTION        reduce using rule 202 (rel_op -> GREATER_THAN .)
    LEFT_BRACKET    reduce using rule 202 (rel_op -> GREATER_THAN .)
    STRUCT          reduce using rule 202 (rel_op -> GREATER_THAN .)
    INTERFACE       reduce using rule 202 (rel_op -> GREATER_THAN .)
    MAP             reduce using rule 202 (rel_op -> GREATER_THAN .)
    CHAN            reduce using rule 202 (rel_op -> GREATER_THAN .)


state 201

    (203) rel_op -> GREATER_THAN_EQUAL .

    ADD             reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    SUBTRACT        reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    NOT             reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    XOR             reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    MULTIPLY        reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    AND             reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    ARROW           reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    LEFT_PARENTHESIS reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    IDENT           reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    INT             reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    FLOAT           reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    IMAGINARY       reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    RUNE            reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    STRING          reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    FUNCTION        reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    LEFT_BRACKET    reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    STRUCT          reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    INTERFACE       reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    MAP             reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)
    CHAN            reduce using rule 203 (rel_op -> GREATER_THAN_EQUAL .)


state 202

    (204) add_op -> ADD .

    ADD             reduce using rule 204 (add_op -> ADD .)
    SUBTRACT        reduce using rule 204 (add_op -> ADD .)
    NOT             reduce using rule 204 (add_op -> ADD .)
    XOR             reduce using rule 204 (add_op -> ADD .)
    MULTIPLY        reduce using rule 204 (add_op -> ADD .)
    AND             reduce using rule 204 (add_op -> ADD .)
    ARROW           reduce using rule 204 (add_op -> ADD .)
    LEFT_PARENTHESIS reduce using rule 204 (add_op -> ADD .)
    IDENT           reduce using rule 204 (add_op -> ADD .)
    INT             reduce using rule 204 (add_op -> ADD .)
    FLOAT           reduce using rule 204 (add_op -> ADD .)
    IMAGINARY       reduce using rule 204 (add_op -> ADD .)
    RUNE            reduce using rule 204 (add_op -> ADD .)
    STRING          reduce using rule 204 (add_op -> ADD .)
    FUNCTION        reduce using rule 204 (add_op -> ADD .)
    LEFT_BRACKET    reduce using rule 204 (add_op -> ADD .)
    STRUCT          reduce using rule 204 (add_op -> ADD .)
    INTERFACE       reduce using rule 204 (add_op -> ADD .)
    MAP             reduce using rule 204 (add_op -> ADD .)
    CHAN            reduce using rule 204 (add_op -> ADD .)
    ASSIGNMENT      reduce using rule 204 (add_op -> ADD .)


state 203

    (205) add_op -> SUBTRACT .

    ADD             reduce using rule 205 (add_op -> SUBTRACT .)
    SUBTRACT        reduce using rule 205 (add_op -> SUBTRACT .)
    NOT             reduce using rule 205 (add_op -> SUBTRACT .)
    XOR             reduce using rule 205 (add_op -> SUBTRACT .)
    MULTIPLY        reduce using rule 205 (add_op -> SUBTRACT .)
    AND             reduce using rule 205 (add_op -> SUBTRACT .)
    ARROW           reduce using rule 205 (add_op -> SUBTRACT .)
    LEFT_PARENTHESIS reduce using rule 205 (add_op -> SUBTRACT .)
    IDENT           reduce using rule 205 (add_op -> SUBTRACT .)
    INT             reduce using rule 205 (add_op -> SUBTRACT .)
    FLOAT           reduce using rule 205 (add_op -> SUBTRACT .)
    IMAGINARY       reduce using rule 205 (add_op -> SUBTRACT .)
    RUNE            reduce using rule 205 (add_op -> SUBTRACT .)
    STRING          reduce using rule 205 (add_op -> SUBTRACT .)
    FUNCTION        reduce using rule 205 (add_op -> SUBTRACT .)
    LEFT_BRACKET    reduce using rule 205 (add_op -> SUBTRACT .)
    STRUCT          reduce using rule 205 (add_op -> SUBTRACT .)
    INTERFACE       reduce using rule 205 (add_op -> SUBTRACT .)
    MAP             reduce using rule 205 (add_op -> SUBTRACT .)
    CHAN            reduce using rule 205 (add_op -> SUBTRACT .)
    ASSIGNMENT      reduce using rule 205 (add_op -> SUBTRACT .)


state 204

    (206) add_op -> OR .

    ADD             reduce using rule 206 (add_op -> OR .)
    SUBTRACT        reduce using rule 206 (add_op -> OR .)
    NOT             reduce using rule 206 (add_op -> OR .)
    XOR             reduce using rule 206 (add_op -> OR .)
    MULTIPLY        reduce using rule 206 (add_op -> OR .)
    AND             reduce using rule 206 (add_op -> OR .)
    ARROW           reduce using rule 206 (add_op -> OR .)
    LEFT_PARENTHESIS reduce using rule 206 (add_op -> OR .)
    IDENT           reduce using rule 206 (add_op -> OR .)
    INT             reduce using rule 206 (add_op -> OR .)
    FLOAT           reduce using rule 206 (add_op -> OR .)
    IMAGINARY       reduce using rule 206 (add_op -> OR .)
    RUNE            reduce using rule 206 (add_op -> OR .)
    STRING          reduce using rule 206 (add_op -> OR .)
    FUNCTION        reduce using rule 206 (add_op -> OR .)
    LEFT_BRACKET    reduce using rule 206 (add_op -> OR .)
    STRUCT          reduce using rule 206 (add_op -> OR .)
    INTERFACE       reduce using rule 206 (add_op -> OR .)
    MAP             reduce using rule 206 (add_op -> OR .)
    CHAN            reduce using rule 206 (add_op -> OR .)
    ASSIGNMENT      reduce using rule 206 (add_op -> OR .)


state 205

    (207) add_op -> XOR .

    ADD             reduce using rule 207 (add_op -> XOR .)
    SUBTRACT        reduce using rule 207 (add_op -> XOR .)
    NOT             reduce using rule 207 (add_op -> XOR .)
    XOR             reduce using rule 207 (add_op -> XOR .)
    MULTIPLY        reduce using rule 207 (add_op -> XOR .)
    AND             reduce using rule 207 (add_op -> XOR .)
    ARROW           reduce using rule 207 (add_op -> XOR .)
    LEFT_PARENTHESIS reduce using rule 207 (add_op -> XOR .)
    IDENT           reduce using rule 207 (add_op -> XOR .)
    INT             reduce using rule 207 (add_op -> XOR .)
    FLOAT           reduce using rule 207 (add_op -> XOR .)
    IMAGINARY       reduce using rule 207 (add_op -> XOR .)
    RUNE            reduce using rule 207 (add_op -> XOR .)
    STRING          reduce using rule 207 (add_op -> XOR .)
    FUNCTION        reduce using rule 207 (add_op -> XOR .)
    LEFT_BRACKET    reduce using rule 207 (add_op -> XOR .)
    STRUCT          reduce using rule 207 (add_op -> XOR .)
    INTERFACE       reduce using rule 207 (add_op -> XOR .)
    MAP             reduce using rule 207 (add_op -> XOR .)
    CHAN            reduce using rule 207 (add_op -> XOR .)
    ASSIGNMENT      reduce using rule 207 (add_op -> XOR .)


state 206

    (208) mul_op -> MULTIPLY .

    ADD             reduce using rule 208 (mul_op -> MULTIPLY .)
    SUBTRACT        reduce using rule 208 (mul_op -> MULTIPLY .)
    NOT             reduce using rule 208 (mul_op -> MULTIPLY .)
    XOR             reduce using rule 208 (mul_op -> MULTIPLY .)
    MULTIPLY        reduce using rule 208 (mul_op -> MULTIPLY .)
    AND             reduce using rule 208 (mul_op -> MULTIPLY .)
    ARROW           reduce using rule 208 (mul_op -> MULTIPLY .)
    LEFT_PARENTHESIS reduce using rule 208 (mul_op -> MULTIPLY .)
    IDENT           reduce using rule 208 (mul_op -> MULTIPLY .)
    INT             reduce using rule 208 (mul_op -> MULTIPLY .)
    FLOAT           reduce using rule 208 (mul_op -> MULTIPLY .)
    IMAGINARY       reduce using rule 208 (mul_op -> MULTIPLY .)
    RUNE            reduce using rule 208 (mul_op -> MULTIPLY .)
    STRING          reduce using rule 208 (mul_op -> MULTIPLY .)
    FUNCTION        reduce using rule 208 (mul_op -> MULTIPLY .)
    LEFT_BRACKET    reduce using rule 208 (mul_op -> MULTIPLY .)
    STRUCT          reduce using rule 208 (mul_op -> MULTIPLY .)
    INTERFACE       reduce using rule 208 (mul_op -> MULTIPLY .)
    MAP             reduce using rule 208 (mul_op -> MULTIPLY .)
    CHAN            reduce using rule 208 (mul_op -> MULTIPLY .)
    ASSIGNMENT      reduce using rule 208 (mul_op -> MULTIPLY .)


state 207

    (209) mul_op -> QUOTIENT .

    ADD             reduce using rule 209 (mul_op -> QUOTIENT .)
    SUBTRACT        reduce using rule 209 (mul_op -> QUOTIENT .)
    NOT             reduce using rule 209 (mul_op -> QUOTIENT .)
    XOR             reduce using rule 209 (mul_op -> QUOTIENT .)
    MULTIPLY        reduce using rule 209 (mul_op -> QUOTIENT .)
    AND             reduce using rule 209 (mul_op -> QUOTIENT .)
    ARROW           reduce using rule 209 (mul_op -> QUOTIENT .)
    LEFT_PARENTHESIS reduce using rule 209 (mul_op -> QUOTIENT .)
    IDENT           reduce using rule 209 (mul_op -> QUOTIENT .)
    INT             reduce using rule 209 (mul_op -> QUOTIENT .)
    FLOAT           reduce using rule 209 (mul_op -> QUOTIENT .)
    IMAGINARY       reduce using rule 209 (mul_op -> QUOTIENT .)
    RUNE            reduce using rule 209 (mul_op -> QUOTIENT .)
    STRING          reduce using rule 209 (mul_op -> QUOTIENT .)
    FUNCTION        reduce using rule 209 (mul_op -> QUOTIENT .)
    LEFT_BRACKET    reduce using rule 209 (mul_op -> QUOTIENT .)
    STRUCT          reduce using rule 209 (mul_op -> QUOTIENT .)
    INTERFACE       reduce using rule 209 (mul_op -> QUOTIENT .)
    MAP             reduce using rule 209 (mul_op -> QUOTIENT .)
    CHAN            reduce using rule 209 (mul_op -> QUOTIENT .)
    ASSIGNMENT      reduce using rule 209 (mul_op -> QUOTIENT .)


state 208

    (210) mul_op -> REMAINDER .

    ADD             reduce using rule 210 (mul_op -> REMAINDER .)
    SUBTRACT        reduce using rule 210 (mul_op -> REMAINDER .)
    NOT             reduce using rule 210 (mul_op -> REMAINDER .)
    XOR             reduce using rule 210 (mul_op -> REMAINDER .)
    MULTIPLY        reduce using rule 210 (mul_op -> REMAINDER .)
    AND             reduce using rule 210 (mul_op -> REMAINDER .)
    ARROW           reduce using rule 210 (mul_op -> REMAINDER .)
    LEFT_PARENTHESIS reduce using rule 210 (mul_op -> REMAINDER .)
    IDENT           reduce using rule 210 (mul_op -> REMAINDER .)
    INT             reduce using rule 210 (mul_op -> REMAINDER .)
    FLOAT           reduce using rule 210 (mul_op -> REMAINDER .)
    IMAGINARY       reduce using rule 210 (mul_op -> REMAINDER .)
    RUNE            reduce using rule 210 (mul_op -> REMAINDER .)
    STRING          reduce using rule 210 (mul_op -> REMAINDER .)
    FUNCTION        reduce using rule 210 (mul_op -> REMAINDER .)
    LEFT_BRACKET    reduce using rule 210 (mul_op -> REMAINDER .)
    STRUCT          reduce using rule 210 (mul_op -> REMAINDER .)
    INTERFACE       reduce using rule 210 (mul_op -> REMAINDER .)
    MAP             reduce using rule 210 (mul_op -> REMAINDER .)
    CHAN            reduce using rule 210 (mul_op -> REMAINDER .)
    ASSIGNMENT      reduce using rule 210 (mul_op -> REMAINDER .)


state 209

    (211) mul_op -> SHIFT_LEFT .

    ADD             reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    SUBTRACT        reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    NOT             reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    XOR             reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    MULTIPLY        reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    AND             reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    ARROW           reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    LEFT_PARENTHESIS reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    IDENT           reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    INT             reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    FLOAT           reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    IMAGINARY       reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    RUNE            reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    STRING          reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    FUNCTION        reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    LEFT_BRACKET    reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    STRUCT          reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    INTERFACE       reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    MAP             reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    CHAN            reduce using rule 211 (mul_op -> SHIFT_LEFT .)
    ASSIGNMENT      reduce using rule 211 (mul_op -> SHIFT_LEFT .)


state 210

    (212) mul_op -> SHIFT_RIGHT .

    ADD             reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    SUBTRACT        reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    NOT             reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    XOR             reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    MULTIPLY        reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    AND             reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    ARROW           reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    LEFT_PARENTHESIS reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    IDENT           reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    INT             reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    FLOAT           reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    IMAGINARY       reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    RUNE            reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    STRING          reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    FUNCTION        reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    LEFT_BRACKET    reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    STRUCT          reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    INTERFACE       reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    MAP             reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    CHAN            reduce using rule 212 (mul_op -> SHIFT_RIGHT .)
    ASSIGNMENT      reduce using rule 212 (mul_op -> SHIFT_RIGHT .)


state 211

    (213) mul_op -> AND .

    ADD             reduce using rule 213 (mul_op -> AND .)
    SUBTRACT        reduce using rule 213 (mul_op -> AND .)
    NOT             reduce using rule 213 (mul_op -> AND .)
    XOR             reduce using rule 213 (mul_op -> AND .)
    MULTIPLY        reduce using rule 213 (mul_op -> AND .)
    AND             reduce using rule 213 (mul_op -> AND .)
    ARROW           reduce using rule 213 (mul_op -> AND .)
    LEFT_PARENTHESIS reduce using rule 213 (mul_op -> AND .)
    IDENT           reduce using rule 213 (mul_op -> AND .)
    INT             reduce using rule 213 (mul_op -> AND .)
    FLOAT           reduce using rule 213 (mul_op -> AND .)
    IMAGINARY       reduce using rule 213 (mul_op -> AND .)
    RUNE            reduce using rule 213 (mul_op -> AND .)
    STRING          reduce using rule 213 (mul_op -> AND .)
    FUNCTION        reduce using rule 213 (mul_op -> AND .)
    LEFT_BRACKET    reduce using rule 213 (mul_op -> AND .)
    STRUCT          reduce using rule 213 (mul_op -> AND .)
    INTERFACE       reduce using rule 213 (mul_op -> AND .)
    MAP             reduce using rule 213 (mul_op -> AND .)
    CHAN            reduce using rule 213 (mul_op -> AND .)
    ASSIGNMENT      reduce using rule 213 (mul_op -> AND .)


state 212

    (214) mul_op -> AND_NOT .

    ADD             reduce using rule 214 (mul_op -> AND_NOT .)
    SUBTRACT        reduce using rule 214 (mul_op -> AND_NOT .)
    NOT             reduce using rule 214 (mul_op -> AND_NOT .)
    XOR             reduce using rule 214 (mul_op -> AND_NOT .)
    MULTIPLY        reduce using rule 214 (mul_op -> AND_NOT .)
    AND             reduce using rule 214 (mul_op -> AND_NOT .)
    ARROW           reduce using rule 214 (mul_op -> AND_NOT .)
    LEFT_PARENTHESIS reduce using rule 214 (mul_op -> AND_NOT .)
    IDENT           reduce using rule 214 (mul_op -> AND_NOT .)
    INT             reduce using rule 214 (mul_op -> AND_NOT .)
    FLOAT           reduce using rule 214 (mul_op -> AND_NOT .)
    IMAGINARY       reduce using rule 214 (mul_op -> AND_NOT .)
    RUNE            reduce using rule 214 (mul_op -> AND_NOT .)
    STRING          reduce using rule 214 (mul_op -> AND_NOT .)
    FUNCTION        reduce using rule 214 (mul_op -> AND_NOT .)
    LEFT_BRACKET    reduce using rule 214 (mul_op -> AND_NOT .)
    STRUCT          reduce using rule 214 (mul_op -> AND_NOT .)
    INTERFACE       reduce using rule 214 (mul_op -> AND_NOT .)
    MAP             reduce using rule 214 (mul_op -> AND_NOT .)
    CHAN            reduce using rule 214 (mul_op -> AND_NOT .)
    ASSIGNMENT      reduce using rule 214 (mul_op -> AND_NOT .)


state 213

    (169) PrimaryExpr -> PrimaryExpr Selector .

    PERIOD          reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    LEFT_BRACKET    reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    LEFT_PARENTHESIS reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    LOGICAL_OR      reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    LOGICAL_AND     reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUAL           reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    NOT_EQUAL       reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS_THAN       reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS_THAN_EQUAL reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    GREATER_THAN    reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    GREATER_THAN_EQUAL reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD             reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    SUBTRACT        reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    MULTIPLY        reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    QUOTIENT        reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    REMAINDER       reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    SHIFT_LEFT      reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    SHIFT_RIGHT     reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_NOT         reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    RIGHT_BRACKET   reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    RIGHT_PARENTHESIS reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    INCREMENT       reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    DECREMENT       reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    ARROW           reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGNMENT      reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)
    LEFT_BRACE      reduce using rule 169 (PrimaryExpr -> PrimaryExpr Selector .)


state 214

    (170) PrimaryExpr -> PrimaryExpr Index .

    PERIOD          reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    LEFT_BRACKET    reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    LEFT_PARENTHESIS reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    LOGICAL_OR      reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    LOGICAL_AND     reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    EQUAL           reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    NOT_EQUAL       reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    LESS_THAN       reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    LESS_THAN_EQUAL reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    GREATER_THAN    reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    GREATER_THAN_EQUAL reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    SUBTRACT        reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    MULTIPLY        reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    QUOTIENT        reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    REMAINDER       reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    SHIFT_LEFT      reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    SHIFT_RIGHT     reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    RIGHT_BRACKET   reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    RIGHT_PARENTHESIS reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    INCREMENT       reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    DECREMENT       reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    ARROW           reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGNMENT      reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)
    LEFT_BRACE      reduce using rule 170 (PrimaryExpr -> PrimaryExpr Index .)


state 215

    (171) PrimaryExpr -> PrimaryExpr Slice .

    PERIOD          reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    LEFT_BRACKET    reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    LEFT_PARENTHESIS reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    LOGICAL_OR      reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    LOGICAL_AND     reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUAL           reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    NOT_EQUAL       reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS_THAN       reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS_THAN_EQUAL reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATER_THAN    reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATER_THAN_EQUAL reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD             reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    SUBTRACT        reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    MULTIPLY        reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    QUOTIENT        reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    REMAINDER       reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    SHIFT_LEFT      reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    SHIFT_RIGHT     reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT         reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    RIGHT_BRACKET   reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    RIGHT_PARENTHESIS reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    INCREMENT       reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    DECREMENT       reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    ARROW           reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGNMENT      reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)
    LEFT_BRACE      reduce using rule 171 (PrimaryExpr -> PrimaryExpr Slice .)


state 216

    (172) PrimaryExpr -> PrimaryExpr TypeAssertion .

    PERIOD          reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LEFT_BRACKET    reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LEFT_PARENTHESIS reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOGICAL_OR      reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOGICAL_AND     reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQUAL           reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NOT_EQUAL       reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESS_THAN       reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESS_THAN_EQUAL reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATER_THAN    reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATER_THAN_EQUAL reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ADD             reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SUBTRACT        reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR              reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR             reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MULTIPLY        reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    QUOTIENT        reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    REMAINDER       reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHIFT_LEFT      reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SHIFT_RIGHT     reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND             reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND_NOT         reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RIGHT_BRACKET   reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMMA           reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SEMICOLON       reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RIGHT_PARENTHESIS reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    INCREMENT       reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DECREMENT       reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ARROW           reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ASSIGNMENT      reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COLON           reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LEFT_BRACE      reduce using rule 172 (PrimaryExpr -> PrimaryExpr TypeAssertion .)


state 217

    (173) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEFT_BRACKET    reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEFT_PARENTHESIS reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOGICAL_OR      reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOGICAL_AND     reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUAL           reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    NOT_EQUAL       reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS_THAN       reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS_THAN_EQUAL reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREATER_THAN    reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREATER_THAN_EQUAL reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUBTRACT        reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    MULTIPLY        reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUOTIENT        reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    REMAINDER       reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHIFT_LEFT      reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHIFT_RIGHT     reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    RIGHT_BRACKET   reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    RIGHT_PARENTHESIS reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    INCREMENT       reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    DECREMENT       reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    ARROW           reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGNMENT      reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEFT_BRACE      reduce using rule 173 (PrimaryExpr -> PrimaryExpr Arguments .)


state 218

    (174) Selector -> PERIOD . IDENT
    (178) TypeAssertion -> PERIOD . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS

    IDENT           shift and go to state 288
    LEFT_PARENTHESIS shift and go to state 289


state 219

    (175) Index -> LEFT_BRACKET . Expression RIGHT_BRACKET
    (176) Slice -> LEFT_BRACKET . ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET
    (177) Slice -> LEFT_BRACKET . ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (269) ExpressionPlus -> . Expression
    (270) ExpressionPlus -> .
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    COLON           reduce using rule 270 (ExpressionPlus -> .)
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Expression                     shift and go to state 290
    ExpressionPlus                 shift and go to state 291
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 220

    (179) Arguments -> LEFT_PARENTHESIS . ArgumentsPlus RIGHT_PARENTHESIS
    (180) ArgumentsPlus -> . ArgumentsInOr
    (181) ArgumentsPlus -> .
    (182) ArgumentsInOr -> . ExpressionList
    (183) ArgumentsInOr -> . Type CommaExpressionListPlus
    (99) ExpressionList -> . Expression ExpressionStar
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName

    RIGHT_PARENTHESIS reduce using rule 181 (ArgumentsPlus -> .)
    LEFT_PARENTHESIS shift and go to state 222
    IDENT           shift and go to state 225
    LEFT_BRACKET    shift and go to state 227
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 296
    FUNCTION        shift and go to state 228
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    CHAN            shift and go to state 85
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150

    ArgumentsPlus                  shift and go to state 292
    ArgumentsInOr                  shift and go to state 293
    ExpressionList                 shift and go to state 294
    Type                           shift and go to state 295
    Expression                     shift and go to state 175
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    UnaryExpr                      shift and go to state 123
    QualifiedIdent                 shift and go to state 226
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    ChannelTypeOr                  shift and go to state 84
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    LiteralType                    shift and go to state 151

state 221

    (192) UnaryExpr -> unary_op UnaryExpr .

    LOGICAL_OR      reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    LOGICAL_AND     reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    EQUAL           reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    NOT_EQUAL       reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    LESS_THAN       reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    LESS_THAN_EQUAL reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    GREATER_THAN    reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    GREATER_THAN_EQUAL reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    ADD             reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    SUBTRACT        reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    OR              reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    XOR             reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    MULTIPLY        reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    QUOTIENT        reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    REMAINDER       reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    SHIFT_LEFT      reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    SHIFT_RIGHT     reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    AND             reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    AND_NOT         reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    RIGHT_BRACKET   reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    COMMA           reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    SEMICOLON       reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    RIGHT_PARENTHESIS reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    INCREMENT       reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    DECREMENT       reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    ARROW           reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    ASSIGNMENT      reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    COLON           reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)
    LEFT_BRACE      reduce using rule 192 (UnaryExpr -> unary_op UnaryExpr .)


state 222

    (20) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (130) Operand -> LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName

    LEFT_PARENTHESIS shift and go to state 222
    IDENT           shift and go to state 225
    LEFT_BRACKET    shift and go to state 227
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 296
    FUNCTION        shift and go to state 228
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    CHAN            shift and go to state 85
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150

    Type                           shift and go to state 224
    Expression                     shift and go to state 223
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    UnaryExpr                      shift and go to state 123
    QualifiedIdent                 shift and go to state 226
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    ChannelTypeOr                  shift and go to state 84
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    LiteralType                    shift and go to state 151

state 223

    (130) Operand -> LEFT_PARENTHESIS Expression . RIGHT_PARENTHESIS
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    RIGHT_PARENTHESIS shift and go to state 297
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 224

    (20) Type -> LEFT_PARENTHESIS Type . RIGHT_PARENTHESIS
    (222) Conversion -> Type . LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> Type . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (188) ReceiverType -> Type .

    RIGHT_PARENTHESIS shift and go to state 184
    LEFT_PARENTHESIS shift and go to state 189
    PERIOD          reduce using rule 188 (ReceiverType -> Type .)


state 225

    (21) TypeName -> IDENT .
    (141) QualifiedIdent -> IDENT . PERIOD IDENT
    (139) OperandName -> IDENT .

  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 21 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 21 (TypeName -> IDENT .)
  ! reduce/reduce conflict for RIGHT_PARENTHESIS resolved using rule 21 (TypeName -> IDENT .)
  ! reduce/reduce conflict for ADD resolved using rule 21 (TypeName -> IDENT .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 21 (TypeName -> IDENT .)
  ! reduce/reduce conflict for XOR resolved using rule 21 (TypeName -> IDENT .)
  ! reduce/reduce conflict for MULTIPLY resolved using rule 21 (TypeName -> IDENT .)
  ! reduce/reduce conflict for AND resolved using rule 21 (TypeName -> IDENT .)
  ! reduce/reduce conflict for COMMA resolved using rule 21 (TypeName -> IDENT .)
    RIGHT_PARENTHESIS reduce using rule 21 (TypeName -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 21 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 21 (TypeName -> IDENT .)
    COMMA           reduce using rule 21 (TypeName -> IDENT .)
    ADD             reduce using rule 21 (TypeName -> IDENT .)
    SUBTRACT        reduce using rule 21 (TypeName -> IDENT .)
    NOT             reduce using rule 21 (TypeName -> IDENT .)
    XOR             reduce using rule 21 (TypeName -> IDENT .)
    MULTIPLY        reduce using rule 21 (TypeName -> IDENT .)
    AND             reduce using rule 21 (TypeName -> IDENT .)
    ARROW           reduce using rule 21 (TypeName -> IDENT .)
    IDENT           reduce using rule 21 (TypeName -> IDENT .)
    INT             reduce using rule 21 (TypeName -> IDENT .)
    FLOAT           reduce using rule 21 (TypeName -> IDENT .)
    IMAGINARY       reduce using rule 21 (TypeName -> IDENT .)
    RUNE            reduce using rule 21 (TypeName -> IDENT .)
    STRING          reduce using rule 21 (TypeName -> IDENT .)
    FUNCTION        reduce using rule 21 (TypeName -> IDENT .)
    STRUCT          reduce using rule 21 (TypeName -> IDENT .)
    INTERFACE       reduce using rule 21 (TypeName -> IDENT .)
    MAP             reduce using rule 21 (TypeName -> IDENT .)
    CHAN            reduce using rule 21 (TypeName -> IDENT .)
    PERIOD          shift and go to state 117
    LOGICAL_OR      reduce using rule 139 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 139 (OperandName -> IDENT .)
    EQUAL           reduce using rule 139 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    OR              reduce using rule 139 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 139 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 139 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 139 (OperandName -> IDENT .)

  ! PERIOD          [ reduce using rule 21 (TypeName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! ADD             [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! SUBTRACT        [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! XOR             [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! MULTIPLY        [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! AND             [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 139 (OperandName -> IDENT .) ]


state 226

    (22) TypeName -> QualifiedIdent .
    (140) OperandName -> QualifiedIdent .

  ! reduce/reduce conflict for PERIOD resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for RIGHT_PARENTHESIS resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for ADD resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for XOR resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for MULTIPLY resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for AND resolved using rule 22 (TypeName -> QualifiedIdent .)
  ! reduce/reduce conflict for COMMA resolved using rule 22 (TypeName -> QualifiedIdent .)
    RIGHT_PARENTHESIS reduce using rule 22 (TypeName -> QualifiedIdent .)
    LEFT_PARENTHESIS reduce using rule 22 (TypeName -> QualifiedIdent .)
    PERIOD          reduce using rule 22 (TypeName -> QualifiedIdent .)
    LEFT_BRACKET    reduce using rule 22 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 22 (TypeName -> QualifiedIdent .)
    ADD             reduce using rule 22 (TypeName -> QualifiedIdent .)
    SUBTRACT        reduce using rule 22 (TypeName -> QualifiedIdent .)
    NOT             reduce using rule 22 (TypeName -> QualifiedIdent .)
    XOR             reduce using rule 22 (TypeName -> QualifiedIdent .)
    MULTIPLY        reduce using rule 22 (TypeName -> QualifiedIdent .)
    AND             reduce using rule 22 (TypeName -> QualifiedIdent .)
    ARROW           reduce using rule 22 (TypeName -> QualifiedIdent .)
    IDENT           reduce using rule 22 (TypeName -> QualifiedIdent .)
    INT             reduce using rule 22 (TypeName -> QualifiedIdent .)
    FLOAT           reduce using rule 22 (TypeName -> QualifiedIdent .)
    IMAGINARY       reduce using rule 22 (TypeName -> QualifiedIdent .)
    RUNE            reduce using rule 22 (TypeName -> QualifiedIdent .)
    STRING          reduce using rule 22 (TypeName -> QualifiedIdent .)
    FUNCTION        reduce using rule 22 (TypeName -> QualifiedIdent .)
    STRUCT          reduce using rule 22 (TypeName -> QualifiedIdent .)
    INTERFACE       reduce using rule 22 (TypeName -> QualifiedIdent .)
    MAP             reduce using rule 22 (TypeName -> QualifiedIdent .)
    CHAN            reduce using rule 22 (TypeName -> QualifiedIdent .)
    LOGICAL_OR      reduce using rule 140 (OperandName -> QualifiedIdent .)
    LOGICAL_AND     reduce using rule 140 (OperandName -> QualifiedIdent .)
    EQUAL           reduce using rule 140 (OperandName -> QualifiedIdent .)
    NOT_EQUAL       reduce using rule 140 (OperandName -> QualifiedIdent .)
    LESS_THAN       reduce using rule 140 (OperandName -> QualifiedIdent .)
    LESS_THAN_EQUAL reduce using rule 140 (OperandName -> QualifiedIdent .)
    GREATER_THAN    reduce using rule 140 (OperandName -> QualifiedIdent .)
    GREATER_THAN_EQUAL reduce using rule 140 (OperandName -> QualifiedIdent .)
    OR              reduce using rule 140 (OperandName -> QualifiedIdent .)
    QUOTIENT        reduce using rule 140 (OperandName -> QualifiedIdent .)
    REMAINDER       reduce using rule 140 (OperandName -> QualifiedIdent .)
    SHIFT_LEFT      reduce using rule 140 (OperandName -> QualifiedIdent .)
    SHIFT_RIGHT     reduce using rule 140 (OperandName -> QualifiedIdent .)
    AND_NOT         reduce using rule 140 (OperandName -> QualifiedIdent .)

  ! PERIOD          [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! LEFT_BRACKET    [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! ADD             [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! SUBTRACT        [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! XOR             [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! MULTIPLY        [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! AND             [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]
  ! COMMA           [ reduce using rule 140 (OperandName -> QualifiedIdent .) ]


state 227

    (31) ArrayType -> LEFT_BRACKET . ArrayLength RIGHT_BRACKET Type
    (33) SliceType -> LEFT_BRACKET . RIGHT_BRACKET Type
    (145) LiteralType -> LEFT_BRACKET . ELLIPSIS RIGHT_BRACKET Type
    (32) ArrayLength -> . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACKET   shift and go to state 120
    ELLIPSIS        shift and go to state 186
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ArrayLength                    shift and go to state 119
    Type                           shift and go to state 121
    Expression                     shift and go to state 122
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 228

    (46) FunctionType -> FUNCTION . Signature
    (165) FunctionLit -> FUNCTION . Signature FunctionBody
    (47) Signature -> . Parameters ResultPlus
    (52) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 34

    Signature                      shift and go to state 298
    Parameters                     shift and go to state 53

state 229

    (187) MethodExpr -> ReceiverType PERIOD . MethodName
    (69) MethodName -> . IDENT

    IDENT           shift and go to state 55

    MethodName                     shift and go to state 299

state 230

    (142) CompositeLit -> LiteralType LiteralValue .

    PERIOD          reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    LEFT_BRACKET    reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    LEFT_PARENTHESIS reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    LOGICAL_OR      reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    LOGICAL_AND     reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    EQUAL           reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    NOT_EQUAL       reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    LESS_THAN       reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    LESS_THAN_EQUAL reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    GREATER_THAN    reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    GREATER_THAN_EQUAL reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    ADD             reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    SUBTRACT        reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    OR              reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    XOR             reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    MULTIPLY        reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    QUOTIENT        reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    REMAINDER       reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    SHIFT_LEFT      reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    SHIFT_RIGHT     reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    AND             reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    AND_NOT         reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    RIGHT_BRACKET   reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    COMMA           reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    SEMICOLON       reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    RIGHT_PARENTHESIS reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    INCREMENT       reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    DECREMENT       reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    ARROW           reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    ASSIGNMENT      reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    COLON           reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)
    LEFT_BRACE      reduce using rule 142 (CompositeLit -> LiteralType LiteralValue .)


state 231

    (149) LiteralValue -> LEFT_BRACKET . ElementListPlus RIGHT_BRACKET
    (150) ElementListPlus -> . ElementList
    (151) ElementListPlus -> . ElementList COMMA
    (152) ElementListPlus -> .
    (153) ElementList -> . KeyedElement KeyedElementStar
    (156) KeyedElement -> . KeyPlus Element
    (157) KeyPlus -> . Key COLON
    (158) KeyPlus -> .
    (159) Key -> . FieldName
    (160) Key -> . Expression
    (161) Key -> . LiteralValue
    (162) FieldName -> . IDENT
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (149) LiteralValue -> . LEFT_BRACKET ElementListPlus RIGHT_BRACKET
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    RIGHT_BRACKET   reduce using rule 152 (ElementListPlus -> .)
    IDENT           shift and go to state 309
    LEFT_BRACKET    shift and go to state 300
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

  ! LEFT_BRACKET    [ reduce using rule 158 (KeyPlus -> .) ]
  ! ADD             [ reduce using rule 158 (KeyPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 158 (KeyPlus -> .) ]
  ! NOT             [ reduce using rule 158 (KeyPlus -> .) ]
  ! XOR             [ reduce using rule 158 (KeyPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 158 (KeyPlus -> .) ]
  ! AND             [ reduce using rule 158 (KeyPlus -> .) ]
  ! ARROW           [ reduce using rule 158 (KeyPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 158 (KeyPlus -> .) ]
  ! IDENT           [ reduce using rule 158 (KeyPlus -> .) ]
  ! INT             [ reduce using rule 158 (KeyPlus -> .) ]
  ! FLOAT           [ reduce using rule 158 (KeyPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 158 (KeyPlus -> .) ]
  ! RUNE            [ reduce using rule 158 (KeyPlus -> .) ]
  ! STRING          [ reduce using rule 158 (KeyPlus -> .) ]
  ! FUNCTION        [ reduce using rule 158 (KeyPlus -> .) ]
  ! STRUCT          [ reduce using rule 158 (KeyPlus -> .) ]
  ! INTERFACE       [ reduce using rule 158 (KeyPlus -> .) ]
  ! MAP             [ reduce using rule 158 (KeyPlus -> .) ]
  ! CHAN            [ reduce using rule 158 (KeyPlus -> .) ]

    ElementListPlus                shift and go to state 301
    ElementList                    shift and go to state 302
    KeyedElement                   shift and go to state 303
    KeyPlus                        shift and go to state 304
    Key                            shift and go to state 305
    FieldName                      shift and go to state 306
    Expression                     shift and go to state 307
    LiteralValue                   shift and go to state 308
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 232

    (165) FunctionLit -> FUNCTION Signature . FunctionBody
    (46) FunctionType -> FUNCTION Signature .
    (125) FunctionBody -> . Block
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    LEFT_PARENTHESIS reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    PERIOD          reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    LEFT_BRACE      shift and go to state 101

    FunctionBody                   shift and go to state 310
    Block                          shift and go to state 100

state 233

    (34) StructType -> STRUCT LEFT_BRACE FieldDeclStar . RIGHT_BRACE
    (35) FieldDeclStar -> FieldDeclStar . FieldDecl SEMICOLON
    (37) FieldDecl -> . IdentifierList Type TagPlus
    (38) FieldDecl -> . EmbeddedField TagPlus
    (96) IdentifierList -> . IDENT IdentStar
    (41) EmbeddedField -> . MULTIPLY TypeName
    (42) EmbeddedField -> . TypeName
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (141) QualifiedIdent -> . IDENT PERIOD IDENT

    RIGHT_BRACE     shift and go to state 311
    IDENT           shift and go to state 315
    MULTIPLY        shift and go to state 316

    FieldDecl                      shift and go to state 312
    IdentifierList                 shift and go to state 313
    EmbeddedField                  shift and go to state 314
    TypeName                       shift and go to state 317
    QualifiedIdent                 shift and go to state 69

state 234

    (63) InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus . RIGHT_BRACE
    (64) InterfaceTypePlus -> InterfaceTypePlus . InterfaceTypeMethod SEMICOLON
    (66) InterfaceTypeMethod -> . MethodSpec
    (67) InterfaceTypeMethod -> . InterfaceTypeName
    (68) MethodSpec -> . MethodName Signature
    (70) InterfaceTypeName -> . TypeName
    (69) MethodName -> . IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (141) QualifiedIdent -> . IDENT PERIOD IDENT

    RIGHT_BRACE     shift and go to state 318
    IDENT           shift and go to state 324

    InterfaceTypeMethod            shift and go to state 319
    MethodSpec                     shift and go to state 320
    InterfaceTypeName              shift and go to state 321
    MethodName                     shift and go to state 322
    TypeName                       shift and go to state 323
    QualifiedIdent                 shift and go to state 69

state 235

    (71) MapType -> MAP LEFT_BRACKET KeyType . RIGHT_BRACKET Type

    RIGHT_BRACKET   shift and go to state 325


state 236

    (72) KeyType -> Type .

    RIGHT_BRACKET   reduce using rule 72 (KeyType -> Type .)


state 237

    (97) IdentStar -> COMMA IDENT IdentStar .

    LEFT_PARENTHESIS reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    IDENT           reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    LEFT_BRACKET    reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    STRUCT          reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    MULTIPLY        reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    FUNCTION        reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    INTERFACE       reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    MAP             reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    CHAN            reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    ARROW           reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    ASSIGNMENT      reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    SEMICOLON       reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    ELLIPSIS        reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)
    DEFINE          reduce using rule 97 (IdentStar -> COMMA IDENT IdentStar .)


state 238

    (105) TypeSpecStar -> TypeSpecStar TypeSpec SEMICOLON .

    RIGHT_PARENTHESIS reduce using rule 105 (TypeSpecStar -> TypeSpecStar TypeSpec SEMICOLON .)
    IDENT           reduce using rule 105 (TypeSpecStar -> TypeSpecStar TypeSpec SEMICOLON .)


state 239

    (113) VarSpecStar -> VarSpecStar VarSpec SEMICOLON .

    RIGHT_PARENTHESIS reduce using rule 113 (VarSpecStar -> VarSpecStar VarSpec SEMICOLON .)
    IDENT           reduce using rule 113 (VarSpecStar -> VarSpecStar VarSpec SEMICOLON .)


state 240

    (118) AssignmentExpressionListPlus -> ASSIGNMENT Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    SEMICOLON       reduce using rule 118 (AssignmentExpressionListPlus -> ASSIGNMENT Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 241

    (99) ExpressionList -> Expression ExpressionStar .

    SEMICOLON       reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    ADD             reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    SUBTRACT        reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    OR              reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    XOR             reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    MULTIPLY        reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    QUOTIENT        reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    REMAINDER       reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    SHIFT_LEFT      reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    SHIFT_RIGHT     reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    AND             reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    AND_NOT         reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    ASSIGNMENT      reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    RIGHT_PARENTHESIS reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    LEFT_BRACE      reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)
    COLON           reduce using rule 99 (ExpressionList -> Expression ExpressionStar .)


state 242

    (100) ExpressionStar -> COMMA . Expression ExpressionStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Expression                     shift and go to state 326
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 243

    (77) Block -> LEFT_BRACE StatementList RIGHT_BRACE .

    SEMICOLON       reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    PERIOD          reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LEFT_PARENTHESIS reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LOGICAL_OR      reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LOGICAL_AND     reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    EQUAL           reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    NOT_EQUAL       reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LESS_THAN       reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LESS_THAN_EQUAL reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    GREATER_THAN    reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    GREATER_THAN_EQUAL reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    ADD             reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    SUBTRACT        reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    OR              reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    XOR             reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    MULTIPLY        reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    QUOTIENT        reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    REMAINDER       reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    SHIFT_LEFT      reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    SHIFT_RIGHT     reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    AND             reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    AND_NOT         reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    RIGHT_BRACKET   reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    COMMA           reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    RIGHT_PARENTHESIS reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    INCREMENT       reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    DECREMENT       reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    ARROW           reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    ASSIGNMENT      reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    COLON           reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    LEFT_BRACE      reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    ELSE            reduce using rule 77 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)


state 244

    (78) StatementList -> StatementList Statement . SEMICOLON

    SEMICOLON       shift and go to state 327


state 245

    (224) Statement -> Declaration .

    SEMICOLON       reduce using rule 224 (Statement -> Declaration .)


state 246

    (225) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 225 (Statement -> LabeledStmt .)


state 247

    (226) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 226 (Statement -> SimpleStmt .)


state 248

    (227) Statement -> GoStmt .

    SEMICOLON       reduce using rule 227 (Statement -> GoStmt .)


state 249

    (228) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 228 (Statement -> ReturnStmt .)


state 250

    (229) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 229 (Statement -> BreakStmt .)


state 251

    (230) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 230 (Statement -> ContinueStmt .)


state 252

    (231) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 231 (Statement -> GotoStmt .)


state 253

    (232) Statement -> FallthroughStmt .

    SEMICOLON       reduce using rule 232 (Statement -> FallthroughStmt .)


state 254

    (233) Statement -> Block .

    SEMICOLON       reduce using rule 233 (Statement -> Block .)


state 255

    (234) Statement -> IfStmt .

    SEMICOLON       reduce using rule 234 (Statement -> IfStmt .)


state 256

    (235) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 235 (Statement -> SwitchStmt .)


state 257

    (236) Statement -> SelectStmt .

    SEMICOLON       reduce using rule 236 (Statement -> SelectStmt .)


state 258

    (237) Statement -> ForStmt .

    SEMICOLON       reduce using rule 237 (Statement -> ForStmt .)


state 259

    (238) Statement -> DeferStmt .

    SEMICOLON       reduce using rule 238 (Statement -> DeferStmt .)


state 260

    (245) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 328


state 261

    (239) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 239 (SimpleStmt -> ExpressionStmt .)
    LEFT_BRACE      reduce using rule 239 (SimpleStmt -> ExpressionStmt .)


state 262

    (240) SimpleStmt -> SendStmt .

    SEMICOLON       reduce using rule 240 (SimpleStmt -> SendStmt .)
    LEFT_BRACE      reduce using rule 240 (SimpleStmt -> SendStmt .)


state 263

    (241) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 241 (SimpleStmt -> IncDecStmt .)
    LEFT_BRACE      reduce using rule 241 (SimpleStmt -> IncDecStmt .)


state 264

    (242) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 242 (SimpleStmt -> Assignment .)
    LEFT_BRACE      reduce using rule 242 (SimpleStmt -> Assignment .)


state 265

    (243) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 243 (SimpleStmt -> ShortVarDecl .)
    LEFT_BRACE      reduce using rule 243 (SimpleStmt -> ShortVarDecl .)


state 266

    (307) GoStmt -> GO . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Expression                     shift and go to state 329
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 267

    (247) ExpressionStmt -> Expression .
    (250) IncDecStmt -> Expression . IncDecOr
    (190) Expression -> Expression . binary_op Expression
    (249) Channel -> Expression .
    (99) ExpressionList -> Expression . ExpressionStar
    (251) IncDecOr -> . INCREMENT
    (252) IncDecOr -> . DECREMENT
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (100) ExpressionStar -> . COMMA Expression ExpressionStar
    (101) ExpressionStar -> .
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for QUOTIENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for SHIFT_LEFT resolved as shift
  ! shift/reduce conflict for SHIFT_RIGHT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    SEMICOLON       reduce using rule 247 (ExpressionStmt -> Expression .)
    LEFT_BRACE      reduce using rule 247 (ExpressionStmt -> Expression .)
    ARROW           reduce using rule 249 (Channel -> Expression .)
    INCREMENT       shift and go to state 331
    DECREMENT       shift and go to state 332
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    COMMA           shift and go to state 242
    ASSIGNMENT      reduce using rule 101 (ExpressionStar -> .)
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

  ! ADD             [ reduce using rule 101 (ExpressionStar -> .) ]
  ! SUBTRACT        [ reduce using rule 101 (ExpressionStar -> .) ]
  ! OR              [ reduce using rule 101 (ExpressionStar -> .) ]
  ! XOR             [ reduce using rule 101 (ExpressionStar -> .) ]
  ! MULTIPLY        [ reduce using rule 101 (ExpressionStar -> .) ]
  ! QUOTIENT        [ reduce using rule 101 (ExpressionStar -> .) ]
  ! REMAINDER       [ reduce using rule 101 (ExpressionStar -> .) ]
  ! SHIFT_LEFT      [ reduce using rule 101 (ExpressionStar -> .) ]
  ! SHIFT_RIGHT     [ reduce using rule 101 (ExpressionStar -> .) ]
  ! AND             [ reduce using rule 101 (ExpressionStar -> .) ]
  ! AND_NOT         [ reduce using rule 101 (ExpressionStar -> .) ]

    IncDecOr                       shift and go to state 330
    binary_op                      shift and go to state 190
    ExpressionStar                 shift and go to state 241
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 268

    (318) ReturnStmt -> RETURN . ExpressionListPlus
    (319) ExpressionListPlus -> . ExpressionList
    (320) ExpressionListPlus -> .
    (99) ExpressionList -> . Expression ExpressionStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    SEMICOLON       reduce using rule 320 (ExpressionListPlus -> .)
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ExpressionListPlus             shift and go to state 333
    ExpressionList                 shift and go to state 334
    Expression                     shift and go to state 175
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 269

    (321) BreakStmt -> BREAK . LabelPlus
    (322) LabelPlus -> . Label
    (323) LabelPlus -> .
    (246) Label -> . IDENT

    SEMICOLON       reduce using rule 323 (LabelPlus -> .)
    IDENT           shift and go to state 337

    LabelPlus                      shift and go to state 335
    Label                          shift and go to state 336

state 270

    (324) ContinueStmt -> CONTINUE . LabelPlus
    (322) LabelPlus -> . Label
    (323) LabelPlus -> .
    (246) Label -> . IDENT

    SEMICOLON       reduce using rule 323 (LabelPlus -> .)
    IDENT           shift and go to state 337

    LabelPlus                      shift and go to state 338
    Label                          shift and go to state 336

state 271

    (325) GotoStmt -> GOTO . Label
    (246) Label -> . IDENT

    IDENT           shift and go to state 337

    Label                          shift and go to state 339

state 272

    (326) FallthroughStmt -> FALLTHROUGH .

    SEMICOLON       reduce using rule 326 (FallthroughStmt -> FALLTHROUGH .)


state 273

    (259) IfStmt -> IF . SimpleStmtSemicolonPlus Expression Block ElsePlus
    (260) SimpleStmtSemicolonPlus -> . SimpleStmt SEMICOLON
    (261) SimpleStmtSemicolonPlus -> .
    (239) SimpleStmt -> . ExpressionStmt
    (240) SimpleStmt -> . SendStmt
    (241) SimpleStmt -> . IncDecStmt
    (242) SimpleStmt -> . Assignment
    (243) SimpleStmt -> . ShortVarDecl
    (244) SimpleStmt -> .
    (247) ExpressionStmt -> . Expression
    (248) SendStmt -> . Channel ARROW Expression
    (250) IncDecStmt -> . Expression IncDecOr
    (253) Assignment -> . ExpressionList assign_op ExpressionList
    (120) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (249) Channel -> . Expression
    (99) ExpressionList -> . Expression ExpressionStar
    (96) IdentifierList -> . IDENT IdentStar
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    SEMICOLON       reduce using rule 244 (SimpleStmt -> .)
    IDENT           shift and go to state 342
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

  ! ADD             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! NOT             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! XOR             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! AND             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! ARROW           [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! IDENT           [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! INT             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! FLOAT           [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! RUNE            [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! STRING          [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! FUNCTION        [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! STRUCT          [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! INTERFACE       [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! MAP             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! CHAN            [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]

    SimpleStmtSemicolonPlus        shift and go to state 340
    Expression                     shift and go to state 267
    SimpleStmt                     shift and go to state 341
    ExpressionStmt                 shift and go to state 261
    SendStmt                       shift and go to state 262
    IncDecStmt                     shift and go to state 263
    Assignment                     shift and go to state 264
    ShortVarDecl                   shift and go to state 265
    Channel                        shift and go to state 280
    ExpressionList                 shift and go to state 281
    IdentifierList                 shift and go to state 282
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 274

    (266) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 266 (SwitchStmt -> ExprSwitchStmt .)


state 275

    (267) SwitchStmt -> TypeSwitchStmt .

    SEMICOLON       reduce using rule 267 (SwitchStmt -> TypeSwitchStmt .)


state 276

    (308) SelectStmt -> SELECT . LEFT_BRACE CommClausePlus RIGHT_BRACE

    LEFT_BRACE      shift and go to state 343


state 277

    (288) ForStmt -> FOR . ForInternal Block
    (289) ForInternal -> . Condition
    (290) ForInternal -> . ForClause
    (291) ForInternal -> . RangeClause
    (292) ForInternal -> .
    (293) Condition -> . Expression
    (294) ForClause -> . InitStmtPlus SEMICOLON ConditionPlus SEMICOLON PostStmtPlus
    (303) RangeClause -> . ExpListAssignIdListDefOrPlus RANGE Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (295) InitStmtPlus -> . InitStmt
    (296) InitStmtPlus -> .
    (304) ExpListAssignIdListDefOrPlus -> . ExpressionList ASSIGNMENT
    (305) ExpListAssignIdListDefOrPlus -> . IdentifierList DEFINE
    (306) ExpListAssignIdListDefOrPlus -> .
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (301) InitStmt -> . SimpleStmt
    (99) ExpressionList -> . Expression ExpressionStar
    (96) IdentifierList -> . IDENT IdentStar
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (239) SimpleStmt -> . ExpressionStmt
    (240) SimpleStmt -> . SendStmt
    (241) SimpleStmt -> . IncDecStmt
    (242) SimpleStmt -> . Assignment
    (243) SimpleStmt -> . ShortVarDecl
    (244) SimpleStmt -> .
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (247) ExpressionStmt -> . Expression
    (248) SendStmt -> . Channel ARROW Expression
    (250) IncDecStmt -> . Expression IncDecOr
    (253) Assignment -> . ExpressionList assign_op ExpressionList
    (120) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (249) Channel -> . Expression
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

  ! reduce/reduce conflict for SEMICOLON resolved using rule 244 (SimpleStmt -> .)
    LEFT_BRACE      reduce using rule 292 (ForInternal -> .)
    RANGE           reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .)
    IDENT           shift and go to state 342
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    SEMICOLON       reduce using rule 244 (SimpleStmt -> .)
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

  ! SEMICOLON       [ reduce using rule 296 (InitStmtPlus -> .) ]

    ForInternal                    shift and go to state 344
    Condition                      shift and go to state 345
    ForClause                      shift and go to state 346
    RangeClause                    shift and go to state 347
    Expression                     shift and go to state 348
    InitStmtPlus                   shift and go to state 349
    ExpListAssignIdListDefOrPlus   shift and go to state 350
    UnaryExpr                      shift and go to state 123
    InitStmt                       shift and go to state 351
    ExpressionList                 shift and go to state 352
    IdentifierList                 shift and go to state 353
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    SimpleStmt                     shift and go to state 354
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    ExpressionStmt                 shift and go to state 261
    SendStmt                       shift and go to state 262
    IncDecStmt                     shift and go to state 263
    Assignment                     shift and go to state 264
    ShortVarDecl                   shift and go to state 265
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    Channel                        shift and go to state 280
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 278

    (327) DeferStmt -> DEFER . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Expression                     shift and go to state 355
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 279

    (246) Label -> IDENT .
    (96) IdentifierList -> IDENT . IdentStar
    (139) OperandName -> IDENT .
    (141) QualifiedIdent -> IDENT . PERIOD IDENT
    (21) TypeName -> IDENT .
    (97) IdentStar -> . COMMA IDENT IdentStar
    (98) IdentStar -> .

  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 21 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 21 (TypeName -> IDENT .)
  ! shift/reduce conflict for COMMA resolved as shift
    COLON           reduce using rule 246 (Label -> IDENT .)
    INCREMENT       reduce using rule 139 (OperandName -> IDENT .)
    DECREMENT       reduce using rule 139 (OperandName -> IDENT .)
    LOGICAL_OR      reduce using rule 139 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 139 (OperandName -> IDENT .)
    EQUAL           reduce using rule 139 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    ADD             reduce using rule 139 (OperandName -> IDENT .)
    SUBTRACT        reduce using rule 139 (OperandName -> IDENT .)
    OR              reduce using rule 139 (OperandName -> IDENT .)
    XOR             reduce using rule 139 (OperandName -> IDENT .)
    MULTIPLY        reduce using rule 139 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 139 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 139 (OperandName -> IDENT .)
    AND             reduce using rule 139 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 139 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 139 (OperandName -> IDENT .)
    ARROW           reduce using rule 139 (OperandName -> IDENT .)
    ASSIGNMENT      reduce using rule 139 (OperandName -> IDENT .)
    PERIOD          shift and go to state 117
    LEFT_PARENTHESIS reduce using rule 21 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 21 (TypeName -> IDENT .)
    COMMA           shift and go to state 88
    DEFINE          reduce using rule 98 (IdentStar -> .)

  ! PERIOD          [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 21 (TypeName -> IDENT .) ]

    IdentStar                      shift and go to state 87

state 280

    (248) SendStmt -> Channel . ARROW Expression

    ARROW           shift and go to state 356


state 281

    (253) Assignment -> ExpressionList . assign_op ExpressionList
    (254) assign_op -> . add_op_mul_op_or_plus ASSIGNMENT
    (255) add_op_mul_op_or_plus -> . add_op_mul_op_or
    (256) add_op_mul_op_or_plus -> .
    (257) add_op_mul_op_or -> . add_op
    (258) add_op_mul_op_or -> . mul_op
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    ASSIGNMENT      reduce using rule 256 (add_op_mul_op_or_plus -> .)
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    assign_op                      shift and go to state 357
    add_op_mul_op_or_plus          shift and go to state 358
    add_op_mul_op_or               shift and go to state 359
    add_op                         shift and go to state 360
    mul_op                         shift and go to state 361

state 282

    (120) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 362


state 283

    (268) ExprSwitchStmt -> SWITCH . SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (276) TypeSwitchStmt -> SWITCH . SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (260) SimpleStmtSemicolonPlus -> . SimpleStmt SEMICOLON
    (261) SimpleStmtSemicolonPlus -> .
    (239) SimpleStmt -> . ExpressionStmt
    (240) SimpleStmt -> . SendStmt
    (241) SimpleStmt -> . IncDecStmt
    (242) SimpleStmt -> . Assignment
    (243) SimpleStmt -> . ShortVarDecl
    (244) SimpleStmt -> .
    (247) ExpressionStmt -> . Expression
    (248) SendStmt -> . Channel ARROW Expression
    (250) IncDecStmt -> . Expression IncDecOr
    (253) Assignment -> . ExpressionList assign_op ExpressionList
    (120) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (249) Channel -> . Expression
    (99) ExpressionList -> . Expression ExpressionStar
    (96) IdentifierList -> . IDENT IdentStar
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    LEFT_BRACE      reduce using rule 261 (SimpleStmtSemicolonPlus -> .)
    SEMICOLON       reduce using rule 244 (SimpleStmt -> .)
    IDENT           shift and go to state 342
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

  ! IDENT           [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! ADD             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! NOT             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! XOR             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! AND             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! ARROW           [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! INT             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! FLOAT           [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! RUNE            [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! STRING          [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! FUNCTION        [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! STRUCT          [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! INTERFACE       [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! MAP             [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]
  ! CHAN            [ reduce using rule 261 (SimpleStmtSemicolonPlus -> .) ]

    SimpleStmtSemicolonPlus        shift and go to state 363
    SimpleStmt                     shift and go to state 341
    ExpressionStmt                 shift and go to state 261
    SendStmt                       shift and go to state 262
    IncDecStmt                     shift and go to state 263
    Assignment                     shift and go to state 264
    ShortVarDecl                   shift and go to state 265
    Expression                     shift and go to state 267
    Channel                        shift and go to state 280
    ExpressionList                 shift and go to state 281
    IdentifierList                 shift and go to state 282
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 284

    (145) LiteralType -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 364
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 285

    (31) ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .

    ASSIGNMENT      reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    SEMICOLON       reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    LEFT_BRACE      reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    RIGHT_PARENTHESIS reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    LEFT_PARENTHESIS reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    PERIOD          reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    COMMA           reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    LEFT_BRACKET    reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    RIGHT_BRACKET   reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    ADD             reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    SUBTRACT        reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    NOT             reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    XOR             reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    MULTIPLY        reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    AND             reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    ARROW           reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    IDENT           reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    INT             reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    FLOAT           reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    IMAGINARY       reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    RUNE            reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    STRING          reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    FUNCTION        reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    STRUCT          reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    INTERFACE       reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    MAP             reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    CHAN            reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)
    COLON           reduce using rule 31 (ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET Type .)


state 286

    (222) Conversion -> Type LEFT_PARENTHESIS Expression . COMMA RIGHT_PARENTHESIS
    (223) Conversion -> Type LEFT_PARENTHESIS Expression . RIGHT_PARENTHESIS
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    COMMA           shift and go to state 365
    RIGHT_PARENTHESIS shift and go to state 366
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 287

    (190) Expression -> Expression binary_op Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

  ! shift/reduce conflict for LOGICAL_OR resolved as shift
  ! shift/reduce conflict for LOGICAL_AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_EQUAL resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for QUOTIENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for SHIFT_LEFT resolved as shift
  ! shift/reduce conflict for SHIFT_RIGHT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    RIGHT_BRACKET   reduce using rule 190 (Expression -> Expression binary_op Expression .)
    COMMA           reduce using rule 190 (Expression -> Expression binary_op Expression .)
    SEMICOLON       reduce using rule 190 (Expression -> Expression binary_op Expression .)
    RIGHT_PARENTHESIS reduce using rule 190 (Expression -> Expression binary_op Expression .)
    INCREMENT       reduce using rule 190 (Expression -> Expression binary_op Expression .)
    DECREMENT       reduce using rule 190 (Expression -> Expression binary_op Expression .)
    ARROW           reduce using rule 190 (Expression -> Expression binary_op Expression .)
    ASSIGNMENT      reduce using rule 190 (Expression -> Expression binary_op Expression .)
    COLON           reduce using rule 190 (Expression -> Expression binary_op Expression .)
    LEFT_BRACE      reduce using rule 190 (Expression -> Expression binary_op Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

  ! LOGICAL_OR      [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! LOGICAL_AND     [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! EQUAL           [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! NOT_EQUAL       [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! LESS_THAN       [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! GREATER_THAN    [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! ADD             [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! SUBTRACT        [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! OR              [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! XOR             [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! MULTIPLY        [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! QUOTIENT        [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! REMAINDER       [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! AND             [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]
  ! AND_NOT         [ reduce using rule 190 (Expression -> Expression binary_op Expression .) ]

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 288

    (174) Selector -> PERIOD IDENT .

    PERIOD          reduce using rule 174 (Selector -> PERIOD IDENT .)
    LEFT_BRACKET    reduce using rule 174 (Selector -> PERIOD IDENT .)
    LEFT_PARENTHESIS reduce using rule 174 (Selector -> PERIOD IDENT .)
    LOGICAL_OR      reduce using rule 174 (Selector -> PERIOD IDENT .)
    LOGICAL_AND     reduce using rule 174 (Selector -> PERIOD IDENT .)
    EQUAL           reduce using rule 174 (Selector -> PERIOD IDENT .)
    NOT_EQUAL       reduce using rule 174 (Selector -> PERIOD IDENT .)
    LESS_THAN       reduce using rule 174 (Selector -> PERIOD IDENT .)
    LESS_THAN_EQUAL reduce using rule 174 (Selector -> PERIOD IDENT .)
    GREATER_THAN    reduce using rule 174 (Selector -> PERIOD IDENT .)
    GREATER_THAN_EQUAL reduce using rule 174 (Selector -> PERIOD IDENT .)
    ADD             reduce using rule 174 (Selector -> PERIOD IDENT .)
    SUBTRACT        reduce using rule 174 (Selector -> PERIOD IDENT .)
    OR              reduce using rule 174 (Selector -> PERIOD IDENT .)
    XOR             reduce using rule 174 (Selector -> PERIOD IDENT .)
    MULTIPLY        reduce using rule 174 (Selector -> PERIOD IDENT .)
    QUOTIENT        reduce using rule 174 (Selector -> PERIOD IDENT .)
    REMAINDER       reduce using rule 174 (Selector -> PERIOD IDENT .)
    SHIFT_LEFT      reduce using rule 174 (Selector -> PERIOD IDENT .)
    SHIFT_RIGHT     reduce using rule 174 (Selector -> PERIOD IDENT .)
    AND             reduce using rule 174 (Selector -> PERIOD IDENT .)
    AND_NOT         reduce using rule 174 (Selector -> PERIOD IDENT .)
    RIGHT_BRACKET   reduce using rule 174 (Selector -> PERIOD IDENT .)
    COMMA           reduce using rule 174 (Selector -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 174 (Selector -> PERIOD IDENT .)
    RIGHT_PARENTHESIS reduce using rule 174 (Selector -> PERIOD IDENT .)
    INCREMENT       reduce using rule 174 (Selector -> PERIOD IDENT .)
    DECREMENT       reduce using rule 174 (Selector -> PERIOD IDENT .)
    ARROW           reduce using rule 174 (Selector -> PERIOD IDENT .)
    ASSIGNMENT      reduce using rule 174 (Selector -> PERIOD IDENT .)
    COLON           reduce using rule 174 (Selector -> PERIOD IDENT .)
    LEFT_BRACE      reduce using rule 174 (Selector -> PERIOD IDENT .)


state 289

    (178) TypeAssertion -> PERIOD LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 367
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 290

    (175) Index -> LEFT_BRACKET Expression . RIGHT_BRACKET
    (190) Expression -> Expression . binary_op Expression
    (269) ExpressionPlus -> Expression .
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    RIGHT_BRACKET   shift and go to state 368
    COLON           reduce using rule 269 (ExpressionPlus -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 291

    (176) Slice -> LEFT_BRACKET ExpressionPlus . COLON ExpressionPlus RIGHT_BRACKET
    (177) Slice -> LEFT_BRACKET ExpressionPlus . COLON Expression COLON Expression RIGHT_BRACKET

    COLON           shift and go to state 369


state 292

    (179) Arguments -> LEFT_PARENTHESIS ArgumentsPlus . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 370


state 293

    (180) ArgumentsPlus -> ArgumentsInOr .

    RIGHT_PARENTHESIS reduce using rule 180 (ArgumentsPlus -> ArgumentsInOr .)


state 294

    (182) ArgumentsInOr -> ExpressionList .

    RIGHT_PARENTHESIS reduce using rule 182 (ArgumentsInOr -> ExpressionList .)


state 295

    (183) ArgumentsInOr -> Type . CommaExpressionListPlus
    (222) Conversion -> Type . LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> Type . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (188) ReceiverType -> Type .
    (184) CommaExpressionListPlus -> . COMMA ExpressionList
    (185) CommaExpressionListPlus -> . ExpressionList
    (186) CommaExpressionListPlus -> .
    (99) ExpressionList -> . Expression ExpressionStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 372
    PERIOD          reduce using rule 188 (ReceiverType -> Type .)
    COMMA           shift and go to state 373
    RIGHT_PARENTHESIS reduce using rule 186 (CommaExpressionListPlus -> .)
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Type                           shift and go to state 121
    CommaExpressionListPlus        shift and go to state 371
    Expression                     shift and go to state 175
    ExpressionList                 shift and go to state 374
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 296

    (44) PointerType -> MULTIPLY . BaseType
    (219) unary_op -> MULTIPLY .
    (45) BaseType -> . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             reduce using rule 219 (unary_op -> MULTIPLY .)
    SUBTRACT        reduce using rule 219 (unary_op -> MULTIPLY .)
    NOT             reduce using rule 219 (unary_op -> MULTIPLY .)
    XOR             reduce using rule 219 (unary_op -> MULTIPLY .)
    MULTIPLY        reduce using rule 219 (unary_op -> MULTIPLY .)
    AND             reduce using rule 219 (unary_op -> MULTIPLY .)
    ARROW           reduce using rule 219 (unary_op -> MULTIPLY .)
    LEFT_PARENTHESIS reduce using rule 219 (unary_op -> MULTIPLY .)
    IDENT           reduce using rule 219 (unary_op -> MULTIPLY .)
    INT             reduce using rule 219 (unary_op -> MULTIPLY .)
    FLOAT           reduce using rule 219 (unary_op -> MULTIPLY .)
    IMAGINARY       reduce using rule 219 (unary_op -> MULTIPLY .)
    RUNE            reduce using rule 219 (unary_op -> MULTIPLY .)
    STRING          reduce using rule 219 (unary_op -> MULTIPLY .)
    FUNCTION        reduce using rule 219 (unary_op -> MULTIPLY .)
    LEFT_BRACKET    reduce using rule 219 (unary_op -> MULTIPLY .)
    STRUCT          reduce using rule 219 (unary_op -> MULTIPLY .)
    INTERFACE       reduce using rule 219 (unary_op -> MULTIPLY .)
    MAP             reduce using rule 219 (unary_op -> MULTIPLY .)
    CHAN            reduce using rule 219 (unary_op -> MULTIPLY .)

  ! LEFT_PARENTHESIS [ shift and go to state 67 ]
  ! IDENT           [ shift and go to state 68 ]
  ! LEFT_BRACKET    [ shift and go to state 78 ]
  ! STRUCT          [ shift and go to state 79 ]
  ! MULTIPLY        [ shift and go to state 80 ]
  ! FUNCTION        [ shift and go to state 81 ]
  ! INTERFACE       [ shift and go to state 82 ]
  ! MAP             [ shift and go to state 83 ]
  ! CHAN            [ shift and go to state 85 ]
  ! ARROW           [ shift and go to state 86 ]

    BaseType                       shift and go to state 158
    Type                           shift and go to state 159
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 297

    (130) Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ADD             reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    OR              reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    XOR             reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND             reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COLON           reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)


state 298

    (46) FunctionType -> FUNCTION Signature .
    (165) FunctionLit -> FUNCTION Signature . FunctionBody
    (125) FunctionBody -> . Block
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    RIGHT_PARENTHESIS reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    LEFT_PARENTHESIS reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    PERIOD          reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    COMMA           reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    ADD             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    SUBTRACT        reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    NOT             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    XOR             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    MULTIPLY        reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    AND             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    ARROW           reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    IDENT           reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    INT             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    FLOAT           reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    IMAGINARY       reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    RUNE            reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    STRING          reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    FUNCTION        reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    LEFT_BRACKET    reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    STRUCT          reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    INTERFACE       reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    MAP             reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    CHAN            reduce using rule 46 (FunctionType -> FUNCTION Signature .)
    LEFT_BRACE      shift and go to state 101

    FunctionBody                   shift and go to state 310
    Block                          shift and go to state 100

state 299

    (187) MethodExpr -> ReceiverType PERIOD MethodName .

    PERIOD          reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LEFT_BRACKET    reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LEFT_PARENTHESIS reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LOGICAL_OR      reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LOGICAL_AND     reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    EQUAL           reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    NOT_EQUAL       reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LESS_THAN       reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LESS_THAN_EQUAL reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    GREATER_THAN    reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    GREATER_THAN_EQUAL reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ADD             reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SUBTRACT        reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    OR              reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    XOR             reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    MULTIPLY        reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    QUOTIENT        reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    REMAINDER       reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SHIFT_LEFT      reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SHIFT_RIGHT     reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    AND             reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    AND_NOT         reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    RIGHT_BRACKET   reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    COMMA           reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    SEMICOLON       reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    RIGHT_PARENTHESIS reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    INCREMENT       reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    DECREMENT       reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ARROW           reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    ASSIGNMENT      reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    COLON           reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)
    LEFT_BRACE      reduce using rule 187 (MethodExpr -> ReceiverType PERIOD MethodName .)


state 300

    (149) LiteralValue -> LEFT_BRACKET . ElementListPlus RIGHT_BRACKET
    (145) LiteralType -> LEFT_BRACKET . ELLIPSIS RIGHT_BRACKET Type
    (31) ArrayType -> LEFT_BRACKET . ArrayLength RIGHT_BRACKET Type
    (33) SliceType -> LEFT_BRACKET . RIGHT_BRACKET Type
    (150) ElementListPlus -> . ElementList
    (151) ElementListPlus -> . ElementList COMMA
    (152) ElementListPlus -> .
    (32) ArrayLength -> . Expression
    (153) ElementList -> . KeyedElement KeyedElementStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (156) KeyedElement -> . KeyPlus Element
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (157) KeyPlus -> . Key COLON
    (158) KeyPlus -> .
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (159) Key -> . FieldName
    (160) Key -> . Expression
    (161) Key -> . LiteralValue
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (162) FieldName -> . IDENT
    (149) LiteralValue -> . LEFT_BRACKET ElementListPlus RIGHT_BRACKET
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for RIGHT_BRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    ELLIPSIS        shift and go to state 186
    RIGHT_BRACKET   shift and go to state 120
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 309
    LEFT_BRACKET    shift and go to state 300
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

  ! RIGHT_BRACKET   [ reduce using rule 152 (ElementListPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 158 (KeyPlus -> .) ]
  ! ADD             [ reduce using rule 158 (KeyPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 158 (KeyPlus -> .) ]
  ! NOT             [ reduce using rule 158 (KeyPlus -> .) ]
  ! XOR             [ reduce using rule 158 (KeyPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 158 (KeyPlus -> .) ]
  ! AND             [ reduce using rule 158 (KeyPlus -> .) ]
  ! ARROW           [ reduce using rule 158 (KeyPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 158 (KeyPlus -> .) ]
  ! IDENT           [ reduce using rule 158 (KeyPlus -> .) ]
  ! INT             [ reduce using rule 158 (KeyPlus -> .) ]
  ! FLOAT           [ reduce using rule 158 (KeyPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 158 (KeyPlus -> .) ]
  ! RUNE            [ reduce using rule 158 (KeyPlus -> .) ]
  ! STRING          [ reduce using rule 158 (KeyPlus -> .) ]
  ! FUNCTION        [ reduce using rule 158 (KeyPlus -> .) ]
  ! STRUCT          [ reduce using rule 158 (KeyPlus -> .) ]
  ! INTERFACE       [ reduce using rule 158 (KeyPlus -> .) ]
  ! MAP             [ reduce using rule 158 (KeyPlus -> .) ]
  ! CHAN            [ reduce using rule 158 (KeyPlus -> .) ]

    ElementListPlus                shift and go to state 301
    Type                           shift and go to state 121
    ArrayLength                    shift and go to state 119
    ElementList                    shift and go to state 302
    Expression                     shift and go to state 375
    KeyedElement                   shift and go to state 303
    UnaryExpr                      shift and go to state 123
    KeyPlus                        shift and go to state 304
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Key                            shift and go to state 305
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    FieldName                      shift and go to state 306
    LiteralValue                   shift and go to state 308
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 301

    (149) LiteralValue -> LEFT_BRACKET ElementListPlus . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 376


state 302

    (150) ElementListPlus -> ElementList .
    (151) ElementListPlus -> ElementList . COMMA

    RIGHT_BRACKET   reduce using rule 150 (ElementListPlus -> ElementList .)
    COMMA           shift and go to state 377


state 303

    (153) ElementList -> KeyedElement . KeyedElementStar
    (154) KeyedElementStar -> . COMMA KeyedElement KeyedElementStar
    (155) KeyedElementStar -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 379
    RIGHT_BRACKET   reduce using rule 155 (KeyedElementStar -> .)

  ! COMMA           [ reduce using rule 155 (KeyedElementStar -> .) ]

    KeyedElementStar               shift and go to state 378

state 304

    (156) KeyedElement -> KeyPlus . Element
    (163) Element -> . Expression
    (164) Element -> . LiteralValue
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (149) LiteralValue -> . LEFT_BRACKET ElementListPlus RIGHT_BRACKET
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_BRACKET    shift and go to state 300
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Element                        shift and go to state 380
    Expression                     shift and go to state 381
    LiteralValue                   shift and go to state 382
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 305

    (157) KeyPlus -> Key . COLON

    COLON           shift and go to state 383


state 306

    (159) Key -> FieldName .

    COLON           reduce using rule 159 (Key -> FieldName .)


state 307

    (160) Key -> Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    COLON           reduce using rule 160 (Key -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 308

    (161) Key -> LiteralValue .

    COLON           reduce using rule 161 (Key -> LiteralValue .)


state 309

    (162) FieldName -> IDENT .
    (139) OperandName -> IDENT .
    (141) QualifiedIdent -> IDENT . PERIOD IDENT
    (21) TypeName -> IDENT .

  ! reduce/reduce conflict for COLON resolved using rule 139 (OperandName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 21 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 21 (TypeName -> IDENT .)
    LOGICAL_OR      reduce using rule 139 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 139 (OperandName -> IDENT .)
    EQUAL           reduce using rule 139 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    ADD             reduce using rule 139 (OperandName -> IDENT .)
    SUBTRACT        reduce using rule 139 (OperandName -> IDENT .)
    OR              reduce using rule 139 (OperandName -> IDENT .)
    XOR             reduce using rule 139 (OperandName -> IDENT .)
    MULTIPLY        reduce using rule 139 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 139 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 139 (OperandName -> IDENT .)
    AND             reduce using rule 139 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 139 (OperandName -> IDENT .)
    COLON           reduce using rule 139 (OperandName -> IDENT .)
    RIGHT_BRACKET   reduce using rule 139 (OperandName -> IDENT .)
    PERIOD          shift and go to state 117
    LEFT_PARENTHESIS reduce using rule 21 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 21 (TypeName -> IDENT .)

  ! COLON           [ reduce using rule 162 (FieldName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 21 (TypeName -> IDENT .) ]


state 310

    (165) FunctionLit -> FUNCTION Signature FunctionBody .

    PERIOD          reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LEFT_BRACKET    reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LEFT_PARENTHESIS reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LOGICAL_OR      reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LOGICAL_AND     reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    EQUAL           reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    NOT_EQUAL       reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LESS_THAN       reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LESS_THAN_EQUAL reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    GREATER_THAN    reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    GREATER_THAN_EQUAL reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    ADD             reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    SUBTRACT        reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    OR              reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    XOR             reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    MULTIPLY        reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    QUOTIENT        reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    REMAINDER       reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    SHIFT_LEFT      reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    SHIFT_RIGHT     reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    AND             reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    AND_NOT         reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    RIGHT_BRACKET   reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    COMMA           reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    SEMICOLON       reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    RIGHT_PARENTHESIS reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    INCREMENT       reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    DECREMENT       reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    ARROW           reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    ASSIGNMENT      reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    COLON           reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)
    LEFT_BRACE      reduce using rule 165 (FunctionLit -> FUNCTION Signature FunctionBody .)


state 311

    (34) StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .

    ASSIGNMENT      reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    SEMICOLON       reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    LEFT_BRACE      reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    RIGHT_PARENTHESIS reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    LEFT_PARENTHESIS reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    PERIOD          reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    COMMA           reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    RIGHT_BRACKET   reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    ADD             reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    SUBTRACT        reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    NOT             reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    XOR             reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    MULTIPLY        reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    AND             reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    ARROW           reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    IDENT           reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    INT             reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    FLOAT           reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    IMAGINARY       reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    RUNE            reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    STRING          reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    FUNCTION        reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    STRUCT          reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    INTERFACE       reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    MAP             reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    CHAN            reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)
    COLON           reduce using rule 34 (StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE .)


state 312

    (35) FieldDeclStar -> FieldDeclStar FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 384


state 313

    (37) FieldDecl -> IdentifierList . Type TagPlus
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 385
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 314

    (38) FieldDecl -> EmbeddedField . TagPlus
    (39) TagPlus -> . Tag
    (40) TagPlus -> .
    (43) Tag -> . STRING

    SEMICOLON       reduce using rule 40 (TagPlus -> .)
    STRING          shift and go to state 388

    TagPlus                        shift and go to state 386
    Tag                            shift and go to state 387

state 315

    (96) IdentifierList -> IDENT . IdentStar
    (21) TypeName -> IDENT .
    (141) QualifiedIdent -> IDENT . PERIOD IDENT
    (97) IdentStar -> . COMMA IDENT IdentStar
    (98) IdentStar -> .

    STRING          reduce using rule 21 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 21 (TypeName -> IDENT .)
    PERIOD          shift and go to state 117
    COMMA           shift and go to state 88
    LEFT_PARENTHESIS reduce using rule 98 (IdentStar -> .)
    IDENT           reduce using rule 98 (IdentStar -> .)
    LEFT_BRACKET    reduce using rule 98 (IdentStar -> .)
    STRUCT          reduce using rule 98 (IdentStar -> .)
    MULTIPLY        reduce using rule 98 (IdentStar -> .)
    FUNCTION        reduce using rule 98 (IdentStar -> .)
    INTERFACE       reduce using rule 98 (IdentStar -> .)
    MAP             reduce using rule 98 (IdentStar -> .)
    CHAN            reduce using rule 98 (IdentStar -> .)
    ARROW           reduce using rule 98 (IdentStar -> .)

    IdentStar                      shift and go to state 87

state 316

    (41) EmbeddedField -> MULTIPLY . TypeName
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (141) QualifiedIdent -> . IDENT PERIOD IDENT

    IDENT           shift and go to state 68

    TypeName                       shift and go to state 389
    QualifiedIdent                 shift and go to state 69

state 317

    (42) EmbeddedField -> TypeName .

    STRING          reduce using rule 42 (EmbeddedField -> TypeName .)
    SEMICOLON       reduce using rule 42 (EmbeddedField -> TypeName .)


state 318

    (63) InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .

    ASSIGNMENT      reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    SEMICOLON       reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    LEFT_BRACE      reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    RIGHT_PARENTHESIS reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    LEFT_PARENTHESIS reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    PERIOD          reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    COMMA           reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    RIGHT_BRACKET   reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    ADD             reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    SUBTRACT        reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    NOT             reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    XOR             reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    MULTIPLY        reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    AND             reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    ARROW           reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    IDENT           reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    INT             reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    FLOAT           reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    IMAGINARY       reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    RUNE            reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    STRING          reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    FUNCTION        reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    STRUCT          reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    INTERFACE       reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    MAP             reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    CHAN            reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)
    COLON           reduce using rule 63 (InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE .)


state 319

    (64) InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod . SEMICOLON

    SEMICOLON       shift and go to state 390


state 320

    (66) InterfaceTypeMethod -> MethodSpec .

    SEMICOLON       reduce using rule 66 (InterfaceTypeMethod -> MethodSpec .)


state 321

    (67) InterfaceTypeMethod -> InterfaceTypeName .

    SEMICOLON       reduce using rule 67 (InterfaceTypeMethod -> InterfaceTypeName .)


state 322

    (68) MethodSpec -> MethodName . Signature
    (47) Signature -> . Parameters ResultPlus
    (52) Parameters -> . LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 34

    Signature                      shift and go to state 391
    Parameters                     shift and go to state 53

state 323

    (70) InterfaceTypeName -> TypeName .

    SEMICOLON       reduce using rule 70 (InterfaceTypeName -> TypeName .)


state 324

    (69) MethodName -> IDENT .
    (21) TypeName -> IDENT .
    (141) QualifiedIdent -> IDENT . PERIOD IDENT

    LEFT_PARENTHESIS reduce using rule 69 (MethodName -> IDENT .)
    SEMICOLON       reduce using rule 21 (TypeName -> IDENT .)
    PERIOD          shift and go to state 117


state 325

    (71) MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET . Type
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 392
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 326

    (100) ExpressionStar -> COMMA Expression . ExpressionStar
    (190) Expression -> Expression . binary_op Expression
    (100) ExpressionStar -> . COMMA Expression ExpressionStar
    (101) ExpressionStar -> .
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for QUOTIENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for SHIFT_LEFT resolved as shift
  ! shift/reduce conflict for SHIFT_RIGHT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    COMMA           shift and go to state 242
    SEMICOLON       reduce using rule 101 (ExpressionStar -> .)
    RIGHT_PARENTHESIS reduce using rule 101 (ExpressionStar -> .)
    LEFT_BRACE      reduce using rule 101 (ExpressionStar -> .)
    COLON           reduce using rule 101 (ExpressionStar -> .)
    ASSIGNMENT      reduce using rule 101 (ExpressionStar -> .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

  ! ADD             [ reduce using rule 101 (ExpressionStar -> .) ]
  ! SUBTRACT        [ reduce using rule 101 (ExpressionStar -> .) ]
  ! OR              [ reduce using rule 101 (ExpressionStar -> .) ]
  ! XOR             [ reduce using rule 101 (ExpressionStar -> .) ]
  ! MULTIPLY        [ reduce using rule 101 (ExpressionStar -> .) ]
  ! QUOTIENT        [ reduce using rule 101 (ExpressionStar -> .) ]
  ! REMAINDER       [ reduce using rule 101 (ExpressionStar -> .) ]
  ! SHIFT_LEFT      [ reduce using rule 101 (ExpressionStar -> .) ]
  ! SHIFT_RIGHT     [ reduce using rule 101 (ExpressionStar -> .) ]
  ! AND             [ reduce using rule 101 (ExpressionStar -> .) ]
  ! AND_NOT         [ reduce using rule 101 (ExpressionStar -> .) ]

    ExpressionStar                 shift and go to state 393
    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 327

    (78) StatementList -> StatementList Statement SEMICOLON .

    RIGHT_BRACE     reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    GO              reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    RETURN          reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    BREAK           reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    CONTINUE        reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    GOTO            reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    FALLTHROUGH     reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    LEFT_BRACE      reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    IF              reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    SELECT          reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    FOR             reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    DEFER           reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    CONST           reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    TYPE            reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    VARIABLE        reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    IDENT           reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    SWITCH          reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    ADD             reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    SUBTRACT        reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    NOT             reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    XOR             reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    MULTIPLY        reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    AND             reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    ARROW           reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    INT             reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    FLOAT           reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    IMAGINARY       reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    RUNE            reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    STRING          reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    FUNCTION        reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    LEFT_BRACKET    reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    STRUCT          reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    INTERFACE       reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    MAP             reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    CHAN            reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    SEMICOLON       reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    CASE            reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)
    DEFAULT         reduce using rule 78 (StatementList -> StatementList Statement SEMICOLON .)


state 328

    (245) LabeledStmt -> Label COLON . Statement
    (224) Statement -> . Declaration
    (225) Statement -> . LabeledStmt
    (226) Statement -> . SimpleStmt
    (227) Statement -> . GoStmt
    (228) Statement -> . ReturnStmt
    (229) Statement -> . BreakStmt
    (230) Statement -> . ContinueStmt
    (231) Statement -> . GotoStmt
    (232) Statement -> . FallthroughStmt
    (233) Statement -> . Block
    (234) Statement -> . IfStmt
    (235) Statement -> . SwitchStmt
    (236) Statement -> . SelectStmt
    (237) Statement -> . ForStmt
    (238) Statement -> . DeferStmt
    (80) Declaration -> . ConstDecl
    (81) Declaration -> . TypeDecl
    (82) Declaration -> . VarDecl
    (245) LabeledStmt -> . Label COLON Statement
    (239) SimpleStmt -> . ExpressionStmt
    (240) SimpleStmt -> . SendStmt
    (241) SimpleStmt -> . IncDecStmt
    (242) SimpleStmt -> . Assignment
    (243) SimpleStmt -> . ShortVarDecl
    (244) SimpleStmt -> .
    (307) GoStmt -> . GO Expression
    (318) ReturnStmt -> . RETURN ExpressionListPlus
    (321) BreakStmt -> . BREAK LabelPlus
    (324) ContinueStmt -> . CONTINUE LabelPlus
    (325) GotoStmt -> . GOTO Label
    (326) FallthroughStmt -> . FALLTHROUGH
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (259) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (266) SwitchStmt -> . ExprSwitchStmt
    (267) SwitchStmt -> . TypeSwitchStmt
    (308) SelectStmt -> . SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
    (288) ForStmt -> . FOR ForInternal Block
    (327) DeferStmt -> . DEFER Expression
    (86) ConstDecl -> . CONST ConstSpecOr
    (102) TypeDecl -> . TYPE TypeSpecOr
    (111) VarDecl -> . VARIABLE VarSpec
    (112) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (246) Label -> . IDENT
    (247) ExpressionStmt -> . Expression
    (248) SendStmt -> . Channel ARROW Expression
    (250) IncDecStmt -> . Expression IncDecOr
    (253) Assignment -> . ExpressionList assign_op ExpressionList
    (120) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (268) ExprSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (276) TypeSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (249) Channel -> . Expression
    (99) ExpressionList -> . Expression ExpressionStar
    (96) IdentifierList -> . IDENT IdentStar
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    SEMICOLON       reduce using rule 244 (SimpleStmt -> .)
    GO              shift and go to state 266
    RETURN          shift and go to state 268
    BREAK           shift and go to state 269
    CONTINUE        shift and go to state 270
    GOTO            shift and go to state 271
    FALLTHROUGH     shift and go to state 272
    LEFT_BRACE      shift and go to state 101
    IF              shift and go to state 273
    SELECT          shift and go to state 276
    FOR             shift and go to state 277
    DEFER           shift and go to state 278
    CONST           shift and go to state 18
    TYPE            shift and go to state 19
    VARIABLE        shift and go to state 20
    IDENT           shift and go to state 279
    SWITCH          shift and go to state 283
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Label                          shift and go to state 260
    Statement                      shift and go to state 394
    Declaration                    shift and go to state 245
    LabeledStmt                    shift and go to state 246
    SimpleStmt                     shift and go to state 247
    GoStmt                         shift and go to state 248
    ReturnStmt                     shift and go to state 249
    BreakStmt                      shift and go to state 250
    ContinueStmt                   shift and go to state 251
    GotoStmt                       shift and go to state 252
    FallthroughStmt                shift and go to state 253
    Block                          shift and go to state 254
    IfStmt                         shift and go to state 255
    SwitchStmt                     shift and go to state 256
    SelectStmt                     shift and go to state 257
    ForStmt                        shift and go to state 258
    DeferStmt                      shift and go to state 259
    ConstDecl                      shift and go to state 14
    TypeDecl                       shift and go to state 15
    VarDecl                        shift and go to state 16
    ExpressionStmt                 shift and go to state 261
    SendStmt                       shift and go to state 262
    IncDecStmt                     shift and go to state 263
    Assignment                     shift and go to state 264
    ShortVarDecl                   shift and go to state 265
    Expression                     shift and go to state 267
    ExprSwitchStmt                 shift and go to state 274
    TypeSwitchStmt                 shift and go to state 275
    Channel                        shift and go to state 280
    ExpressionList                 shift and go to state 281
    IdentifierList                 shift and go to state 282
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 329

    (307) GoStmt -> GO Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    SEMICOLON       reduce using rule 307 (GoStmt -> GO Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 330

    (250) IncDecStmt -> Expression IncDecOr .

    SEMICOLON       reduce using rule 250 (IncDecStmt -> Expression IncDecOr .)
    LEFT_BRACE      reduce using rule 250 (IncDecStmt -> Expression IncDecOr .)


state 331

    (251) IncDecOr -> INCREMENT .

    SEMICOLON       reduce using rule 251 (IncDecOr -> INCREMENT .)
    LEFT_BRACE      reduce using rule 251 (IncDecOr -> INCREMENT .)


state 332

    (252) IncDecOr -> DECREMENT .

    SEMICOLON       reduce using rule 252 (IncDecOr -> DECREMENT .)
    LEFT_BRACE      reduce using rule 252 (IncDecOr -> DECREMENT .)


state 333

    (318) ReturnStmt -> RETURN ExpressionListPlus .

    SEMICOLON       reduce using rule 318 (ReturnStmt -> RETURN ExpressionListPlus .)


state 334

    (319) ExpressionListPlus -> ExpressionList .

    SEMICOLON       reduce using rule 319 (ExpressionListPlus -> ExpressionList .)


state 335

    (321) BreakStmt -> BREAK LabelPlus .

    SEMICOLON       reduce using rule 321 (BreakStmt -> BREAK LabelPlus .)


state 336

    (322) LabelPlus -> Label .

    SEMICOLON       reduce using rule 322 (LabelPlus -> Label .)


state 337

    (246) Label -> IDENT .

    SEMICOLON       reduce using rule 246 (Label -> IDENT .)


state 338

    (324) ContinueStmt -> CONTINUE LabelPlus .

    SEMICOLON       reduce using rule 324 (ContinueStmt -> CONTINUE LabelPlus .)


state 339

    (325) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 325 (GotoStmt -> GOTO Label .)


state 340

    (259) IfStmt -> IF SimpleStmtSemicolonPlus . Expression Block ElsePlus
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Expression                     shift and go to state 395
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 341

    (260) SimpleStmtSemicolonPlus -> SimpleStmt . SEMICOLON

    SEMICOLON       shift and go to state 396


state 342

    (96) IdentifierList -> IDENT . IdentStar
    (139) OperandName -> IDENT .
    (141) QualifiedIdent -> IDENT . PERIOD IDENT
    (21) TypeName -> IDENT .
    (97) IdentStar -> . COMMA IDENT IdentStar
    (98) IdentStar -> .

  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 21 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 21 (TypeName -> IDENT .)
  ! shift/reduce conflict for COMMA resolved as shift
    INCREMENT       reduce using rule 139 (OperandName -> IDENT .)
    DECREMENT       reduce using rule 139 (OperandName -> IDENT .)
    LOGICAL_OR      reduce using rule 139 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 139 (OperandName -> IDENT .)
    EQUAL           reduce using rule 139 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    ADD             reduce using rule 139 (OperandName -> IDENT .)
    SUBTRACT        reduce using rule 139 (OperandName -> IDENT .)
    OR              reduce using rule 139 (OperandName -> IDENT .)
    XOR             reduce using rule 139 (OperandName -> IDENT .)
    MULTIPLY        reduce using rule 139 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 139 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 139 (OperandName -> IDENT .)
    AND             reduce using rule 139 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 139 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 139 (OperandName -> IDENT .)
    ARROW           reduce using rule 139 (OperandName -> IDENT .)
    ASSIGNMENT      reduce using rule 139 (OperandName -> IDENT .)
    LEFT_BRACE      reduce using rule 139 (OperandName -> IDENT .)
    PERIOD          shift and go to state 117
    LEFT_PARENTHESIS reduce using rule 21 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 21 (TypeName -> IDENT .)
    COMMA           shift and go to state 88
    DEFINE          reduce using rule 98 (IdentStar -> .)

  ! PERIOD          [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 21 (TypeName -> IDENT .) ]

    IdentStar                      shift and go to state 87

state 343

    (308) SelectStmt -> SELECT LEFT_BRACE . CommClausePlus RIGHT_BRACE
    (309) CommClausePlus -> . CommClausePlus CommClause
    (310) CommClausePlus -> .

    RIGHT_BRACE     reduce using rule 310 (CommClausePlus -> .)
    CASE            reduce using rule 310 (CommClausePlus -> .)
    DEFAULT         reduce using rule 310 (CommClausePlus -> .)

    CommClausePlus                 shift and go to state 397

state 344

    (288) ForStmt -> FOR ForInternal . Block
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    LEFT_BRACE      shift and go to state 101

    Block                          shift and go to state 398

state 345

    (289) ForInternal -> Condition .

    LEFT_BRACE      reduce using rule 289 (ForInternal -> Condition .)


state 346

    (290) ForInternal -> ForClause .

    LEFT_BRACE      reduce using rule 290 (ForInternal -> ForClause .)


state 347

    (291) ForInternal -> RangeClause .

    LEFT_BRACE      reduce using rule 291 (ForInternal -> RangeClause .)


state 348

    (293) Condition -> Expression .
    (190) Expression -> Expression . binary_op Expression
    (99) ExpressionList -> Expression . ExpressionStar
    (247) ExpressionStmt -> Expression .
    (250) IncDecStmt -> Expression . IncDecOr
    (249) Channel -> Expression .
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (100) ExpressionStar -> . COMMA Expression ExpressionStar
    (101) ExpressionStar -> .
    (251) IncDecOr -> . INCREMENT
    (252) IncDecOr -> . DECREMENT
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for QUOTIENT resolved as shift
  ! shift/reduce conflict for REMAINDER resolved as shift
  ! shift/reduce conflict for SHIFT_LEFT resolved as shift
  ! shift/reduce conflict for SHIFT_RIGHT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    LEFT_BRACE      reduce using rule 293 (Condition -> Expression .)
    SEMICOLON       reduce using rule 247 (ExpressionStmt -> Expression .)
    ARROW           reduce using rule 249 (Channel -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    COMMA           shift and go to state 242
    ASSIGNMENT      reduce using rule 101 (ExpressionStar -> .)
    INCREMENT       shift and go to state 331
    DECREMENT       shift and go to state 332
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

  ! ADD             [ reduce using rule 101 (ExpressionStar -> .) ]
  ! SUBTRACT        [ reduce using rule 101 (ExpressionStar -> .) ]
  ! OR              [ reduce using rule 101 (ExpressionStar -> .) ]
  ! XOR             [ reduce using rule 101 (ExpressionStar -> .) ]
  ! MULTIPLY        [ reduce using rule 101 (ExpressionStar -> .) ]
  ! QUOTIENT        [ reduce using rule 101 (ExpressionStar -> .) ]
  ! REMAINDER       [ reduce using rule 101 (ExpressionStar -> .) ]
  ! SHIFT_LEFT      [ reduce using rule 101 (ExpressionStar -> .) ]
  ! SHIFT_RIGHT     [ reduce using rule 101 (ExpressionStar -> .) ]
  ! AND             [ reduce using rule 101 (ExpressionStar -> .) ]
  ! AND_NOT         [ reduce using rule 101 (ExpressionStar -> .) ]

    binary_op                      shift and go to state 190
    ExpressionStar                 shift and go to state 241
    IncDecOr                       shift and go to state 330
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 349

    (294) ForClause -> InitStmtPlus . SEMICOLON ConditionPlus SEMICOLON PostStmtPlus

    SEMICOLON       shift and go to state 399


state 350

    (303) RangeClause -> ExpListAssignIdListDefOrPlus . RANGE Expression

    RANGE           shift and go to state 400


state 351

    (295) InitStmtPlus -> InitStmt .

    SEMICOLON       reduce using rule 295 (InitStmtPlus -> InitStmt .)


state 352

    (304) ExpListAssignIdListDefOrPlus -> ExpressionList . ASSIGNMENT
    (253) Assignment -> ExpressionList . assign_op ExpressionList
    (254) assign_op -> . add_op_mul_op_or_plus ASSIGNMENT
    (255) add_op_mul_op_or_plus -> . add_op_mul_op_or
    (256) add_op_mul_op_or_plus -> .
    (257) add_op_mul_op_or -> . add_op
    (258) add_op_mul_op_or -> . mul_op
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

  ! shift/reduce conflict for ASSIGNMENT resolved as shift
    ASSIGNMENT      shift and go to state 401
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

  ! ASSIGNMENT      [ reduce using rule 256 (add_op_mul_op_or_plus -> .) ]

    assign_op                      shift and go to state 357
    add_op_mul_op_or_plus          shift and go to state 358
    add_op_mul_op_or               shift and go to state 359
    add_op                         shift and go to state 360
    mul_op                         shift and go to state 361

state 353

    (305) ExpListAssignIdListDefOrPlus -> IdentifierList . DEFINE
    (120) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 402


state 354

    (301) InitStmt -> SimpleStmt .

    SEMICOLON       reduce using rule 301 (InitStmt -> SimpleStmt .)


state 355

    (327) DeferStmt -> DEFER Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    SEMICOLON       reduce using rule 327 (DeferStmt -> DEFER Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 356

    (248) SendStmt -> Channel ARROW . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Expression                     shift and go to state 403
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 357

    (253) Assignment -> ExpressionList assign_op . ExpressionList
    (99) ExpressionList -> . Expression ExpressionStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ExpressionList                 shift and go to state 404
    Expression                     shift and go to state 175
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 358

    (254) assign_op -> add_op_mul_op_or_plus . ASSIGNMENT

    ASSIGNMENT      shift and go to state 405


state 359

    (255) add_op_mul_op_or_plus -> add_op_mul_op_or .

    ASSIGNMENT      reduce using rule 255 (add_op_mul_op_or_plus -> add_op_mul_op_or .)


state 360

    (257) add_op_mul_op_or -> add_op .

    ASSIGNMENT      reduce using rule 257 (add_op_mul_op_or -> add_op .)


state 361

    (258) add_op_mul_op_or -> mul_op .

    ASSIGNMENT      reduce using rule 258 (add_op_mul_op_or -> mul_op .)


state 362

    (120) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (99) ExpressionList -> . Expression ExpressionStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ExpressionList                 shift and go to state 406
    Expression                     shift and go to state 175
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 363

    (268) ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus . ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (276) TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus . TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (269) ExpressionPlus -> . Expression
    (270) ExpressionPlus -> .
    (279) TypeSwitchGuard -> . IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (280) IdentDefinePlus -> . IDENT DEFINE
    (281) IdentDefinePlus -> .
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    LEFT_BRACE      reduce using rule 270 (ExpressionPlus -> .)
    IDENT           shift and go to state 411
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

  ! LEFT_PARENTHESIS [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! IDENT           [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! INT             [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! FLOAT           [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! IMAGINARY       [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! RUNE            [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! STRING          [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! FUNCTION        [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! STRUCT          [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! MULTIPLY        [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! INTERFACE       [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! MAP             [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! CHAN            [ reduce using rule 281 (IdentDefinePlus -> .) ]
  ! ARROW           [ reduce using rule 281 (IdentDefinePlus -> .) ]

    ExpressionPlus                 shift and go to state 407
    TypeSwitchGuard                shift and go to state 408
    Expression                     shift and go to state 409
    IdentDefinePlus                shift and go to state 410
    PrimaryExpr                    shift and go to state 124
    UnaryExpr                      shift and go to state 123
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 364

    (145) LiteralType -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type .

    LEFT_BRACKET    reduce using rule 145 (LiteralType -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type .)


state 365

    (222) Conversion -> Type LEFT_PARENTHESIS Expression COMMA . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 412


state 366

    (223) Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ADD             reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    OR              reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    XOR             reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND             reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COLON           reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)


state 367

    (178) TypeAssertion -> PERIOD LEFT_PARENTHESIS Type . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 413


state 368

    (175) Index -> LEFT_BRACKET Expression RIGHT_BRACKET .

    PERIOD          reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LOGICAL_OR      reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LOGICAL_AND     reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    EQUAL           reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    ADD             reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SUBTRACT        reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    OR              reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    XOR             reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    MULTIPLY        reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    QUOTIENT        reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    REMAINDER       reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SHIFT_LEFT      reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SHIFT_RIGHT     reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    AND             reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    AND_NOT         reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    COMMA           reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    INCREMENT       reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    DECREMENT       reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    ARROW           reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    COLON           reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 175 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)


state 369

    (176) Slice -> LEFT_BRACKET ExpressionPlus COLON . ExpressionPlus RIGHT_BRACKET
    (177) Slice -> LEFT_BRACKET ExpressionPlus COLON . Expression COLON Expression RIGHT_BRACKET
    (269) ExpressionPlus -> . Expression
    (270) ExpressionPlus -> .
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACKET   reduce using rule 270 (ExpressionPlus -> .)
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ExpressionPlus                 shift and go to state 414
    Expression                     shift and go to state 415
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 370

    (179) Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    ADD             reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    OR              reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    XOR             reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    AND             reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    COLON           reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 179 (Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS .)


state 371

    (183) ArgumentsInOr -> Type CommaExpressionListPlus .

    RIGHT_PARENTHESIS reduce using rule 183 (ArgumentsInOr -> Type CommaExpressionListPlus .)


state 372

    (222) Conversion -> Type LEFT_PARENTHESIS . Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> Type LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (130) Operand -> LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (20) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName

    LEFT_PARENTHESIS shift and go to state 222
    IDENT           shift and go to state 225
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_BRACKET    shift and go to state 227
    STRUCT          shift and go to state 79
    FUNCTION        shift and go to state 228
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150

    Type                           shift and go to state 224
    Expression                     shift and go to state 416
    UnaryExpr                      shift and go to state 123
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    QualifiedIdent                 shift and go to state 226
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    ChannelTypeOr                  shift and go to state 84
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    LiteralType                    shift and go to state 151

state 373

    (184) CommaExpressionListPlus -> COMMA . ExpressionList
    (99) ExpressionList -> . Expression ExpressionStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ExpressionList                 shift and go to state 417
    Expression                     shift and go to state 175
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 374

    (185) CommaExpressionListPlus -> ExpressionList .

    RIGHT_PARENTHESIS reduce using rule 185 (CommaExpressionListPlus -> ExpressionList .)


state 375

    (32) ArrayLength -> Expression .
    (190) Expression -> Expression . binary_op Expression
    (160) Key -> Expression .
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    RIGHT_BRACKET   reduce using rule 32 (ArrayLength -> Expression .)
    COLON           reduce using rule 160 (Key -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 376

    (149) LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .

    PERIOD          reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LOGICAL_OR      reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LOGICAL_AND     reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    EQUAL           reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    ADD             reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    SUBTRACT        reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    OR              reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    XOR             reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    MULTIPLY        reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    QUOTIENT        reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    REMAINDER       reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    SHIFT_LEFT      reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    SHIFT_RIGHT     reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    AND             reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    AND_NOT         reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    COMMA           reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    INCREMENT       reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    DECREMENT       reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    ARROW           reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    COLON           reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 149 (LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET .)


state 377

    (151) ElementListPlus -> ElementList COMMA .

    RIGHT_BRACKET   reduce using rule 151 (ElementListPlus -> ElementList COMMA .)


state 378

    (153) ElementList -> KeyedElement KeyedElementStar .

    COMMA           reduce using rule 153 (ElementList -> KeyedElement KeyedElementStar .)
    RIGHT_BRACKET   reduce using rule 153 (ElementList -> KeyedElement KeyedElementStar .)


state 379

    (154) KeyedElementStar -> COMMA . KeyedElement KeyedElementStar
    (156) KeyedElement -> . KeyPlus Element
    (157) KeyPlus -> . Key COLON
    (158) KeyPlus -> .
    (159) Key -> . FieldName
    (160) Key -> . Expression
    (161) Key -> . LiteralValue
    (162) FieldName -> . IDENT
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (149) LiteralValue -> . LEFT_BRACKET ElementListPlus RIGHT_BRACKET
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    IDENT           shift and go to state 309
    LEFT_BRACKET    shift and go to state 300
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

  ! LEFT_BRACKET    [ reduce using rule 158 (KeyPlus -> .) ]
  ! ADD             [ reduce using rule 158 (KeyPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 158 (KeyPlus -> .) ]
  ! NOT             [ reduce using rule 158 (KeyPlus -> .) ]
  ! XOR             [ reduce using rule 158 (KeyPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 158 (KeyPlus -> .) ]
  ! AND             [ reduce using rule 158 (KeyPlus -> .) ]
  ! ARROW           [ reduce using rule 158 (KeyPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 158 (KeyPlus -> .) ]
  ! IDENT           [ reduce using rule 158 (KeyPlus -> .) ]
  ! INT             [ reduce using rule 158 (KeyPlus -> .) ]
  ! FLOAT           [ reduce using rule 158 (KeyPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 158 (KeyPlus -> .) ]
  ! RUNE            [ reduce using rule 158 (KeyPlus -> .) ]
  ! STRING          [ reduce using rule 158 (KeyPlus -> .) ]
  ! FUNCTION        [ reduce using rule 158 (KeyPlus -> .) ]
  ! STRUCT          [ reduce using rule 158 (KeyPlus -> .) ]
  ! INTERFACE       [ reduce using rule 158 (KeyPlus -> .) ]
  ! MAP             [ reduce using rule 158 (KeyPlus -> .) ]
  ! CHAN            [ reduce using rule 158 (KeyPlus -> .) ]

    KeyedElement                   shift and go to state 418
    KeyPlus                        shift and go to state 304
    Key                            shift and go to state 305
    FieldName                      shift and go to state 306
    Expression                     shift and go to state 307
    LiteralValue                   shift and go to state 308
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 380

    (156) KeyedElement -> KeyPlus Element .

    COMMA           reduce using rule 156 (KeyedElement -> KeyPlus Element .)
    RIGHT_BRACKET   reduce using rule 156 (KeyedElement -> KeyPlus Element .)


state 381

    (163) Element -> Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    COMMA           reduce using rule 163 (Element -> Expression .)
    RIGHT_BRACKET   reduce using rule 163 (Element -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 382

    (164) Element -> LiteralValue .

    COMMA           reduce using rule 164 (Element -> LiteralValue .)
    RIGHT_BRACKET   reduce using rule 164 (Element -> LiteralValue .)


state 383

    (157) KeyPlus -> Key COLON .

    LEFT_BRACKET    reduce using rule 157 (KeyPlus -> Key COLON .)
    ADD             reduce using rule 157 (KeyPlus -> Key COLON .)
    SUBTRACT        reduce using rule 157 (KeyPlus -> Key COLON .)
    NOT             reduce using rule 157 (KeyPlus -> Key COLON .)
    XOR             reduce using rule 157 (KeyPlus -> Key COLON .)
    MULTIPLY        reduce using rule 157 (KeyPlus -> Key COLON .)
    AND             reduce using rule 157 (KeyPlus -> Key COLON .)
    ARROW           reduce using rule 157 (KeyPlus -> Key COLON .)
    LEFT_PARENTHESIS reduce using rule 157 (KeyPlus -> Key COLON .)
    IDENT           reduce using rule 157 (KeyPlus -> Key COLON .)
    INT             reduce using rule 157 (KeyPlus -> Key COLON .)
    FLOAT           reduce using rule 157 (KeyPlus -> Key COLON .)
    IMAGINARY       reduce using rule 157 (KeyPlus -> Key COLON .)
    RUNE            reduce using rule 157 (KeyPlus -> Key COLON .)
    STRING          reduce using rule 157 (KeyPlus -> Key COLON .)
    FUNCTION        reduce using rule 157 (KeyPlus -> Key COLON .)
    STRUCT          reduce using rule 157 (KeyPlus -> Key COLON .)
    INTERFACE       reduce using rule 157 (KeyPlus -> Key COLON .)
    MAP             reduce using rule 157 (KeyPlus -> Key COLON .)
    CHAN            reduce using rule 157 (KeyPlus -> Key COLON .)


state 384

    (35) FieldDeclStar -> FieldDeclStar FieldDecl SEMICOLON .

    RIGHT_BRACE     reduce using rule 35 (FieldDeclStar -> FieldDeclStar FieldDecl SEMICOLON .)
    IDENT           reduce using rule 35 (FieldDeclStar -> FieldDeclStar FieldDecl SEMICOLON .)
    MULTIPLY        reduce using rule 35 (FieldDeclStar -> FieldDeclStar FieldDecl SEMICOLON .)


state 385

    (37) FieldDecl -> IdentifierList Type . TagPlus
    (39) TagPlus -> . Tag
    (40) TagPlus -> .
    (43) Tag -> . STRING

    SEMICOLON       reduce using rule 40 (TagPlus -> .)
    STRING          shift and go to state 388

    TagPlus                        shift and go to state 419
    Tag                            shift and go to state 387

state 386

    (38) FieldDecl -> EmbeddedField TagPlus .

    SEMICOLON       reduce using rule 38 (FieldDecl -> EmbeddedField TagPlus .)


state 387

    (39) TagPlus -> Tag .

    SEMICOLON       reduce using rule 39 (TagPlus -> Tag .)


state 388

    (43) Tag -> STRING .

    SEMICOLON       reduce using rule 43 (Tag -> STRING .)


state 389

    (41) EmbeddedField -> MULTIPLY TypeName .

    STRING          reduce using rule 41 (EmbeddedField -> MULTIPLY TypeName .)
    SEMICOLON       reduce using rule 41 (EmbeddedField -> MULTIPLY TypeName .)


state 390

    (64) InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod SEMICOLON .

    RIGHT_BRACE     reduce using rule 64 (InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod SEMICOLON .)
    IDENT           reduce using rule 64 (InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod SEMICOLON .)


state 391

    (68) MethodSpec -> MethodName Signature .

    SEMICOLON       reduce using rule 68 (MethodSpec -> MethodName Signature .)


state 392

    (71) MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .

    ASSIGNMENT      reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    SEMICOLON       reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    LEFT_BRACE      reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    RIGHT_PARENTHESIS reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    LEFT_PARENTHESIS reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    PERIOD          reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    COMMA           reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    LEFT_BRACKET    reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    RIGHT_BRACKET   reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    ADD             reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    SUBTRACT        reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    NOT             reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    XOR             reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    MULTIPLY        reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    AND             reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    ARROW           reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    IDENT           reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    INT             reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    FLOAT           reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    IMAGINARY       reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    RUNE            reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    STRING          reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    FUNCTION        reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    STRUCT          reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    INTERFACE       reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    MAP             reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    CHAN            reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)
    COLON           reduce using rule 71 (MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type .)


state 393

    (100) ExpressionStar -> COMMA Expression ExpressionStar .

    SEMICOLON       reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    RIGHT_PARENTHESIS reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    LEFT_BRACE      reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    COLON           reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    ADD             reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    SUBTRACT        reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    OR              reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    XOR             reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    MULTIPLY        reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    QUOTIENT        reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    REMAINDER       reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    SHIFT_LEFT      reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    SHIFT_RIGHT     reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    AND             reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    AND_NOT         reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)
    ASSIGNMENT      reduce using rule 100 (ExpressionStar -> COMMA Expression ExpressionStar .)


state 394

    (245) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 245 (LabeledStmt -> Label COLON Statement .)


state 395

    (259) IfStmt -> IF SimpleStmtSemicolonPlus Expression . Block ElsePlus
    (190) Expression -> Expression . binary_op Expression
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    LEFT_BRACE      shift and go to state 101
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    Block                          shift and go to state 420
    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 396

    (260) SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .

    ADD             reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    SUBTRACT        reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    NOT             reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    XOR             reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    MULTIPLY        reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    AND             reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    ARROW           reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    IDENT           reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    INT             reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    FLOAT           reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    IMAGINARY       reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    RUNE            reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    STRING          reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    FUNCTION        reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    LEFT_BRACKET    reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    STRUCT          reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    INTERFACE       reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    MAP             reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    CHAN            reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)
    LEFT_BRACE      reduce using rule 260 (SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON .)


state 397

    (308) SelectStmt -> SELECT LEFT_BRACE CommClausePlus . RIGHT_BRACE
    (309) CommClausePlus -> CommClausePlus . CommClause
    (311) CommClause -> . CommCase COLON StatementList
    (312) CommCase -> . CASE SentStmtRecvStmtOr
    (313) CommCase -> . DEFAULT

    RIGHT_BRACE     shift and go to state 421
    CASE            shift and go to state 424
    DEFAULT         shift and go to state 425

    CommClause                     shift and go to state 422
    CommCase                       shift and go to state 423

state 398

    (288) ForStmt -> FOR ForInternal Block .

    SEMICOLON       reduce using rule 288 (ForStmt -> FOR ForInternal Block .)


state 399

    (294) ForClause -> InitStmtPlus SEMICOLON . ConditionPlus SEMICOLON PostStmtPlus
    (297) ConditionPlus -> . Condition
    (298) ConditionPlus -> .
    (293) Condition -> . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    SEMICOLON       reduce using rule 298 (ConditionPlus -> .)
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ConditionPlus                  shift and go to state 426
    Condition                      shift and go to state 427
    Expression                     shift and go to state 428
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 400

    (303) RangeClause -> ExpListAssignIdListDefOrPlus RANGE . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Expression                     shift and go to state 429
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 401

    (304) ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .

    RANGE           reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    ADD             reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    SUBTRACT        reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    NOT             reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    XOR             reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    MULTIPLY        reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    AND             reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    ARROW           reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    IDENT           reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    INT             reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    FLOAT           reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    IMAGINARY       reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    RUNE            reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    STRING          reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    FUNCTION        reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    LEFT_BRACKET    reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    STRUCT          reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    INTERFACE       reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    MAP             reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)
    CHAN            reduce using rule 304 (ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT .)


state 402

    (305) ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .
    (120) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (99) ExpressionList -> . Expression ExpressionStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    RANGE           reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ExpressionList                 shift and go to state 406
    Expression                     shift and go to state 175
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 403

    (248) SendStmt -> Channel ARROW Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    SEMICOLON       reduce using rule 248 (SendStmt -> Channel ARROW Expression .)
    COLON           reduce using rule 248 (SendStmt -> Channel ARROW Expression .)
    LEFT_BRACE      reduce using rule 248 (SendStmt -> Channel ARROW Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 404

    (253) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 253 (Assignment -> ExpressionList assign_op ExpressionList .)
    LEFT_BRACE      reduce using rule 253 (Assignment -> ExpressionList assign_op ExpressionList .)


state 405

    (254) assign_op -> add_op_mul_op_or_plus ASSIGNMENT .

    ADD             reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    SUBTRACT        reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    NOT             reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    XOR             reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    MULTIPLY        reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    AND             reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    ARROW           reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    IDENT           reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    INT             reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    FLOAT           reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    IMAGINARY       reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    RUNE            reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    STRING          reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    FUNCTION        reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    LEFT_BRACKET    reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    STRUCT          reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    INTERFACE       reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    MAP             reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)
    CHAN            reduce using rule 254 (assign_op -> add_op_mul_op_or_plus ASSIGNMENT .)


state 406

    (120) ShortVarDecl -> IdentifierList DEFINE ExpressionList .

    SEMICOLON       reduce using rule 120 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    LEFT_BRACE      reduce using rule 120 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)


state 407

    (268) ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus . LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE

    LEFT_BRACE      shift and go to state 430


state 408

    (276) TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard . LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE

    LEFT_BRACE      shift and go to state 431


state 409

    (269) ExpressionPlus -> Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    LEFT_BRACE      reduce using rule 269 (ExpressionPlus -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 410

    (279) TypeSwitchGuard -> IdentDefinePlus . PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    PrimaryExpr                    shift and go to state 432
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 411

    (280) IdentDefinePlus -> IDENT . DEFINE
    (139) OperandName -> IDENT .
    (141) QualifiedIdent -> IDENT . PERIOD IDENT
    (21) TypeName -> IDENT .

  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 21 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 21 (TypeName -> IDENT .)
    DEFINE          shift and go to state 433
    LOGICAL_OR      reduce using rule 139 (OperandName -> IDENT .)
    LOGICAL_AND     reduce using rule 139 (OperandName -> IDENT .)
    EQUAL           reduce using rule 139 (OperandName -> IDENT .)
    NOT_EQUAL       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN       reduce using rule 139 (OperandName -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN    reduce using rule 139 (OperandName -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 139 (OperandName -> IDENT .)
    ADD             reduce using rule 139 (OperandName -> IDENT .)
    SUBTRACT        reduce using rule 139 (OperandName -> IDENT .)
    OR              reduce using rule 139 (OperandName -> IDENT .)
    XOR             reduce using rule 139 (OperandName -> IDENT .)
    MULTIPLY        reduce using rule 139 (OperandName -> IDENT .)
    QUOTIENT        reduce using rule 139 (OperandName -> IDENT .)
    REMAINDER       reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_LEFT      reduce using rule 139 (OperandName -> IDENT .)
    SHIFT_RIGHT     reduce using rule 139 (OperandName -> IDENT .)
    AND             reduce using rule 139 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 139 (OperandName -> IDENT .)
    LEFT_BRACE      reduce using rule 139 (OperandName -> IDENT .)
    PERIOD          shift and go to state 117
    LEFT_PARENTHESIS reduce using rule 21 (TypeName -> IDENT .)
    LEFT_BRACKET    reduce using rule 21 (TypeName -> IDENT .)

  ! PERIOD          [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_BRACKET    [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 139 (OperandName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 21 (TypeName -> IDENT .) ]


state 412

    (222) Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    ADD             reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    OR              reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    XOR             reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    AND             reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    COLON           reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 222 (Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS .)


state 413

    (178) TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ADD             reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    OR              reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    XOR             reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    AND             reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ARROW           reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    COLON           reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 178 (TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)


state 414

    (176) Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus . RIGHT_BRACKET

    RIGHT_BRACKET   shift and go to state 434


state 415

    (177) Slice -> LEFT_BRACKET ExpressionPlus COLON Expression . COLON Expression RIGHT_BRACKET
    (269) ExpressionPlus -> Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    COLON           shift and go to state 435
    RIGHT_BRACKET   reduce using rule 269 (ExpressionPlus -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 416

    (222) Conversion -> Type LEFT_PARENTHESIS Expression . COMMA RIGHT_PARENTHESIS
    (223) Conversion -> Type LEFT_PARENTHESIS Expression . RIGHT_PARENTHESIS
    (130) Operand -> LEFT_PARENTHESIS Expression . RIGHT_PARENTHESIS
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    COMMA           shift and go to state 365
    RIGHT_PARENTHESIS shift and go to state 436
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 417

    (184) CommaExpressionListPlus -> COMMA ExpressionList .

    RIGHT_PARENTHESIS reduce using rule 184 (CommaExpressionListPlus -> COMMA ExpressionList .)


state 418

    (154) KeyedElementStar -> COMMA KeyedElement . KeyedElementStar
    (154) KeyedElementStar -> . COMMA KeyedElement KeyedElementStar
    (155) KeyedElementStar -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 379
    RIGHT_BRACKET   reduce using rule 155 (KeyedElementStar -> .)

  ! COMMA           [ reduce using rule 155 (KeyedElementStar -> .) ]

    KeyedElementStar               shift and go to state 437

state 419

    (37) FieldDecl -> IdentifierList Type TagPlus .

    SEMICOLON       reduce using rule 37 (FieldDecl -> IdentifierList Type TagPlus .)


state 420

    (259) IfStmt -> IF SimpleStmtSemicolonPlus Expression Block . ElsePlus
    (262) ElsePlus -> . ELSE Nested_if_block
    (263) ElsePlus -> .

    ELSE            shift and go to state 439
    SEMICOLON       reduce using rule 263 (ElsePlus -> .)

    ElsePlus                       shift and go to state 438

state 421

    (308) SelectStmt -> SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE .

    SEMICOLON       reduce using rule 308 (SelectStmt -> SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE .)


state 422

    (309) CommClausePlus -> CommClausePlus CommClause .

    RIGHT_BRACE     reduce using rule 309 (CommClausePlus -> CommClausePlus CommClause .)
    CASE            reduce using rule 309 (CommClausePlus -> CommClausePlus CommClause .)
    DEFAULT         reduce using rule 309 (CommClausePlus -> CommClausePlus CommClause .)


state 423

    (311) CommClause -> CommCase . COLON StatementList

    COLON           shift and go to state 440


state 424

    (312) CommCase -> CASE . SentStmtRecvStmtOr
    (314) SentStmtRecvStmtOr -> . SendStmt
    (315) SentStmtRecvStmtOr -> . RecvStmt
    (248) SendStmt -> . Channel ARROW Expression
    (316) RecvStmt -> . ExpListAssignIdListDefOrPlus RecvExpr
    (249) Channel -> . Expression
    (304) ExpListAssignIdListDefOrPlus -> . ExpressionList ASSIGNMENT
    (305) ExpListAssignIdListDefOrPlus -> . IdentifierList DEFINE
    (306) ExpListAssignIdListDefOrPlus -> .
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (99) ExpressionList -> . Expression ExpressionStar
    (96) IdentifierList -> . IDENT IdentStar
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for LEFT_PARENTHESIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAGINARY resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for LEFT_BRACKET resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for CHAN resolved as shift
    IDENT           shift and go to state 342
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

  ! ADD             [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! SUBTRACT        [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! NOT             [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! XOR             [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! MULTIPLY        [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! AND             [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! ARROW           [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! IDENT           [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! INT             [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! FLOAT           [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! IMAGINARY       [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! RUNE            [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! STRING          [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! FUNCTION        [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! LEFT_BRACKET    [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! STRUCT          [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! INTERFACE       [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! MAP             [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]
  ! CHAN            [ reduce using rule 306 (ExpListAssignIdListDefOrPlus -> .) ]

    SentStmtRecvStmtOr             shift and go to state 441
    SendStmt                       shift and go to state 442
    RecvStmt                       shift and go to state 443
    Channel                        shift and go to state 280
    Expression                     shift and go to state 444
    ExpListAssignIdListDefOrPlus   shift and go to state 445
    ExpressionList                 shift and go to state 446
    IdentifierList                 shift and go to state 447
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 425

    (313) CommCase -> DEFAULT .

    COLON           reduce using rule 313 (CommCase -> DEFAULT .)


state 426

    (294) ForClause -> InitStmtPlus SEMICOLON ConditionPlus . SEMICOLON PostStmtPlus

    SEMICOLON       shift and go to state 448


state 427

    (297) ConditionPlus -> Condition .

    SEMICOLON       reduce using rule 297 (ConditionPlus -> Condition .)


state 428

    (293) Condition -> Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    SEMICOLON       reduce using rule 293 (Condition -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 429

    (303) RangeClause -> ExpListAssignIdListDefOrPlus RANGE Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    LEFT_BRACE      reduce using rule 303 (RangeClause -> ExpListAssignIdListDefOrPlus RANGE Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 430

    (268) ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE . ExprCaseClauseStar RIGHT_BRACE
    (271) ExprCaseClauseStar -> . ExprCaseClauseStar ExprCaseClause
    (272) ExprCaseClauseStar -> .

    RIGHT_BRACE     reduce using rule 272 (ExprCaseClauseStar -> .)
    CASE            reduce using rule 272 (ExprCaseClauseStar -> .)
    DEFAULT         reduce using rule 272 (ExprCaseClauseStar -> .)

    ExprCaseClauseStar             shift and go to state 449

state 431

    (276) TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE . TypeCaseClauseStar RIGHT_BRACE
    (277) TypeCaseClauseStar -> . TypeCaseClauseStar TypeCaseClause
    (278) TypeCaseClauseStar -> .

    RIGHT_BRACE     reduce using rule 278 (TypeCaseClauseStar -> .)
    CASE            reduce using rule 278 (TypeCaseClauseStar -> .)
    DEFAULT         reduce using rule 278 (TypeCaseClauseStar -> .)

    TypeCaseClauseStar             shift and go to state 450

state 432

    (279) TypeSwitchGuard -> IdentDefinePlus PrimaryExpr . PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS
    (169) PrimaryExpr -> PrimaryExpr . Selector
    (170) PrimaryExpr -> PrimaryExpr . Index
    (171) PrimaryExpr -> PrimaryExpr . Slice
    (172) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (173) PrimaryExpr -> PrimaryExpr . Arguments
    (174) Selector -> . PERIOD IDENT
    (175) Index -> . LEFT_BRACKET Expression RIGHT_BRACKET
    (176) Slice -> . LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET
    (177) Slice -> . LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET
    (178) TypeAssertion -> . PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (179) Arguments -> . LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS

    PERIOD          shift and go to state 451
    LEFT_BRACKET    shift and go to state 219
    LEFT_PARENTHESIS shift and go to state 220

    Selector                       shift and go to state 213
    Index                          shift and go to state 214
    Slice                          shift and go to state 215
    TypeAssertion                  shift and go to state 216
    Arguments                      shift and go to state 217

state 433

    (280) IdentDefinePlus -> IDENT DEFINE .

    LEFT_PARENTHESIS reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    IDENT           reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    INT             reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    FLOAT           reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    IMAGINARY       reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    RUNE            reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    STRING          reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    FUNCTION        reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    LEFT_BRACKET    reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    STRUCT          reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    MULTIPLY        reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    INTERFACE       reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    MAP             reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    CHAN            reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)
    ARROW           reduce using rule 280 (IdentDefinePlus -> IDENT DEFINE .)


state 434

    (176) Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .

    PERIOD          reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LOGICAL_OR      reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LOGICAL_AND     reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    EQUAL           reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    ADD             reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    SUBTRACT        reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    OR              reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    XOR             reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    MULTIPLY        reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    QUOTIENT        reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    REMAINDER       reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    SHIFT_LEFT      reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    SHIFT_RIGHT     reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    AND             reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    AND_NOT         reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    COMMA           reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    INCREMENT       reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    DECREMENT       reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    ARROW           reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    COLON           reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 176 (Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET .)


state 435

    (177) Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON . Expression RIGHT_BRACKET
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Expression                     shift and go to state 452
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 436

    (223) Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .
    (130) Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .

  ! reduce/reduce conflict for PERIOD resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LEFT_PARENTHESIS resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for COMMA resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for EQUAL resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for LESS_THAN_EQUAL resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for GREATER_THAN_EQUAL resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for ADD resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for SUBTRACT resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for OR resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for XOR resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for MULTIPLY resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for QUOTIENT resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for REMAINDER resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for SHIFT_LEFT resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for SHIFT_RIGHT resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for AND resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for AND_NOT resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
  ! reduce/reduce conflict for RIGHT_PARENTHESIS resolved using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    PERIOD          reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ADD             reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    OR              reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    XOR             reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND             reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 130 (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)

  ! PERIOD          [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LEFT_BRACKET    [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LEFT_PARENTHESIS [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! COMMA           [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LOGICAL_OR      [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LOGICAL_AND     [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! EQUAL           [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! NOT_EQUAL       [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LESS_THAN       [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! GREATER_THAN    [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! ADD             [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! SUBTRACT        [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! OR              [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! XOR             [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! MULTIPLY        [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! QUOTIENT        [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! REMAINDER       [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! SHIFT_LEFT      [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! SHIFT_RIGHT     [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! AND             [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! AND_NOT         [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]
  ! RIGHT_PARENTHESIS [ reduce using rule 223 (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .) ]


state 437

    (154) KeyedElementStar -> COMMA KeyedElement KeyedElementStar .

    COMMA           reduce using rule 154 (KeyedElementStar -> COMMA KeyedElement KeyedElementStar .)
    RIGHT_BRACKET   reduce using rule 154 (KeyedElementStar -> COMMA KeyedElement KeyedElementStar .)


state 438

    (259) IfStmt -> IF SimpleStmtSemicolonPlus Expression Block ElsePlus .

    SEMICOLON       reduce using rule 259 (IfStmt -> IF SimpleStmtSemicolonPlus Expression Block ElsePlus .)


state 439

    (262) ElsePlus -> ELSE . Nested_if_block
    (264) Nested_if_block -> . IfStmt
    (265) Nested_if_block -> . Block
    (259) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    IF              shift and go to state 273
    LEFT_BRACE      shift and go to state 101

    Nested_if_block                shift and go to state 453
    IfStmt                         shift and go to state 454
    Block                          shift and go to state 455

state 440

    (311) CommClause -> CommCase COLON . StatementList
    (78) StatementList -> . StatementList Statement SEMICOLON
    (79) StatementList -> .

    GO              reduce using rule 79 (StatementList -> .)
    RETURN          reduce using rule 79 (StatementList -> .)
    BREAK           reduce using rule 79 (StatementList -> .)
    CONTINUE        reduce using rule 79 (StatementList -> .)
    GOTO            reduce using rule 79 (StatementList -> .)
    FALLTHROUGH     reduce using rule 79 (StatementList -> .)
    LEFT_BRACE      reduce using rule 79 (StatementList -> .)
    IF              reduce using rule 79 (StatementList -> .)
    SELECT          reduce using rule 79 (StatementList -> .)
    FOR             reduce using rule 79 (StatementList -> .)
    DEFER           reduce using rule 79 (StatementList -> .)
    CONST           reduce using rule 79 (StatementList -> .)
    TYPE            reduce using rule 79 (StatementList -> .)
    VARIABLE        reduce using rule 79 (StatementList -> .)
    IDENT           reduce using rule 79 (StatementList -> .)
    SWITCH          reduce using rule 79 (StatementList -> .)
    ADD             reduce using rule 79 (StatementList -> .)
    SUBTRACT        reduce using rule 79 (StatementList -> .)
    NOT             reduce using rule 79 (StatementList -> .)
    XOR             reduce using rule 79 (StatementList -> .)
    MULTIPLY        reduce using rule 79 (StatementList -> .)
    AND             reduce using rule 79 (StatementList -> .)
    ARROW           reduce using rule 79 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 79 (StatementList -> .)
    INT             reduce using rule 79 (StatementList -> .)
    FLOAT           reduce using rule 79 (StatementList -> .)
    IMAGINARY       reduce using rule 79 (StatementList -> .)
    RUNE            reduce using rule 79 (StatementList -> .)
    STRING          reduce using rule 79 (StatementList -> .)
    FUNCTION        reduce using rule 79 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 79 (StatementList -> .)
    STRUCT          reduce using rule 79 (StatementList -> .)
    INTERFACE       reduce using rule 79 (StatementList -> .)
    MAP             reduce using rule 79 (StatementList -> .)
    CHAN            reduce using rule 79 (StatementList -> .)
    SEMICOLON       reduce using rule 79 (StatementList -> .)
    RIGHT_BRACE     reduce using rule 79 (StatementList -> .)
    CASE            reduce using rule 79 (StatementList -> .)
    DEFAULT         reduce using rule 79 (StatementList -> .)

    StatementList                  shift and go to state 456

state 441

    (312) CommCase -> CASE SentStmtRecvStmtOr .

    COLON           reduce using rule 312 (CommCase -> CASE SentStmtRecvStmtOr .)


state 442

    (314) SentStmtRecvStmtOr -> SendStmt .

    COLON           reduce using rule 314 (SentStmtRecvStmtOr -> SendStmt .)


state 443

    (315) SentStmtRecvStmtOr -> RecvStmt .

    COLON           reduce using rule 315 (SentStmtRecvStmtOr -> RecvStmt .)


state 444

    (249) Channel -> Expression .
    (190) Expression -> Expression . binary_op Expression
    (99) ExpressionList -> Expression . ExpressionStar
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (100) ExpressionStar -> . COMMA Expression ExpressionStar
    (101) ExpressionStar -> .
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    ARROW           reduce using rule 249 (Channel -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    COMMA           shift and go to state 242
    ASSIGNMENT      reduce using rule 101 (ExpressionStar -> .)
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    ExpressionStar                 shift and go to state 241
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 445

    (316) RecvStmt -> ExpListAssignIdListDefOrPlus . RecvExpr
    (317) RecvExpr -> . Expression
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    RecvExpr                       shift and go to state 457
    Expression                     shift and go to state 458
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 446

    (304) ExpListAssignIdListDefOrPlus -> ExpressionList . ASSIGNMENT

    ASSIGNMENT      shift and go to state 401


state 447

    (305) ExpListAssignIdListDefOrPlus -> IdentifierList . DEFINE

    DEFINE          shift and go to state 459


state 448

    (294) ForClause -> InitStmtPlus SEMICOLON ConditionPlus SEMICOLON . PostStmtPlus
    (299) PostStmtPlus -> . PostStmt
    (300) PostStmtPlus -> .
    (302) PostStmt -> . SimpleStmt
    (239) SimpleStmt -> . ExpressionStmt
    (240) SimpleStmt -> . SendStmt
    (241) SimpleStmt -> . IncDecStmt
    (242) SimpleStmt -> . Assignment
    (243) SimpleStmt -> . ShortVarDecl
    (244) SimpleStmt -> .
    (247) ExpressionStmt -> . Expression
    (248) SendStmt -> . Channel ARROW Expression
    (250) IncDecStmt -> . Expression IncDecOr
    (253) Assignment -> . ExpressionList assign_op ExpressionList
    (120) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (249) Channel -> . Expression
    (99) ExpressionList -> . Expression ExpressionStar
    (96) IdentifierList -> . IDENT IdentStar
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

  ! reduce/reduce conflict for LEFT_BRACE resolved using rule 244 (SimpleStmt -> .)
    LEFT_BRACE      reduce using rule 244 (SimpleStmt -> .)
    IDENT           shift and go to state 342
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

  ! LEFT_BRACE      [ reduce using rule 300 (PostStmtPlus -> .) ]

    PostStmtPlus                   shift and go to state 460
    PostStmt                       shift and go to state 461
    SimpleStmt                     shift and go to state 462
    ExpressionStmt                 shift and go to state 261
    SendStmt                       shift and go to state 262
    IncDecStmt                     shift and go to state 263
    Assignment                     shift and go to state 264
    ShortVarDecl                   shift and go to state 265
    Expression                     shift and go to state 267
    Channel                        shift and go to state 280
    ExpressionList                 shift and go to state 281
    IdentifierList                 shift and go to state 282
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 449

    (268) ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar . RIGHT_BRACE
    (271) ExprCaseClauseStar -> ExprCaseClauseStar . ExprCaseClause
    (273) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (274) ExprSwitchCase -> . CASE ExpressionList
    (275) ExprSwitchCase -> . DEFAULT

    RIGHT_BRACE     shift and go to state 463
    CASE            shift and go to state 466
    DEFAULT         shift and go to state 467

    ExprCaseClause                 shift and go to state 464
    ExprSwitchCase                 shift and go to state 465

state 450

    (276) TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar . RIGHT_BRACE
    (277) TypeCaseClauseStar -> TypeCaseClauseStar . TypeCaseClause
    (282) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (283) TypeSwitchCase -> . CASE TypeList
    (284) TypeSwitchCase -> . DEFAULT

    RIGHT_BRACE     shift and go to state 468
    CASE            shift and go to state 471
    DEFAULT         shift and go to state 472

    TypeCaseClause                 shift and go to state 469
    TypeSwitchCase                 shift and go to state 470

state 451

    (279) TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD . LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS
    (174) Selector -> PERIOD . IDENT
    (178) TypeAssertion -> PERIOD . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 473
    IDENT           shift and go to state 288


state 452

    (177) Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression . RIGHT_BRACKET
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    RIGHT_BRACKET   shift and go to state 474
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 453

    (262) ElsePlus -> ELSE Nested_if_block .

    SEMICOLON       reduce using rule 262 (ElsePlus -> ELSE Nested_if_block .)


state 454

    (264) Nested_if_block -> IfStmt .

    SEMICOLON       reduce using rule 264 (Nested_if_block -> IfStmt .)


state 455

    (265) Nested_if_block -> Block .

    SEMICOLON       reduce using rule 265 (Nested_if_block -> Block .)


state 456

    (311) CommClause -> CommCase COLON StatementList .
    (78) StatementList -> StatementList . Statement SEMICOLON
    (224) Statement -> . Declaration
    (225) Statement -> . LabeledStmt
    (226) Statement -> . SimpleStmt
    (227) Statement -> . GoStmt
    (228) Statement -> . ReturnStmt
    (229) Statement -> . BreakStmt
    (230) Statement -> . ContinueStmt
    (231) Statement -> . GotoStmt
    (232) Statement -> . FallthroughStmt
    (233) Statement -> . Block
    (234) Statement -> . IfStmt
    (235) Statement -> . SwitchStmt
    (236) Statement -> . SelectStmt
    (237) Statement -> . ForStmt
    (238) Statement -> . DeferStmt
    (80) Declaration -> . ConstDecl
    (81) Declaration -> . TypeDecl
    (82) Declaration -> . VarDecl
    (245) LabeledStmt -> . Label COLON Statement
    (239) SimpleStmt -> . ExpressionStmt
    (240) SimpleStmt -> . SendStmt
    (241) SimpleStmt -> . IncDecStmt
    (242) SimpleStmt -> . Assignment
    (243) SimpleStmt -> . ShortVarDecl
    (244) SimpleStmt -> .
    (307) GoStmt -> . GO Expression
    (318) ReturnStmt -> . RETURN ExpressionListPlus
    (321) BreakStmt -> . BREAK LabelPlus
    (324) ContinueStmt -> . CONTINUE LabelPlus
    (325) GotoStmt -> . GOTO Label
    (326) FallthroughStmt -> . FALLTHROUGH
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (259) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (266) SwitchStmt -> . ExprSwitchStmt
    (267) SwitchStmt -> . TypeSwitchStmt
    (308) SelectStmt -> . SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
    (288) ForStmt -> . FOR ForInternal Block
    (327) DeferStmt -> . DEFER Expression
    (86) ConstDecl -> . CONST ConstSpecOr
    (102) TypeDecl -> . TYPE TypeSpecOr
    (111) VarDecl -> . VARIABLE VarSpec
    (112) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (246) Label -> . IDENT
    (247) ExpressionStmt -> . Expression
    (248) SendStmt -> . Channel ARROW Expression
    (250) IncDecStmt -> . Expression IncDecOr
    (253) Assignment -> . ExpressionList assign_op ExpressionList
    (120) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (268) ExprSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (276) TypeSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (249) Channel -> . Expression
    (99) ExpressionList -> . Expression ExpressionStar
    (96) IdentifierList -> . IDENT IdentStar
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACE     reduce using rule 311 (CommClause -> CommCase COLON StatementList .)
    CASE            reduce using rule 311 (CommClause -> CommCase COLON StatementList .)
    DEFAULT         reduce using rule 311 (CommClause -> CommCase COLON StatementList .)
    SEMICOLON       reduce using rule 244 (SimpleStmt -> .)
    GO              shift and go to state 266
    RETURN          shift and go to state 268
    BREAK           shift and go to state 269
    CONTINUE        shift and go to state 270
    GOTO            shift and go to state 271
    FALLTHROUGH     shift and go to state 272
    LEFT_BRACE      shift and go to state 101
    IF              shift and go to state 273
    SELECT          shift and go to state 276
    FOR             shift and go to state 277
    DEFER           shift and go to state 278
    CONST           shift and go to state 18
    TYPE            shift and go to state 19
    VARIABLE        shift and go to state 20
    IDENT           shift and go to state 279
    SWITCH          shift and go to state 283
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Statement                      shift and go to state 244
    Declaration                    shift and go to state 245
    LabeledStmt                    shift and go to state 246
    SimpleStmt                     shift and go to state 247
    GoStmt                         shift and go to state 248
    ReturnStmt                     shift and go to state 249
    BreakStmt                      shift and go to state 250
    ContinueStmt                   shift and go to state 251
    GotoStmt                       shift and go to state 252
    FallthroughStmt                shift and go to state 253
    Block                          shift and go to state 254
    IfStmt                         shift and go to state 255
    SwitchStmt                     shift and go to state 256
    SelectStmt                     shift and go to state 257
    ForStmt                        shift and go to state 258
    DeferStmt                      shift and go to state 259
    ConstDecl                      shift and go to state 14
    TypeDecl                       shift and go to state 15
    VarDecl                        shift and go to state 16
    Label                          shift and go to state 260
    ExpressionStmt                 shift and go to state 261
    SendStmt                       shift and go to state 262
    IncDecStmt                     shift and go to state 263
    Assignment                     shift and go to state 264
    ShortVarDecl                   shift and go to state 265
    Expression                     shift and go to state 267
    ExprSwitchStmt                 shift and go to state 274
    TypeSwitchStmt                 shift and go to state 275
    Channel                        shift and go to state 280
    ExpressionList                 shift and go to state 281
    IdentifierList                 shift and go to state 282
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 457

    (316) RecvStmt -> ExpListAssignIdListDefOrPlus RecvExpr .

    COLON           reduce using rule 316 (RecvStmt -> ExpListAssignIdListDefOrPlus RecvExpr .)


state 458

    (317) RecvExpr -> Expression .
    (190) Expression -> Expression . binary_op Expression
    (193) binary_op -> . LOGICAL_OR
    (194) binary_op -> . LOGICAL_AND
    (195) binary_op -> . rel_op
    (196) binary_op -> . add_op
    (197) binary_op -> . mul_op
    (198) rel_op -> . EQUAL
    (199) rel_op -> . NOT_EQUAL
    (200) rel_op -> . LESS_THAN
    (201) rel_op -> . LESS_THAN_EQUAL
    (202) rel_op -> . GREATER_THAN
    (203) rel_op -> . GREATER_THAN_EQUAL
    (204) add_op -> . ADD
    (205) add_op -> . SUBTRACT
    (206) add_op -> . OR
    (207) add_op -> . XOR
    (208) mul_op -> . MULTIPLY
    (209) mul_op -> . QUOTIENT
    (210) mul_op -> . REMAINDER
    (211) mul_op -> . SHIFT_LEFT
    (212) mul_op -> . SHIFT_RIGHT
    (213) mul_op -> . AND
    (214) mul_op -> . AND_NOT

    COLON           reduce using rule 317 (RecvExpr -> Expression .)
    LOGICAL_OR      shift and go to state 191
    LOGICAL_AND     shift and go to state 192
    EQUAL           shift and go to state 196
    NOT_EQUAL       shift and go to state 197
    LESS_THAN       shift and go to state 198
    LESS_THAN_EQUAL shift and go to state 199
    GREATER_THAN    shift and go to state 200
    GREATER_THAN_EQUAL shift and go to state 201
    ADD             shift and go to state 202
    SUBTRACT        shift and go to state 203
    OR              shift and go to state 204
    XOR             shift and go to state 205
    MULTIPLY        shift and go to state 206
    QUOTIENT        shift and go to state 207
    REMAINDER       shift and go to state 208
    SHIFT_LEFT      shift and go to state 209
    SHIFT_RIGHT     shift and go to state 210
    AND             shift and go to state 211
    AND_NOT         shift and go to state 212

    binary_op                      shift and go to state 190
    rel_op                         shift and go to state 193
    add_op                         shift and go to state 194
    mul_op                         shift and go to state 195

state 459

    (305) ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .

    ADD             reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    SUBTRACT        reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    NOT             reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    XOR             reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    MULTIPLY        reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    AND             reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    ARROW           reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    LEFT_PARENTHESIS reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    IDENT           reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    INT             reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    FLOAT           reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    IMAGINARY       reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    RUNE            reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    STRING          reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    FUNCTION        reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    LEFT_BRACKET    reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    STRUCT          reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    INTERFACE       reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    MAP             reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)
    CHAN            reduce using rule 305 (ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE .)


state 460

    (294) ForClause -> InitStmtPlus SEMICOLON ConditionPlus SEMICOLON PostStmtPlus .

    LEFT_BRACE      reduce using rule 294 (ForClause -> InitStmtPlus SEMICOLON ConditionPlus SEMICOLON PostStmtPlus .)


state 461

    (299) PostStmtPlus -> PostStmt .

    LEFT_BRACE      reduce using rule 299 (PostStmtPlus -> PostStmt .)


state 462

    (302) PostStmt -> SimpleStmt .

    LEFT_BRACE      reduce using rule 302 (PostStmt -> SimpleStmt .)


state 463

    (268) ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE .

    SEMICOLON       reduce using rule 268 (ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE .)


state 464

    (271) ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .

    RIGHT_BRACE     reduce using rule 271 (ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .)
    CASE            reduce using rule 271 (ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .)
    DEFAULT         reduce using rule 271 (ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .)


state 465

    (273) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 475


state 466

    (274) ExprSwitchCase -> CASE . ExpressionList
    (99) ExpressionList -> . Expression ExpressionStar
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    IDENT           shift and go to state 143
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    ExpressionList                 shift and go to state 476
    Expression                     shift and go to state 175
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 467

    (275) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 275 (ExprSwitchCase -> DEFAULT .)


state 468

    (276) TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE .

    SEMICOLON       reduce using rule 276 (TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE .)


state 469

    (277) TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause .

    RIGHT_BRACE     reduce using rule 277 (TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause .)
    CASE            reduce using rule 277 (TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause .)
    DEFAULT         reduce using rule 277 (TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause .)


state 470

    (282) TypeCaseClause -> TypeSwitchCase . COLON StatementList

    COLON           shift and go to state 477


state 471

    (283) TypeSwitchCase -> CASE . TypeList
    (285) TypeList -> . Type CommaTypePlus
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    TypeList                       shift and go to state 478
    Type                           shift and go to state 479
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 472

    (284) TypeSwitchCase -> DEFAULT .

    COLON           reduce using rule 284 (TypeSwitchCase -> DEFAULT .)


state 473

    (279) TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS . TYPE RIGHT_PARENTHESIS
    (178) TypeAssertion -> PERIOD LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    TYPE            shift and go to state 480
    LEFT_PARENTHESIS shift and go to state 67
    IDENT           shift and go to state 68
    LEFT_BRACKET    shift and go to state 78
    STRUCT          shift and go to state 79
    MULTIPLY        shift and go to state 80
    FUNCTION        shift and go to state 81
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85
    ARROW           shift and go to state 86

    Type                           shift and go to state 367
    TypeName                       shift and go to state 65
    TypeLit                        shift and go to state 66
    QualifiedIdent                 shift and go to state 69
    ArrayType                      shift and go to state 70
    StructType                     shift and go to state 71
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 75
    MapType                        shift and go to state 76
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 474

    (177) Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .

    PERIOD          reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LOGICAL_OR      reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LOGICAL_AND     reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    EQUAL           reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    ADD             reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    SUBTRACT        reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    OR              reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    XOR             reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    MULTIPLY        reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    QUOTIENT        reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    REMAINDER       reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    SHIFT_LEFT      reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    SHIFT_RIGHT     reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    AND             reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    AND_NOT         reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    COMMA           reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    INCREMENT       reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    DECREMENT       reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    ARROW           reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    COLON           reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 177 (Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET .)


state 475

    (273) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (78) StatementList -> . StatementList Statement SEMICOLON
    (79) StatementList -> .

    GO              reduce using rule 79 (StatementList -> .)
    RETURN          reduce using rule 79 (StatementList -> .)
    BREAK           reduce using rule 79 (StatementList -> .)
    CONTINUE        reduce using rule 79 (StatementList -> .)
    GOTO            reduce using rule 79 (StatementList -> .)
    FALLTHROUGH     reduce using rule 79 (StatementList -> .)
    LEFT_BRACE      reduce using rule 79 (StatementList -> .)
    IF              reduce using rule 79 (StatementList -> .)
    SELECT          reduce using rule 79 (StatementList -> .)
    FOR             reduce using rule 79 (StatementList -> .)
    DEFER           reduce using rule 79 (StatementList -> .)
    CONST           reduce using rule 79 (StatementList -> .)
    TYPE            reduce using rule 79 (StatementList -> .)
    VARIABLE        reduce using rule 79 (StatementList -> .)
    IDENT           reduce using rule 79 (StatementList -> .)
    SWITCH          reduce using rule 79 (StatementList -> .)
    ADD             reduce using rule 79 (StatementList -> .)
    SUBTRACT        reduce using rule 79 (StatementList -> .)
    NOT             reduce using rule 79 (StatementList -> .)
    XOR             reduce using rule 79 (StatementList -> .)
    MULTIPLY        reduce using rule 79 (StatementList -> .)
    AND             reduce using rule 79 (StatementList -> .)
    ARROW           reduce using rule 79 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 79 (StatementList -> .)
    INT             reduce using rule 79 (StatementList -> .)
    FLOAT           reduce using rule 79 (StatementList -> .)
    IMAGINARY       reduce using rule 79 (StatementList -> .)
    RUNE            reduce using rule 79 (StatementList -> .)
    STRING          reduce using rule 79 (StatementList -> .)
    FUNCTION        reduce using rule 79 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 79 (StatementList -> .)
    STRUCT          reduce using rule 79 (StatementList -> .)
    INTERFACE       reduce using rule 79 (StatementList -> .)
    MAP             reduce using rule 79 (StatementList -> .)
    CHAN            reduce using rule 79 (StatementList -> .)
    SEMICOLON       reduce using rule 79 (StatementList -> .)
    RIGHT_BRACE     reduce using rule 79 (StatementList -> .)
    CASE            reduce using rule 79 (StatementList -> .)
    DEFAULT         reduce using rule 79 (StatementList -> .)

    StatementList                  shift and go to state 481

state 476

    (274) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 274 (ExprSwitchCase -> CASE ExpressionList .)


state 477

    (282) TypeCaseClause -> TypeSwitchCase COLON . StatementList
    (78) StatementList -> . StatementList Statement SEMICOLON
    (79) StatementList -> .

    GO              reduce using rule 79 (StatementList -> .)
    RETURN          reduce using rule 79 (StatementList -> .)
    BREAK           reduce using rule 79 (StatementList -> .)
    CONTINUE        reduce using rule 79 (StatementList -> .)
    GOTO            reduce using rule 79 (StatementList -> .)
    FALLTHROUGH     reduce using rule 79 (StatementList -> .)
    LEFT_BRACE      reduce using rule 79 (StatementList -> .)
    IF              reduce using rule 79 (StatementList -> .)
    SELECT          reduce using rule 79 (StatementList -> .)
    FOR             reduce using rule 79 (StatementList -> .)
    DEFER           reduce using rule 79 (StatementList -> .)
    CONST           reduce using rule 79 (StatementList -> .)
    TYPE            reduce using rule 79 (StatementList -> .)
    VARIABLE        reduce using rule 79 (StatementList -> .)
    IDENT           reduce using rule 79 (StatementList -> .)
    SWITCH          reduce using rule 79 (StatementList -> .)
    ADD             reduce using rule 79 (StatementList -> .)
    SUBTRACT        reduce using rule 79 (StatementList -> .)
    NOT             reduce using rule 79 (StatementList -> .)
    XOR             reduce using rule 79 (StatementList -> .)
    MULTIPLY        reduce using rule 79 (StatementList -> .)
    AND             reduce using rule 79 (StatementList -> .)
    ARROW           reduce using rule 79 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 79 (StatementList -> .)
    INT             reduce using rule 79 (StatementList -> .)
    FLOAT           reduce using rule 79 (StatementList -> .)
    IMAGINARY       reduce using rule 79 (StatementList -> .)
    RUNE            reduce using rule 79 (StatementList -> .)
    STRING          reduce using rule 79 (StatementList -> .)
    FUNCTION        reduce using rule 79 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 79 (StatementList -> .)
    STRUCT          reduce using rule 79 (StatementList -> .)
    INTERFACE       reduce using rule 79 (StatementList -> .)
    MAP             reduce using rule 79 (StatementList -> .)
    CHAN            reduce using rule 79 (StatementList -> .)
    SEMICOLON       reduce using rule 79 (StatementList -> .)
    RIGHT_BRACE     reduce using rule 79 (StatementList -> .)
    CASE            reduce using rule 79 (StatementList -> .)
    DEFAULT         reduce using rule 79 (StatementList -> .)

    StatementList                  shift and go to state 482

state 478

    (283) TypeSwitchCase -> CASE TypeList .

    COLON           reduce using rule 283 (TypeSwitchCase -> CASE TypeList .)


state 479

    (285) TypeList -> Type . CommaTypePlus
    (286) CommaTypePlus -> . CommaTypePlus COMMA TYPE
    (287) CommaTypePlus -> .

    COMMA           reduce using rule 287 (CommaTypePlus -> .)
    COLON           reduce using rule 287 (CommaTypePlus -> .)

    CommaTypePlus                  shift and go to state 483

state 480

    (279) TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 484


state 481

    (273) ExprCaseClause -> ExprSwitchCase COLON StatementList .
    (78) StatementList -> StatementList . Statement SEMICOLON
    (224) Statement -> . Declaration
    (225) Statement -> . LabeledStmt
    (226) Statement -> . SimpleStmt
    (227) Statement -> . GoStmt
    (228) Statement -> . ReturnStmt
    (229) Statement -> . BreakStmt
    (230) Statement -> . ContinueStmt
    (231) Statement -> . GotoStmt
    (232) Statement -> . FallthroughStmt
    (233) Statement -> . Block
    (234) Statement -> . IfStmt
    (235) Statement -> . SwitchStmt
    (236) Statement -> . SelectStmt
    (237) Statement -> . ForStmt
    (238) Statement -> . DeferStmt
    (80) Declaration -> . ConstDecl
    (81) Declaration -> . TypeDecl
    (82) Declaration -> . VarDecl
    (245) LabeledStmt -> . Label COLON Statement
    (239) SimpleStmt -> . ExpressionStmt
    (240) SimpleStmt -> . SendStmt
    (241) SimpleStmt -> . IncDecStmt
    (242) SimpleStmt -> . Assignment
    (243) SimpleStmt -> . ShortVarDecl
    (244) SimpleStmt -> .
    (307) GoStmt -> . GO Expression
    (318) ReturnStmt -> . RETURN ExpressionListPlus
    (321) BreakStmt -> . BREAK LabelPlus
    (324) ContinueStmt -> . CONTINUE LabelPlus
    (325) GotoStmt -> . GOTO Label
    (326) FallthroughStmt -> . FALLTHROUGH
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (259) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (266) SwitchStmt -> . ExprSwitchStmt
    (267) SwitchStmt -> . TypeSwitchStmt
    (308) SelectStmt -> . SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
    (288) ForStmt -> . FOR ForInternal Block
    (327) DeferStmt -> . DEFER Expression
    (86) ConstDecl -> . CONST ConstSpecOr
    (102) TypeDecl -> . TYPE TypeSpecOr
    (111) VarDecl -> . VARIABLE VarSpec
    (112) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (246) Label -> . IDENT
    (247) ExpressionStmt -> . Expression
    (248) SendStmt -> . Channel ARROW Expression
    (250) IncDecStmt -> . Expression IncDecOr
    (253) Assignment -> . ExpressionList assign_op ExpressionList
    (120) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (268) ExprSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (276) TypeSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (249) Channel -> . Expression
    (99) ExpressionList -> . Expression ExpressionStar
    (96) IdentifierList -> . IDENT IdentStar
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACE     reduce using rule 273 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 273 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 273 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    SEMICOLON       reduce using rule 244 (SimpleStmt -> .)
    GO              shift and go to state 266
    RETURN          shift and go to state 268
    BREAK           shift and go to state 269
    CONTINUE        shift and go to state 270
    GOTO            shift and go to state 271
    FALLTHROUGH     shift and go to state 272
    LEFT_BRACE      shift and go to state 101
    IF              shift and go to state 273
    SELECT          shift and go to state 276
    FOR             shift and go to state 277
    DEFER           shift and go to state 278
    CONST           shift and go to state 18
    TYPE            shift and go to state 19
    VARIABLE        shift and go to state 20
    IDENT           shift and go to state 279
    SWITCH          shift and go to state 283
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Statement                      shift and go to state 244
    Declaration                    shift and go to state 245
    LabeledStmt                    shift and go to state 246
    SimpleStmt                     shift and go to state 247
    GoStmt                         shift and go to state 248
    ReturnStmt                     shift and go to state 249
    BreakStmt                      shift and go to state 250
    ContinueStmt                   shift and go to state 251
    GotoStmt                       shift and go to state 252
    FallthroughStmt                shift and go to state 253
    Block                          shift and go to state 254
    IfStmt                         shift and go to state 255
    SwitchStmt                     shift and go to state 256
    SelectStmt                     shift and go to state 257
    ForStmt                        shift and go to state 258
    DeferStmt                      shift and go to state 259
    ConstDecl                      shift and go to state 14
    TypeDecl                       shift and go to state 15
    VarDecl                        shift and go to state 16
    Label                          shift and go to state 260
    ExpressionStmt                 shift and go to state 261
    SendStmt                       shift and go to state 262
    IncDecStmt                     shift and go to state 263
    Assignment                     shift and go to state 264
    ShortVarDecl                   shift and go to state 265
    Expression                     shift and go to state 267
    ExprSwitchStmt                 shift and go to state 274
    TypeSwitchStmt                 shift and go to state 275
    Channel                        shift and go to state 280
    ExpressionList                 shift and go to state 281
    IdentifierList                 shift and go to state 282
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 482

    (282) TypeCaseClause -> TypeSwitchCase COLON StatementList .
    (78) StatementList -> StatementList . Statement SEMICOLON
    (224) Statement -> . Declaration
    (225) Statement -> . LabeledStmt
    (226) Statement -> . SimpleStmt
    (227) Statement -> . GoStmt
    (228) Statement -> . ReturnStmt
    (229) Statement -> . BreakStmt
    (230) Statement -> . ContinueStmt
    (231) Statement -> . GotoStmt
    (232) Statement -> . FallthroughStmt
    (233) Statement -> . Block
    (234) Statement -> . IfStmt
    (235) Statement -> . SwitchStmt
    (236) Statement -> . SelectStmt
    (237) Statement -> . ForStmt
    (238) Statement -> . DeferStmt
    (80) Declaration -> . ConstDecl
    (81) Declaration -> . TypeDecl
    (82) Declaration -> . VarDecl
    (245) LabeledStmt -> . Label COLON Statement
    (239) SimpleStmt -> . ExpressionStmt
    (240) SimpleStmt -> . SendStmt
    (241) SimpleStmt -> . IncDecStmt
    (242) SimpleStmt -> . Assignment
    (243) SimpleStmt -> . ShortVarDecl
    (244) SimpleStmt -> .
    (307) GoStmt -> . GO Expression
    (318) ReturnStmt -> . RETURN ExpressionListPlus
    (321) BreakStmt -> . BREAK LabelPlus
    (324) ContinueStmt -> . CONTINUE LabelPlus
    (325) GotoStmt -> . GOTO Label
    (326) FallthroughStmt -> . FALLTHROUGH
    (77) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (259) IfStmt -> . IF SimpleStmtSemicolonPlus Expression Block ElsePlus
    (266) SwitchStmt -> . ExprSwitchStmt
    (267) SwitchStmt -> . TypeSwitchStmt
    (308) SelectStmt -> . SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE
    (288) ForStmt -> . FOR ForInternal Block
    (327) DeferStmt -> . DEFER Expression
    (86) ConstDecl -> . CONST ConstSpecOr
    (102) TypeDecl -> . TYPE TypeSpecOr
    (111) VarDecl -> . VARIABLE VarSpec
    (112) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (246) Label -> . IDENT
    (247) ExpressionStmt -> . Expression
    (248) SendStmt -> . Channel ARROW Expression
    (250) IncDecStmt -> . Expression IncDecOr
    (253) Assignment -> . ExpressionList assign_op ExpressionList
    (120) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (268) ExprSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE
    (276) TypeSwitchStmt -> . SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE
    (189) Expression -> . UnaryExpr
    (190) Expression -> . Expression binary_op Expression
    (249) Channel -> . Expression
    (99) ExpressionList -> . Expression ExpressionStar
    (96) IdentifierList -> . IDENT IdentStar
    (191) UnaryExpr -> . PrimaryExpr
    (192) UnaryExpr -> . unary_op UnaryExpr
    (166) PrimaryExpr -> . Operand
    (167) PrimaryExpr -> . Conversion
    (168) PrimaryExpr -> . MethodExpr
    (169) PrimaryExpr -> . PrimaryExpr Selector
    (170) PrimaryExpr -> . PrimaryExpr Index
    (171) PrimaryExpr -> . PrimaryExpr Slice
    (172) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (173) PrimaryExpr -> . PrimaryExpr Arguments
    (215) unary_op -> . ADD
    (216) unary_op -> . SUBTRACT
    (217) unary_op -> . NOT
    (218) unary_op -> . XOR
    (219) unary_op -> . MULTIPLY
    (220) unary_op -> . AND
    (221) unary_op -> . ARROW
    (128) Operand -> . Literal
    (129) Operand -> . OperandName
    (130) Operand -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (222) Conversion -> . Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS
    (223) Conversion -> . Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (187) MethodExpr -> . ReceiverType PERIOD MethodName
    (131) Literal -> . BasicLit
    (132) Literal -> . CompositeLit
    (133) Literal -> . FunctionLit
    (139) OperandName -> . IDENT
    (140) OperandName -> . QualifiedIdent
    (18) Type -> . TypeName
    (19) Type -> . TypeLit
    (20) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (188) ReceiverType -> . Type
    (134) BasicLit -> . INT
    (135) BasicLit -> . FLOAT
    (136) BasicLit -> . IMAGINARY
    (137) BasicLit -> . RUNE
    (138) BasicLit -> . STRING
    (142) CompositeLit -> . LiteralType LiteralValue
    (165) FunctionLit -> . FUNCTION Signature FunctionBody
    (141) QualifiedIdent -> . IDENT PERIOD IDENT
    (21) TypeName -> . IDENT
    (22) TypeName -> . QualifiedIdent
    (23) TypeLit -> . ArrayType
    (24) TypeLit -> . StructType
    (25) TypeLit -> . PointerType
    (26) TypeLit -> . FunctionType
    (27) TypeLit -> . InterfaceType
    (28) TypeLit -> . SliceType
    (29) TypeLit -> . MapType
    (30) TypeLit -> . ChannelType
    (143) LiteralType -> . StructType
    (144) LiteralType -> . ArrayType
    (145) LiteralType -> . LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type
    (146) LiteralType -> . SliceType
    (147) LiteralType -> . MapType
    (148) LiteralType -> . TypeName
    (31) ArrayType -> . LEFT_BRACKET ArrayLength RIGHT_BRACKET Type
    (34) StructType -> . STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE
    (44) PointerType -> . MULTIPLY BaseType
    (46) FunctionType -> . FUNCTION Signature
    (63) InterfaceType -> . INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE
    (33) SliceType -> . LEFT_BRACKET RIGHT_BRACKET Type
    (71) MapType -> . MAP LEFT_BRACKET KeyType RIGHT_BRACKET Type
    (73) ChannelType -> . ChannelTypeOr Type
    (74) ChannelTypeOr -> . CHAN
    (75) ChannelTypeOr -> . CHAN ARROW
    (76) ChannelTypeOr -> . ARROW CHAN

    RIGHT_BRACE     reduce using rule 282 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    CASE            reduce using rule 282 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 282 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    SEMICOLON       reduce using rule 244 (SimpleStmt -> .)
    GO              shift and go to state 266
    RETURN          shift and go to state 268
    BREAK           shift and go to state 269
    CONTINUE        shift and go to state 270
    GOTO            shift and go to state 271
    FALLTHROUGH     shift and go to state 272
    LEFT_BRACE      shift and go to state 101
    IF              shift and go to state 273
    SELECT          shift and go to state 276
    FOR             shift and go to state 277
    DEFER           shift and go to state 278
    CONST           shift and go to state 18
    TYPE            shift and go to state 19
    VARIABLE        shift and go to state 20
    IDENT           shift and go to state 279
    SWITCH          shift and go to state 283
    ADD             shift and go to state 129
    SUBTRACT        shift and go to state 130
    NOT             shift and go to state 131
    XOR             shift and go to state 132
    MULTIPLY        shift and go to state 133
    AND             shift and go to state 134
    ARROW           shift and go to state 135
    LEFT_PARENTHESIS shift and go to state 138
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    IMAGINARY       shift and go to state 148
    RUNE            shift and go to state 149
    STRING          shift and go to state 150
    FUNCTION        shift and go to state 152
    LEFT_BRACKET    shift and go to state 118
    STRUCT          shift and go to state 79
    INTERFACE       shift and go to state 82
    MAP             shift and go to state 83
    CHAN            shift and go to state 85

    Statement                      shift and go to state 244
    Declaration                    shift and go to state 245
    LabeledStmt                    shift and go to state 246
    SimpleStmt                     shift and go to state 247
    GoStmt                         shift and go to state 248
    ReturnStmt                     shift and go to state 249
    BreakStmt                      shift and go to state 250
    ContinueStmt                   shift and go to state 251
    GotoStmt                       shift and go to state 252
    FallthroughStmt                shift and go to state 253
    Block                          shift and go to state 254
    IfStmt                         shift and go to state 255
    SwitchStmt                     shift and go to state 256
    SelectStmt                     shift and go to state 257
    ForStmt                        shift and go to state 258
    DeferStmt                      shift and go to state 259
    ConstDecl                      shift and go to state 14
    TypeDecl                       shift and go to state 15
    VarDecl                        shift and go to state 16
    Label                          shift and go to state 260
    ExpressionStmt                 shift and go to state 261
    SendStmt                       shift and go to state 262
    IncDecStmt                     shift and go to state 263
    Assignment                     shift and go to state 264
    ShortVarDecl                   shift and go to state 265
    Expression                     shift and go to state 267
    ExprSwitchStmt                 shift and go to state 274
    TypeSwitchStmt                 shift and go to state 275
    Channel                        shift and go to state 280
    ExpressionList                 shift and go to state 281
    IdentifierList                 shift and go to state 282
    UnaryExpr                      shift and go to state 123
    PrimaryExpr                    shift and go to state 124
    unary_op                       shift and go to state 125
    Operand                        shift and go to state 126
    Conversion                     shift and go to state 127
    MethodExpr                     shift and go to state 128
    Literal                        shift and go to state 136
    OperandName                    shift and go to state 137
    Type                           shift and go to state 121
    ReceiverType                   shift and go to state 139
    BasicLit                       shift and go to state 140
    CompositeLit                   shift and go to state 141
    FunctionLit                    shift and go to state 142
    QualifiedIdent                 shift and go to state 144
    TypeName                       shift and go to state 145
    TypeLit                        shift and go to state 66
    LiteralType                    shift and go to state 151
    ArrayType                      shift and go to state 153
    StructType                     shift and go to state 154
    PointerType                    shift and go to state 72
    FunctionType                   shift and go to state 73
    InterfaceType                  shift and go to state 74
    SliceType                      shift and go to state 155
    MapType                        shift and go to state 156
    ChannelType                    shift and go to state 77
    ChannelTypeOr                  shift and go to state 84

state 483

    (285) TypeList -> Type CommaTypePlus .
    (286) CommaTypePlus -> CommaTypePlus . COMMA TYPE

    COLON           reduce using rule 285 (TypeList -> Type CommaTypePlus .)
    COMMA           shift and go to state 485


state 484

    (279) TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS .

    LEFT_BRACE      reduce using rule 279 (TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS .)


state 485

    (286) CommaTypePlus -> CommaTypePlus COMMA . TYPE

    TYPE            shift and go to state 486


state 486

    (286) CommaTypePlus -> CommaTypePlus COMMA TYPE .

    COMMA           reduce using rule 286 (CommaTypePlus -> CommaTypePlus COMMA TYPE .)
    COLON           reduce using rule 286 (CommaTypePlus -> CommaTypePlus COMMA TYPE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENT in state 34 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 53 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 53 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 53 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 53 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 53 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 53 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 53 resolved as shift
WARNING: shift/reduce conflict for MAP in state 53 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 53 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 53 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 58 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 68 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 85 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 106 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 106 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 106 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 106 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 106 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 106 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 106 resolved as shift
WARNING: shift/reduce conflict for MAP in state 106 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 106 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 106 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 110 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 135 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 143 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 143 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 225 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 225 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 231 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 231 resolved as shift
WARNING: shift/reduce conflict for ADD in state 231 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 231 resolved as shift
WARNING: shift/reduce conflict for NOT in state 231 resolved as shift
WARNING: shift/reduce conflict for XOR in state 231 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 231 resolved as shift
WARNING: shift/reduce conflict for AND in state 231 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 231 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 231 resolved as shift
WARNING: shift/reduce conflict for INT in state 231 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 231 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 231 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 231 resolved as shift
WARNING: shift/reduce conflict for STRING in state 231 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 231 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 231 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 231 resolved as shift
WARNING: shift/reduce conflict for MAP in state 231 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 231 resolved as shift
WARNING: shift/reduce conflict for ADD in state 267 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 267 resolved as shift
WARNING: shift/reduce conflict for OR in state 267 resolved as shift
WARNING: shift/reduce conflict for XOR in state 267 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 267 resolved as shift
WARNING: shift/reduce conflict for QUOTIENT in state 267 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 267 resolved as shift
WARNING: shift/reduce conflict for SHIFT_LEFT in state 267 resolved as shift
WARNING: shift/reduce conflict for SHIFT_RIGHT in state 267 resolved as shift
WARNING: shift/reduce conflict for AND in state 267 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 267 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 273 resolved as shift
WARNING: shift/reduce conflict for ADD in state 273 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 273 resolved as shift
WARNING: shift/reduce conflict for NOT in state 273 resolved as shift
WARNING: shift/reduce conflict for XOR in state 273 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 273 resolved as shift
WARNING: shift/reduce conflict for AND in state 273 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 273 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 273 resolved as shift
WARNING: shift/reduce conflict for INT in state 273 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 273 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 273 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 273 resolved as shift
WARNING: shift/reduce conflict for STRING in state 273 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 273 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 273 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 273 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 273 resolved as shift
WARNING: shift/reduce conflict for MAP in state 273 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 273 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 279 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 279 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 279 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 283 resolved as shift
WARNING: shift/reduce conflict for ADD in state 283 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 283 resolved as shift
WARNING: shift/reduce conflict for NOT in state 283 resolved as shift
WARNING: shift/reduce conflict for XOR in state 283 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 283 resolved as shift
WARNING: shift/reduce conflict for AND in state 283 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 283 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 283 resolved as shift
WARNING: shift/reduce conflict for INT in state 283 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 283 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 283 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 283 resolved as shift
WARNING: shift/reduce conflict for STRING in state 283 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 283 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 283 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 283 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 283 resolved as shift
WARNING: shift/reduce conflict for MAP in state 283 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 283 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_OR in state 287 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_AND in state 287 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 287 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 287 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 287 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_EQUAL in state 287 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 287 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_EQUAL in state 287 resolved as shift
WARNING: shift/reduce conflict for ADD in state 287 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 287 resolved as shift
WARNING: shift/reduce conflict for OR in state 287 resolved as shift
WARNING: shift/reduce conflict for XOR in state 287 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 287 resolved as shift
WARNING: shift/reduce conflict for QUOTIENT in state 287 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 287 resolved as shift
WARNING: shift/reduce conflict for SHIFT_LEFT in state 287 resolved as shift
WARNING: shift/reduce conflict for SHIFT_RIGHT in state 287 resolved as shift
WARNING: shift/reduce conflict for AND in state 287 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 287 resolved as shift
WARNING: shift/reduce conflict for RIGHT_BRACKET in state 300 resolved as shift
WARNING: shift/reduce conflict for ADD in state 300 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 300 resolved as shift
WARNING: shift/reduce conflict for NOT in state 300 resolved as shift
WARNING: shift/reduce conflict for XOR in state 300 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 300 resolved as shift
WARNING: shift/reduce conflict for AND in state 300 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 300 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 300 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 300 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 300 resolved as shift
WARNING: shift/reduce conflict for INT in state 300 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 300 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 300 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 300 resolved as shift
WARNING: shift/reduce conflict for STRING in state 300 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 300 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 300 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 300 resolved as shift
WARNING: shift/reduce conflict for MAP in state 300 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 300 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 303 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 309 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 309 resolved as shift
WARNING: shift/reduce conflict for ADD in state 326 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 326 resolved as shift
WARNING: shift/reduce conflict for OR in state 326 resolved as shift
WARNING: shift/reduce conflict for XOR in state 326 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 326 resolved as shift
WARNING: shift/reduce conflict for QUOTIENT in state 326 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 326 resolved as shift
WARNING: shift/reduce conflict for SHIFT_LEFT in state 326 resolved as shift
WARNING: shift/reduce conflict for SHIFT_RIGHT in state 326 resolved as shift
WARNING: shift/reduce conflict for AND in state 326 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 326 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 342 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 342 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 342 resolved as shift
WARNING: shift/reduce conflict for ADD in state 348 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 348 resolved as shift
WARNING: shift/reduce conflict for OR in state 348 resolved as shift
WARNING: shift/reduce conflict for XOR in state 348 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 348 resolved as shift
WARNING: shift/reduce conflict for QUOTIENT in state 348 resolved as shift
WARNING: shift/reduce conflict for REMAINDER in state 348 resolved as shift
WARNING: shift/reduce conflict for SHIFT_LEFT in state 348 resolved as shift
WARNING: shift/reduce conflict for SHIFT_RIGHT in state 348 resolved as shift
WARNING: shift/reduce conflict for AND in state 348 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 348 resolved as shift
WARNING: shift/reduce conflict for ASSIGNMENT in state 352 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 363 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 363 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 363 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 363 resolved as shift
WARNING: shift/reduce conflict for INT in state 363 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 363 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 363 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 363 resolved as shift
WARNING: shift/reduce conflict for STRING in state 363 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 363 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 363 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 363 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 363 resolved as shift
WARNING: shift/reduce conflict for MAP in state 363 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 363 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 379 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 379 resolved as shift
WARNING: shift/reduce conflict for ADD in state 379 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 379 resolved as shift
WARNING: shift/reduce conflict for NOT in state 379 resolved as shift
WARNING: shift/reduce conflict for XOR in state 379 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 379 resolved as shift
WARNING: shift/reduce conflict for AND in state 379 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 379 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 379 resolved as shift
WARNING: shift/reduce conflict for INT in state 379 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 379 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 379 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 379 resolved as shift
WARNING: shift/reduce conflict for STRING in state 379 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 379 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 379 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 379 resolved as shift
WARNING: shift/reduce conflict for MAP in state 379 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 379 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 411 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 411 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 418 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 424 resolved as shift
WARNING: shift/reduce conflict for ADD in state 424 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 424 resolved as shift
WARNING: shift/reduce conflict for NOT in state 424 resolved as shift
WARNING: shift/reduce conflict for XOR in state 424 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 424 resolved as shift
WARNING: shift/reduce conflict for AND in state 424 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 424 resolved as shift
WARNING: shift/reduce conflict for LEFT_PARENTHESIS in state 424 resolved as shift
WARNING: shift/reduce conflict for INT in state 424 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 424 resolved as shift
WARNING: shift/reduce conflict for IMAGINARY in state 424 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 424 resolved as shift
WARNING: shift/reduce conflict for STRING in state 424 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 424 resolved as shift
WARNING: shift/reduce conflict for LEFT_BRACKET in state 424 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 424 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 424 resolved as shift
WARNING: shift/reduce conflict for MAP in state 424 resolved as shift
WARNING: shift/reduce conflict for CHAN in state 424 resolved as shift
WARNING: reduce/reduce conflict in state 143 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 143
WARNING: reduce/reduce conflict in state 144 resolved using rule (TypeName -> QualifiedIdent)
WARNING: rejected rule (OperandName -> QualifiedIdent) in state 144
WARNING: reduce/reduce conflict in state 145 resolved using rule (Type -> TypeName)
WARNING: rejected rule (LiteralType -> TypeName) in state 145
WARNING: reduce/reduce conflict in state 153 resolved using rule (TypeLit -> ArrayType)
WARNING: rejected rule (LiteralType -> ArrayType) in state 153
WARNING: reduce/reduce conflict in state 154 resolved using rule (TypeLit -> StructType)
WARNING: rejected rule (LiteralType -> StructType) in state 154
WARNING: reduce/reduce conflict in state 155 resolved using rule (TypeLit -> SliceType)
WARNING: rejected rule (LiteralType -> SliceType) in state 155
WARNING: reduce/reduce conflict in state 156 resolved using rule (TypeLit -> MapType)
WARNING: rejected rule (LiteralType -> MapType) in state 156
WARNING: reduce/reduce conflict in state 225 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 225
WARNING: reduce/reduce conflict in state 226 resolved using rule (TypeName -> QualifiedIdent)
WARNING: rejected rule (OperandName -> QualifiedIdent) in state 226
WARNING: reduce/reduce conflict in state 277 resolved using rule (SimpleStmt -> <empty>)
WARNING: rejected rule (InitStmtPlus -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 279 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 279
WARNING: reduce/reduce conflict in state 309 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (FieldName -> IDENT) in state 309
WARNING: reduce/reduce conflict in state 309 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 309
WARNING: reduce/reduce conflict in state 342 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 342
WARNING: reduce/reduce conflict in state 411 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 411
WARNING: reduce/reduce conflict in state 436 resolved using rule (Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS)
WARNING: rejected rule (Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS) in state 436
WARNING: reduce/reduce conflict in state 448 resolved using rule (SimpleStmt -> <empty>)
WARNING: rejected rule (PostStmtPlus -> <empty>) in state 448
WARNING: Rule (LiteralType -> TypeName) is never reduced
WARNING: Rule (LiteralType -> ArrayType) is never reduced
WARNING: Rule (LiteralType -> StructType) is never reduced
WARNING: Rule (LiteralType -> SliceType) is never reduced
WARNING: Rule (LiteralType -> MapType) is never reduced
WARNING: Rule (InitStmtPlus -> <empty>) is never reduced
WARNING: Rule (FieldName -> IDENT) is never reduced
WARNING: Rule (PostStmtPlus -> <empty>) is never reduced
