
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTleftLEFT_BRACKETleftRIGHT_BRACEleftFLOATleftSTRINGleftELLIPSISleftPERIODleftSEMICOLONleftCOLONleftRIGHT_BRACKETleftLEFT_BRACEleftINTleftBREAKleftCONTINUEleftRETURNleftLEFT_PARENTHESISleftRIGHT_PARENTHESISrightASSIGNMENTleftLOGICAL_ORleftLOGICAL_ANDleftEQUALNOT_EQUALLESS_THANLESS_THAN_EQUALGREATER_THANGREATER_THAN_EQUALleftADDSUBTRACTORXORleftMULTIPLYQUOTIENTREMAINDERSHIFT_LEFTSHIFT_RIGHTANDAND_NOTrightNOTADD ADD_ASSIGNMENT AND AND_ASSIGNMENT AND_NOT AND_NOT_ASSIGNMENT ARROW ASSIGNMENT BREAK CASE CHAN COLON COMMA CONST CONTINUE DECREMENT DEFAULT DEFER DEFINE ELLIPSIS ELSE EQUAL FALLTHROUGH FLOAT FOR FUNCTION GO GOTO GREATER_THAN GREATER_THAN_EQUAL IDENT IF IMAGINARY IMPORT INCREMENT INT INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PARENTHESIS LESS_THAN LESS_THAN_EQUAL LOGICAL_AND LOGICAL_OR MAP MULTIPLY MUL_ASSIGNMENT NOT NOT_EQUAL OR OR_ASSIGNMENT PACKAGE PERIOD QUOTIENT QUO_ASSIGNMENT RANGE REMAINDER REM_ASSIGNMENT RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PARENTHESIS RUNE SELECT SEMICOLON SHIFT_LEFT SHIFT_LEFT_ASSIGNMENT SHIFT_RIGHT SHIFT_RIGHT_ASSIGNMENT STRING STRUCT SUBTRACT SUB_ASSIGNMENT SWITCH TYPE VARIABLE XOR XOR_ASSIGNMENTSourceFile  : PackageClause SEMICOLON ImportDeclStar TopLevelDeclStarImportDeclStar : ImportDeclStar ImportDecl SEMICOLON \n    |TopLevelDeclStar : TopLevelDeclStar TopLevelDecl SEMICOLON \n    |PackageClause : PACKAGE IDENTImportDecl : IMPORT ImportSpec \n                    | IMPORT LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESISImportSpecSemicolonStar : ImportSpecSemicolonStar ImportSpec SEMICOLON \n    |ImportSpec : PERIOD ImportPath\n                    | IDENT ImportPath\n                    | ImportPathImportPath : STRINGType : LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS\n    | LEFT_PARENTHESIS IDENT PERIOD IDENT RIGHT_PARENTHESIS\n    | TypeLit \n    | LEFT_PARENTHESIS Type RIGHT_PARENTHESISTypeLit : ArrayType \n    | StructType \n    | PointerType \n    | FunctionType \n    | InterfaceType \n    | SliceType \n    | MapType\n    | ChannelTypeArrayType : LEFT_BRACKET Expression RIGHT_BRACKET Type\n                | LEFT_BRACKET Expression RIGHT_BRACKET IDENT\n                | LEFT_BRACKET RIGHT_BRACKET IDENT PERIOD IDENTSliceType : LEFT_BRACKET RIGHT_BRACKET Type\n    | LEFT_BRACKET RIGHT_BRACKET IDENT PERIOD IDENT\n    | LEFT_BRACKET RIGHT_BRACKET IDENTStructType : STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACEFieldDeclStar : FieldDeclStar FieldDecl SEMICOLON\n    |FieldDecl : IdentifierList Type Tag\n    | IdentifierList IDENT Tag\n    | IdentifierList IDENT PERIOD IDENT Tag\n    | IdentifierList Type \n    | IdentifierList IDENT\n    | IdentifierList IDENT PERIOD IDENT\n    | EmbeddedField Tag\n    | EmbeddedFieldEmbeddedField : MULTIPLY IDENT \n    | MULTIPLY IDENT PERIOD IDENT \n    | IDENT\n    | IDENT PERIOD IDENTTag : STRINGPointerType : MULTIPLY Type\n        | MULTIPLY IDENT\n        | MULTIPLY IDENT PERIOD IDENTFunctionType : FUNCTION SignatureSignature : Parameters Result\n    | ResultResult : Parameters \n    | Type\n    | IDENT\n    | IDENT PERIOD IDENTParameters : LEFT_PARENTHESIS RIGHT_PARENTHESIS\n                | LEFT_PARENTHESIS ParameterList RIGHT_PARENTHESIS\n                | LEFT_PARENTHESIS ParameterList COMMA RIGHT_PARENTHESISParameterList : ParameterDecl ParameterDeclStarParameterDeclStar : COMMA ParameterDecl ParameterDeclStar\n    |ParameterDecl : IdentifierList ELLIPSIS Type\n    | IdentifierList ELLIPSIS IDENT\n    | IdentifierList ELLIPSIS IDENT PERIOD IDENT\n    | IdentifierList Type\n    | IdentifierList IDENT\n    | IdentifierList IDENT PERIOD IDENT\n    | ELLIPSIS Type\n    | ELLIPSIS IDENT\n    | ELLIPSIS IDENT PERIOD IDENT\n    | Type\n    | IDENT\n    | IDENT PERIOD IDENTInterfaceType : INTERFACE LEFT_BRACE MethodSpecStar RIGHT_BRACEMethodSpecStar : MethodSpecStar MethodSpec SEMICOLON\n    |MethodSpec : IDENT Signature\n                    | IDENT\n                    | IDENT PERIOD IDENTMapType : MAP LEFT_BRACKET Type RIGHT_BRACKET Type\n    | MAP LEFT_BRACKET Type RIGHT_BRACKET IDENT\n    | MAP LEFT_BRACKET Type RIGHT_BRACKET IDENT PERIOD IDENT\n    | MAP LEFT_BRACKET IDENT RIGHT_BRACKET Type\n    | MAP LEFT_BRACKET IDENT RIGHT_BRACKET IDENT\n    | MAP LEFT_BRACKET IDENT RIGHT_BRACKET IDENT PERIOD IDENT\n    | MAP LEFT_BRACKET IDENT PERIOD IDENT RIGHT_BRACKET Type\n    | MAP LEFT_BRACKET IDENT PERIOD IDENT RIGHT_BRACKET IDENT\n    | MAP LEFT_BRACKET IDENT PERIOD IDENT RIGHT_BRACKET IDENT PERIOD IDENTChannelType : CHAN Type\n    | CHAN IDENT\n    | CHAN IDENT PERIOD IDENT\n    | CHAN ARROW Type\n    | CHAN ARROW IDENT\n    | CHAN ARROW IDENT PERIOD IDENT\n    | ARROW CHAN Type\n    | ARROW CHAN IDENT\n    | ARROW CHAN IDENT PERIOD IDENT\n    Block : LEFT_BRACE StatementList RIGHT_BRACEStatementList : StatementList Statement SEMICOLON\n    |Declaration : ConstDecl \n    | TypeDecl \n    | VarDeclTopLevelDecl : Declaration \n    | FunctionDecl \n    | MethodDeclConstDecl : CONST ConstSpec\n                | CONST LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESISConstSpecStar : ConstSpecStar ConstSpec SEMICOLON\n    |ConstSpec : IdentifierList\n                | IdentifierList ASSIGNMENT ExpressionList\n                | IdentifierList Type ASSIGNMENT ExpressionList\n                | IdentifierList IDENT ASSIGNMENT ExpressionList\n                | IdentifierList IDENT PERIOD IDENT ASSIGNMENT ExpressionListIdentifierList : IDENT IdentifierListStarIdentifierListStar : COMMA IDENT IdentifierListStar\n    |ExpressionList : Expression ExpressionListStarExpressionListStar : COMMA Expression ExpressionListStar\n    |TypeDecl : TYPE TypeSpec\n                | TYPE LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESISTypeSpecStar : TypeSpecStar TypeSpec SEMICOLON\n    |TypeSpec : AliasDecl \n    | TypeDefAliasDecl : IDENT ASSIGNMENT Type\n    | IDENT ASSIGNMENT IDENT\n    | IDENT ASSIGNMENT IDENT PERIOD IDENTTypeDef : IDENT Type\n    | IDENT IDENT PERIOD IDENT\n    | IDENT IDENTVarDecl : VARIABLE VarSpec\n    | VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESISVarSpecStar : VarSpecStar VarSpec SEMICOLON \n    |VarSpec : IdentifierList Type \n                | IdentifierList Type ASSIGNMENT Expression\n                | IdentifierList IDENT ASSIGNMENT ExpressionList\n                | IdentifierList IDENT PERIOD IDENT ASSIGNMENT ExpressionList\n                | IdentifierList IDENT PERIOD IDENT\n                | IdentifierList IDENT\n                | IdentifierList ASSIGNMENT ExpressionListShortVarDecl : IdentifierList DEFINE ExpressionListFunctionDecl : FUNCTION IDENT Signature Block\n                    | FUNCTION IDENT SignatureMethodDecl : FUNCTION Receiver IDENT Signature Block\n                    | FUNCTION Receiver IDENT SignatureReceiver : ParametersLiteral : BasicLit \n    | CompositeLit \n    | FunctionLitBasicLit : INT \n    | FLOAT \n    | IMAGINARY \n    | RUNE \n    | STRINGCompositeLit : StructType LiteralValue\n                | ArrayType LiteralValue\n                | SliceType LiteralValue\n                | MapType LiteralValue\n                | Type LiteralValue\n                | IDENT LiteralValue\n                | IDENT PERIOD IDENT LiteralValue\n                | LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type LiteralValue\n                | LEFT_BRACKET ELLIPSIS RIGHT_BRACKET IDENT LiteralValue\n                | LEFT_BRACKET ELLIPSIS RIGHT_BRACKET IDENT PERIOD IDENT LiteralValueLiteralValue : LEFT_BRACE RIGHT_BRACE\n                    | LEFT_BRACE ElementList RIGHT_BRACE\n                    | LEFT_BRACE ElementList COMMA RIGHT_BRACEElementList : KeyedElement KeyedElementStarKeyedElementStar : KeyedElementStar COMMA KeyedElement \n                        |KeyedElement : Element\n                    | IDENT COLON Element\n                    | Expression COLON Element\n                    | LiteralValue COLON ElementElement : Expression \n    | LiteralValueFunctionLit : FUNCTION Signature BlockPrimaryExpr : IDENT\n    | LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS\n    | IDENT PERIOD IDENT\n    | Literal\n    | Conversion\n    | MethodExpr \n    | PrimaryExpr Selector \n    | PrimaryExpr Index \n    | PrimaryExpr Slice \n    | PrimaryExpr TypeAssertion \n    | PrimaryExpr ArgumentsSelector : PERIOD IDENTIndex : LEFT_BRACKET Expression RIGHT_BRACKETSlice : LEFT_BRACKET Expression COLON Expression RIGHT_BRACKET\n    | LEFT_BRACKET Expression COLON RIGHT_BRACKET\n    | LEFT_BRACKET COLON Expression RIGHT_BRACKET\n    | LEFT_BRACKET COLON RIGHT_BRACKET \n    | LEFT_BRACKET Expression COLON Expression COLON Expression RIGHT_BRACKET\n    | LEFT_BRACKET COLON Expression COLON Expression RIGHT_BRACKETTypeAssertion : PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS\n    | PERIOD LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS\n    | PERIOD LEFT_PARENTHESIS IDENT PERIOD IDENT RIGHT_PARENTHESISArguments : LEFT_PARENTHESIS RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS ExpressionList ELLIPSIS RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS ExpressionList ELLIPSIS COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS Type RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS Type COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS Type ELLIPSIS RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS Type ELLIPSIS COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS Type COMMA ExpressionList RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS Type COMMA ExpressionList COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS Type COMMA ExpressionList ELLIPSIS RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS Type COMMA ExpressionList ELLIPSIS COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT ELLIPSIS RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT ELLIPSIS COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT COMMA ExpressionList RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT COMMA ExpressionList COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT COMMA ExpressionList ELLIPSIS RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT COMMA ExpressionList ELLIPSIS COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT PERIOD IDENT RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT PERIOD IDENT COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT PERIOD IDENT ELLIPSIS RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT PERIOD IDENT ELLIPSIS COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT PERIOD IDENT COMMA ExpressionList RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT PERIOD IDENT COMMA ExpressionList COMMA RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT PERIOD IDENT COMMA ExpressionList ELLIPSIS RIGHT_PARENTHESIS\n              | LEFT_PARENTHESIS IDENT PERIOD IDENT COMMA ExpressionList ELLIPSIS COMMA RIGHT_PARENTHESISMethodExpr : Type PERIOD IDENT\n               | IDENT PERIOD IDENT\n               | IDENT PERIOD IDENT PERIOD IDENTExpression : UnaryExpr \n    | Expression binary_op ExpressionUnaryExpr : PrimaryExpr \n    | unary_op UnaryExprbinary_op : LOGICAL_OR \n    | LOGICAL_AND \n    | rel_op \n    | add_op \n    | mul_oprel_op : EQUAL \n    | NOT_EQUAL \n    | LESS_THAN \n    | LESS_THAN_EQUAL \n    | GREATER_THAN \n    | GREATER_THAN_EQUALadd_op : ADD \n    | SUBTRACT \n    | OR \n    | XORmul_op : MULTIPLY \n    | QUOTIENT \n    | REMAINDER \n    | SHIFT_LEFT \n    | SHIFT_RIGHT \n    | AND \n    | AND_NOTunary_op : ADD \n    | SUBTRACT \n    | NOT \n    | XOR \n    | MULTIPLY \n    | AND \n    | ARROWConversion : Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS\n    | Type LEFT_PARENTHESIS Expression LEFT_PARENTHESIS\n    | IDENT LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS\n    | IDENT LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS\n    | IDENT PERIOD IDENT LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS\n    | IDENT PERIOD IDENT LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESISStatement : Declaration \n    | LabeledStmt \n    | SimpleStmt \n    | GoStmt \n    | ReturnStmt \n    | BreakStmt \n    | ContinueStmt \n    | GotoStmt \n    | FallthroughStmt \n    | Block \n    | IfStmt \n    | SwitchStmt \n    | SelectStmt \n    | ForStmt \n    | DeferStmt SimpleStmt : ExpressionStmt \n    | SendStmt \n    | IncDecStmt \n    | Assignment \n    | ShortVarDecl \n    |LabeledStmt : IDENT COLON Statement ExpressionStmt : ExpressionSendStmt : Expression ARROW ExpressionIncDecStmt : Expression INCREMENT\n                    | Expression DECREMENTAssignment : ExpressionList assign_op ExpressionListassign_op : ADD_ASSIGNMENT\n                | SUB_ASSIGNMENT\n                | MUL_ASSIGNMENT\n                | QUO_ASSIGNMENT\n                | REM_ASSIGNMENT\n                | AND_ASSIGNMENT\n                | AND_NOT_ASSIGNMENT\n                | OR_ASSIGNMENT\n                | XOR_ASSIGNMENT\n                | SHIFT_LEFT_ASSIGNMENT\n                | SHIFT_RIGHT_ASSIGNMENT\n                | ASSIGNMENTIfStmt : IF Expression Block\n    | IF SimpleStmt SEMICOLON Expression Block\n    | IF Expression Block Expression Block ELSE IfStmt\n    | IF Expression Block Expression Block ELSE Block\n    | IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt\n    | IF SimpleStmt SEMICOLON Expression Block ELSE BlockSwitchStmt : ExprSwitchStmt \n    | TypeSwitchStmtExprSwitchStmt : SWITCH LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE\n    | SWITCH SimpleStmt SEMICOLON LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE\n    | SWITCH SimpleStmt SEMICOLON Expression LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE\n    | SWITCH Expression LEFT_BRACE ExprCaseClauseStar RIGHT_BRACEExprCaseClauseStar : ExprCaseClauseStar ExprCaseClause \n    |ExprCaseClause : ExprSwitchCase COLON StatementListExprSwitchCase : CASE ExpressionList \n    | DEFAULTTypeSwitchStmt  : SWITCH TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE\n    | SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACETypeCaseClauseStar : TypeCaseClauseStar TypeCaseClause \n    |TypeSwitchGuard : IDENT DEFINE PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS\n    | PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESISTypeCaseClause  : TypeSwitchCase COLON StatementList TypeSwitchCase : CASE TypeList \n    | DEFAULTTypeList : Type CommaTypeStar\n    | IDENT CommaTypeStar\n    | IDENT PERIOD IDENT CommaTypeStarCommaTypeStar : CommaTypeStar COMMA Type \n    | CommaTypeStar COMMA IDENT\n    | CommaTypeStar COMMA IDENT PERIOD IDENT\n    |ForStmt : FOR ForClause Block\n    | FOR RangeClause Block\n    | FOR Expression Block\n    | FOR BlockForClause : SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt\n    | SimpleStmt SEMICOLON SEMICOLON SimpleStmt\n    | SEMICOLON Expression SEMICOLON SimpleStmt\n    | SEMICOLON SEMICOLON SimpleStmt\n    | SimpleStmt SEMICOLON Expression SEMICOLON\n    | SimpleStmt SEMICOLON SEMICOLON\n    | SEMICOLON Expression SEMICOLON\n    | SEMICOLON SEMICOLONRangeClause : RANGE Expression\n    | IdentifierList DEFINE RANGE Expression\n    | ExpressionList ASSIGNMENT RANGE ExpressionGoStmt : GO Expression SelectStmt : SELECT LEFT_BRACE CommClauseStar RIGHT_BRACE CommClauseStar : CommClauseStar CommClause \n    |CommClause : CommCase COLON StatementListCommCase : CASE SendStmt\n    | CASE RecvStmt \n    | DEFAULTRecvStmt : IdentifierList DEFINE Expression\n             | ExpressionList ASSIGNMENT Expression\n             | ExpressionReturnStmt : RETURN ExpressionList\n                    | RETURNBreakStmt : BREAK IDENT\n                | BREAKContinueStmt : CONTINUE IDENT\n                | CONTINUEGotoStmt : GOTO IDENTFallthroughStmt : FALLTHROUGHDeferStmt : DEFER Expression'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'SourceFile':([0,],[1,]),'PackageClause':([0,],[2,]),'ImportDeclStar':([4,],[6,]),'TopLevelDeclStar':([6,],[7,]),'ImportDecl':([6,],[8,]),'TopLevelDecl':([7,],[10,]),'Declaration':([7,179,373,635,639,665,],[11,277,277,277,277,277,]),'FunctionDecl':([7,],[12,]),'MethodDecl':([7,],[13,]),'ConstDecl':([7,179,373,635,639,665,],[14,14,14,14,14,14,]),'TypeDecl':([7,179,373,635,639,665,],[15,15,15,15,15,15,]),'VarDecl':([7,179,373,635,639,665,],[16,16,16,16,16,16,]),'ImportSpec':([9,45,],[22,95,]),'ImportPath':([9,24,26,45,],[25,46,47,25,]),'Receiver':([17,],[30,]),'Parameters':([17,29,48,51,71,135,235,354,],[31,51,51,100,51,51,51,51,]),'ConstSpec':([18,80,],[33,159,]),'IdentifierList':([18,20,32,53,80,90,151,179,241,306,310,313,373,483,543,545,548,599,635,639,665,],[35,44,76,76,35,44,76,312,347,312,406,312,312,312,596,312,312,312,312,312,312,]),'TypeSpec':([19,86,],[37,167,]),'AliasDecl':([19,86,],[39,39,]),'TypeDef':([19,86,],[40,40,]),'VarSpec':([20,90,],[42,172,]),'ImportSpecSemicolonStar':([23,],[45,]),'Signature':([29,48,71,135,235,354,],[50,96,145,240,343,459,]),'Result':([29,48,51,71,135,235,354,],[52,52,101,52,52,52,52,]),'Type':([29,32,35,41,44,48,51,53,64,66,69,71,72,76,77,81,88,92,104,106,111,112,120,135,140,143,144,151,152,162,163,173,175,179,184,185,210,213,215,223,224,226,234,235,247,263,298,300,306,310,311,313,315,332,334,339,347,354,355,356,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,536,543,545,548,549,550,554,563,569,582,599,612,635,636,637,639,647,665,673,],[54,78,82,89,91,54,54,103,107,137,141,54,147,153,155,107,170,107,107,209,107,229,137,54,244,248,250,78,256,107,107,107,107,107,316,107,107,107,107,107,337,229,107,54,359,107,107,107,107,107,107,107,418,434,107,137,452,54,461,464,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,589,107,107,107,107,107,107,434,107,107,107,645,107,107,107,107,434,107,677,]),'TypeLit':([29,32,35,41,44,48,51,53,64,66,69,71,72,76,77,81,88,92,104,106,111,112,120,135,140,143,144,151,152,162,163,173,175,179,184,185,210,213,215,223,224,226,234,235,247,263,298,300,306,310,311,313,315,332,334,339,347,354,355,356,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,536,543,545,548,549,550,554,563,569,582,599,612,635,636,637,639,647,665,673,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ArrayType':([29,32,35,41,44,48,51,53,64,66,69,71,72,76,77,81,88,92,104,106,111,112,120,135,140,143,144,151,152,162,163,173,175,179,184,185,210,213,215,223,224,226,234,235,247,263,298,300,306,310,311,313,315,332,334,339,347,354,355,356,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,536,543,545,548,549,550,554,563,569,582,599,612,635,636,637,639,647,665,673,],[56,56,56,56,56,56,56,56,132,56,56,56,56,56,56,132,56,132,132,56,132,230,56,56,56,56,56,56,56,132,132,132,132,132,56,132,132,132,132,132,230,230,132,56,56,132,132,132,132,132,132,132,56,56,132,56,56,56,56,56,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,56,132,132,132,132,132,132,56,132,132,132,56,132,132,132,132,56,132,56,]),'StructType':([29,32,35,41,44,48,51,53,64,66,69,71,72,76,77,81,88,92,104,106,111,112,120,135,140,143,144,151,152,162,163,173,175,179,184,185,210,213,215,223,224,226,234,235,247,263,298,300,306,310,311,313,315,332,334,339,347,354,355,356,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,536,543,545,548,549,550,554,563,569,582,599,612,635,636,637,639,647,665,673,],[57,57,57,57,57,57,57,57,131,57,57,57,57,57,57,131,57,131,131,57,131,231,57,57,57,57,57,57,57,131,131,131,131,131,57,131,131,131,131,131,231,231,131,57,57,131,131,131,131,131,131,131,57,57,131,57,57,57,57,57,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,57,131,131,131,131,131,131,57,131,131,131,57,131,131,131,131,57,131,57,]),'PointerType':([29,32,35,41,44,48,51,53,64,66,69,71,72,76,77,81,88,92,104,106,111,112,120,135,140,143,144,151,152,162,163,173,175,179,184,185,210,213,215,223,224,226,234,235,247,263,298,300,306,310,311,313,315,332,334,339,347,354,355,356,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,536,543,545,548,549,550,554,563,569,582,599,612,635,636,637,639,647,665,673,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FunctionType':([29,32,35,41,44,48,51,53,64,66,69,71,72,76,77,81,88,92,104,106,111,112,120,135,140,143,144,151,152,162,163,173,175,179,184,185,210,213,215,223,224,226,234,235,247,263,298,300,306,310,311,313,315,332,334,339,347,354,355,356,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,536,543,545,548,549,550,554,563,569,582,599,612,635,636,637,639,647,665,673,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'InterfaceType':([29,32,35,41,44,48,51,53,64,66,69,71,72,76,77,81,88,92,104,106,111,112,120,135,140,143,144,151,152,162,163,173,175,179,184,185,210,213,215,223,224,226,234,235,247,263,298,300,306,310,311,313,315,332,334,339,347,354,355,356,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,536,543,545,548,549,550,554,563,569,582,599,612,635,636,637,639,647,665,673,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'SliceType':([29,32,35,41,44,48,51,53,64,66,69,71,72,76,77,81,88,92,104,106,111,112,120,135,140,143,144,151,152,162,163,173,175,179,184,185,210,213,215,223,224,226,234,235,247,263,298,300,306,310,311,313,315,332,334,339,347,354,355,356,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,536,543,545,548,549,550,554,563,569,582,599,612,635,636,637,639,647,665,673,],[61,61,61,61,61,61,61,61,133,61,61,61,61,61,61,133,61,133,133,61,133,232,61,61,61,61,61,61,61,133,133,133,133,133,61,133,133,133,133,133,232,232,133,61,61,133,133,133,133,133,133,133,61,61,133,61,61,61,61,61,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,61,133,133,133,133,133,133,61,133,133,133,61,133,133,133,133,61,133,61,]),'MapType':([29,32,35,41,44,48,51,53,64,66,69,71,72,76,77,81,88,92,104,106,111,112,120,135,140,143,144,151,152,162,163,173,175,179,184,185,210,213,215,223,224,226,234,235,247,263,298,300,306,310,311,313,315,332,334,339,347,354,355,356,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,536,543,545,548,549,550,554,563,569,582,599,612,635,636,637,639,647,665,673,],[62,62,62,62,62,62,62,62,134,62,62,62,62,62,62,134,62,134,134,62,134,233,62,62,62,62,62,62,62,134,134,134,134,134,62,134,134,134,134,134,233,233,134,62,62,134,134,134,134,134,134,134,62,62,134,62,62,62,62,62,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,62,134,134,134,134,134,134,62,134,134,134,62,134,134,134,134,62,134,62,]),'ChannelType':([29,32,35,41,44,48,51,53,64,66,69,71,72,76,77,81,88,92,104,106,111,112,120,135,140,143,144,151,152,162,163,173,175,179,184,185,210,213,215,223,224,226,234,235,247,263,298,300,306,310,311,313,315,332,334,339,347,354,355,356,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,536,543,545,548,549,550,554,563,569,582,599,612,635,636,637,639,647,665,673,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'ParameterList':([32,53,],[74,74,]),'ParameterDecl':([32,53,151,],[75,75,255,]),'ConstSpecStar':([34,],[80,]),'IdentifierListStar':([36,79,102,165,292,348,397,408,415,],[84,84,84,267,84,84,84,84,84,]),'TypeSpecStar':([38,],[86,]),'VarSpecStar':([43,],[90,]),'Block':([50,145,179,240,310,343,373,395,399,401,402,538,539,633,634,635,639,665,],[98,252,286,344,400,344,286,476,479,480,481,590,591,657,659,286,286,286,]),'Expression':([64,81,92,104,112,162,163,173,175,179,185,210,213,215,223,224,226,234,263,298,300,306,310,311,313,334,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,500,514,543,545,548,549,550,554,569,582,599,635,636,637,639,665,],[105,161,161,105,227,161,161,272,161,299,318,320,327,330,333,161,227,105,368,374,161,395,402,409,413,438,161,161,299,474,161,484,485,161,502,502,502,507,512,161,161,538,539,546,299,161,557,327,571,595,299,299,601,602,161,619,161,299,299,661,662,299,299,]),'UnaryExpr':([64,81,92,104,111,112,162,163,173,175,179,185,210,213,215,223,224,226,234,263,298,300,306,310,311,313,334,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,500,514,543,545,548,549,550,554,569,582,599,635,636,637,639,665,],[109,109,109,109,225,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'PrimaryExpr':([64,81,92,104,111,112,162,163,173,175,179,185,210,213,215,223,224,226,234,263,298,300,306,310,311,313,334,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,543,545,548,549,550,554,569,582,599,635,636,637,639,665,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,416,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,416,562,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'unary_op':([64,81,92,104,111,112,162,163,173,175,179,185,210,213,215,223,224,226,234,263,298,300,306,310,311,313,334,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,500,514,543,545,548,549,550,554,569,582,599,635,636,637,639,665,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'Literal':([64,81,92,104,111,112,162,163,173,175,179,185,210,213,215,223,224,226,234,263,298,300,306,310,311,313,334,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,543,545,548,549,550,554,569,582,599,635,636,637,639,665,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'Conversion':([64,81,92,104,111,112,162,163,173,175,179,185,210,213,215,223,224,226,234,263,298,300,306,310,311,313,334,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,543,545,548,549,550,554,569,582,599,635,636,637,639,665,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'MethodExpr':([64,81,92,104,111,112,162,163,173,175,179,185,210,213,215,223,224,226,234,263,298,300,306,310,311,313,334,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,543,545,548,549,550,554,569,582,599,635,636,637,639,665,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'BasicLit':([64,81,92,104,111,112,162,163,173,175,179,185,210,213,215,223,224,226,234,263,298,300,306,310,311,313,334,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,543,545,548,549,550,554,569,582,599,635,636,637,639,665,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'CompositeLit':([64,81,92,104,111,112,162,163,173,175,179,185,210,213,215,223,224,226,234,263,298,300,306,310,311,313,334,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,543,545,548,549,550,554,569,582,599,635,636,637,639,665,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'FunctionLit':([64,81,92,104,111,112,162,163,173,175,179,185,210,213,215,223,224,226,234,263,298,300,306,310,311,313,334,369,371,373,375,379,404,405,410,426,427,428,430,437,444,447,476,477,482,483,486,490,493,500,514,543,545,548,549,550,554,569,582,599,635,636,637,639,665,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'ParameterDeclStar':([75,255,],[150,364,]),'ExpressionList':([81,92,162,163,175,179,224,300,306,310,313,369,371,373,379,410,444,447,483,486,543,545,548,554,582,599,635,639,665,],[160,174,264,265,273,301,336,378,301,407,301,471,472,301,475,488,520,524,301,488,597,301,301,604,628,301,301,301,301,]),'StatementList':([99,592,603,643,],[179,635,639,665,]),'binary_op':([105,161,227,272,299,318,320,327,330,333,368,374,395,402,409,413,438,474,484,485,502,507,512,538,539,546,557,571,595,601,602,619,661,662,],[185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,]),'rel_op':([105,161,227,272,299,318,320,327,330,333,368,374,395,402,409,413,438,474,484,485,502,507,512,538,539,546,557,571,595,601,602,619,661,662,],[188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,]),'add_op':([105,161,227,272,299,318,320,327,330,333,368,374,395,402,409,413,438,474,484,485,502,507,512,538,539,546,557,571,595,601,602,619,661,662,],[189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,]),'mul_op':([105,161,227,272,299,318,320,327,330,333,368,374,395,402,409,413,438,474,484,485,502,507,512,538,539,546,557,571,595,601,602,619,661,662,],[190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,]),'LiteralValue':([107,108,131,132,133,134,213,228,229,230,231,232,233,292,326,329,337,338,397,408,415,418,419,426,427,428,450,500,527,559,564,],[212,216,236,237,238,239,328,216,212,237,236,238,239,216,216,431,212,216,216,216,216,495,496,503,503,503,431,328,431,216,616,]),'Selector':([110,416,562,],[217,217,217,]),'Index':([110,416,562,],[218,218,218,]),'Slice':([110,416,562,],[219,219,219,]),'TypeAssertion':([110,416,562,],[220,220,220,]),'Arguments':([110,416,562,],[221,221,221,]),'FieldDeclStar':([136,],[241,]),'MethodSpecStar':([139,],[243,]),'ExpressionListStar':([161,299,368,395,402,413,595,],[262,262,470,262,262,262,262,]),'Statement':([179,373,635,639,665,],[276,473,276,276,276,]),'LabeledStmt':([179,373,635,639,665,],[278,278,278,278,278,]),'SimpleStmt':([179,306,310,313,373,483,545,548,599,635,639,665,],[279,396,403,412,279,547,598,600,638,279,279,279,]),'GoStmt':([179,373,635,639,665,],[280,280,280,280,280,]),'ReturnStmt':([179,373,635,639,665,],[281,281,281,281,281,]),'BreakStmt':([179,373,635,639,665,],[282,282,282,282,282,]),'ContinueStmt':([179,373,635,639,665,],[283,283,283,283,283,]),'GotoStmt':([179,373,635,639,665,],[284,284,284,284,284,]),'FallthroughStmt':([179,373,635,639,665,],[285,285,285,285,285,]),'IfStmt':([179,373,633,634,635,639,665,],[287,287,658,660,287,287,287,]),'SwitchStmt':([179,373,635,639,665,],[288,288,288,288,288,]),'SelectStmt':([179,373,635,639,665,],[289,289,289,289,289,]),'ForStmt':([179,373,635,639,665,],[290,290,290,290,290,]),'DeferStmt':([179,373,635,639,665,],[291,291,291,291,291,]),'ExpressionStmt':([179,306,310,313,373,483,545,548,599,635,639,665,],[293,293,293,293,293,293,293,293,293,293,293,293,]),'SendStmt':([179,306,310,313,373,483,543,545,548,599,635,639,665,],[294,294,294,294,294,294,593,294,294,294,294,294,294,]),'IncDecStmt':([179,306,310,313,373,483,545,548,599,635,639,665,],[295,295,295,295,295,295,295,295,295,295,295,295,]),'Assignment':([179,306,310,313,373,483,545,548,599,635,639,665,],[296,296,296,296,296,296,296,296,296,296,296,296,]),'ShortVarDecl':([179,306,310,313,373,483,545,548,599,635,639,665,],[297,297,297,297,297,297,297,297,297,297,297,297,]),'ExprSwitchStmt':([179,373,635,639,665,],[307,307,307,307,307,]),'TypeSwitchStmt':([179,373,635,639,665,],[308,308,308,308,308,]),'ElementList':([213,],[323,]),'KeyedElement':([213,500,],[324,565,]),'Element':([213,426,427,428,500,],[325,501,504,505,325,]),'FieldDecl':([241,],[346,]),'EmbeddedField':([241,],[349,]),'MethodSpec':([243,],[353,]),'assign_op':([301,407,],[379,379,]),'ForClause':([310,],[399,]),'RangeClause':([310,],[401,]),'TypeSwitchGuard':([313,490,],[414,558,]),'KeyedElementStar':([324,],[425,]),'Tag':([349,452,453,584,],[455,528,529,631,]),'CommClauseStar':([398,],[478,]),'ExprCaseClauseStar':([411,491,556,606,],[489,560,605,641,]),'CommClause':([478,],[541,]),'CommCase':([478,],[542,]),'ExprCaseClause':([489,560,605,641,],[552,552,552,552,]),'ExprSwitchCase':([489,560,605,641,],[553,553,553,553,]),'TypeCaseClauseStar':([492,607,],[561,642,]),'RecvStmt':([543,],[594,]),'TypeCaseClause':([561,642,],[610,610,]),'TypeSwitchCase':([561,642,],[611,611,]),'TypeList':([612,],[644,]),'CommaTypeStar':([645,646,674,],[666,667,679,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceFile","S'",1,None,None,None),
  ('SourceFile -> PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar','SourceFile',4,'p_source_file','parser.py',37),
  ('ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON','ImportDeclStar',3,'p_import_decl_star','parser.py',40),
  ('ImportDeclStar -> <empty>','ImportDeclStar',0,'p_import_decl_star','parser.py',41),
  ('TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON','TopLevelDeclStar',3,'p_top_level_decl_star','parser.py',47),
  ('TopLevelDeclStar -> <empty>','TopLevelDeclStar',0,'p_top_level_decl_star','parser.py',48),
  ('PackageClause -> PACKAGE IDENT','PackageClause',2,'p_package_clause','parser.py',54),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',57),
  ('ImportDecl -> IMPORT LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS','ImportDecl',4,'p_import_decl','parser.py',58),
  ('ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON','ImportSpecSemicolonStar',3,'p_import_spec_semicolon_star','parser.py',64),
  ('ImportSpecSemicolonStar -> <empty>','ImportSpecSemicolonStar',0,'p_import_spec_semicolon_star','parser.py',65),
  ('ImportSpec -> PERIOD ImportPath','ImportSpec',2,'p_import_spec','parser.py',71),
  ('ImportSpec -> IDENT ImportPath','ImportSpec',2,'p_import_spec','parser.py',72),
  ('ImportSpec -> ImportPath','ImportSpec',1,'p_import_spec','parser.py',73),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',79),
  ('Type -> LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS','Type',3,'p_type','parser.py',84),
  ('Type -> LEFT_PARENTHESIS IDENT PERIOD IDENT RIGHT_PARENTHESIS','Type',5,'p_type','parser.py',85),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',86),
  ('Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS','Type',3,'p_type','parser.py',87),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',97),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',98),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',99),
  ('TypeLit -> FunctionType','TypeLit',1,'p_type_lit','parser.py',100),
  ('TypeLit -> InterfaceType','TypeLit',1,'p_type_lit','parser.py',101),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',102),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',103),
  ('TypeLit -> ChannelType','TypeLit',1,'p_type_lit','parser.py',104),
  ('ArrayType -> LEFT_BRACKET Expression RIGHT_BRACKET Type','ArrayType',4,'p_array_type','parser.py',107),
  ('ArrayType -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT','ArrayType',4,'p_array_type','parser.py',108),
  ('ArrayType -> LEFT_BRACKET RIGHT_BRACKET IDENT PERIOD IDENT','ArrayType',5,'p_array_type','parser.py',109),
  ('SliceType -> LEFT_BRACKET RIGHT_BRACKET Type','SliceType',3,'p_slice_type','parser.py',119),
  ('SliceType -> LEFT_BRACKET RIGHT_BRACKET IDENT PERIOD IDENT','SliceType',5,'p_slice_type','parser.py',120),
  ('SliceType -> LEFT_BRACKET RIGHT_BRACKET IDENT','SliceType',3,'p_slice_type','parser.py',121),
  ('StructType -> STRUCT LEFT_BRACE FieldDeclStar RIGHT_BRACE','StructType',4,'p_struct_type','parser.py',131),
  ('FieldDeclStar -> FieldDeclStar FieldDecl SEMICOLON','FieldDeclStar',3,'p_field_decl_star','parser.py',135),
  ('FieldDeclStar -> <empty>','FieldDeclStar',0,'p_field_decl_star','parser.py',136),
  ('FieldDecl -> IdentifierList Type Tag','FieldDecl',3,'p_field_decl','parser.py',142),
  ('FieldDecl -> IdentifierList IDENT Tag','FieldDecl',3,'p_field_decl','parser.py',143),
  ('FieldDecl -> IdentifierList IDENT PERIOD IDENT Tag','FieldDecl',5,'p_field_decl','parser.py',144),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_field_decl','parser.py',145),
  ('FieldDecl -> IdentifierList IDENT','FieldDecl',2,'p_field_decl','parser.py',146),
  ('FieldDecl -> IdentifierList IDENT PERIOD IDENT','FieldDecl',4,'p_field_decl','parser.py',147),
  ('FieldDecl -> EmbeddedField Tag','FieldDecl',2,'p_field_decl','parser.py',148),
  ('FieldDecl -> EmbeddedField','FieldDecl',1,'p_field_decl','parser.py',149),
  ('EmbeddedField -> MULTIPLY IDENT','EmbeddedField',2,'p_embedded_field','parser.py',157),
  ('EmbeddedField -> MULTIPLY IDENT PERIOD IDENT','EmbeddedField',4,'p_embedded_field','parser.py',158),
  ('EmbeddedField -> IDENT','EmbeddedField',1,'p_embedded_field','parser.py',159),
  ('EmbeddedField -> IDENT PERIOD IDENT','EmbeddedField',3,'p_embedded_field','parser.py',160),
  ('Tag -> STRING','Tag',1,'p_tag','parser.py',168),
  ('PointerType -> MULTIPLY Type','PointerType',2,'p_pointer_type','parser.py',171),
  ('PointerType -> MULTIPLY IDENT','PointerType',2,'p_pointer_type','parser.py',172),
  ('PointerType -> MULTIPLY IDENT PERIOD IDENT','PointerType',4,'p_pointer_type','parser.py',173),
  ('FunctionType -> FUNCTION Signature','FunctionType',2,'p_function_type','parser.py',176),
  ('Signature -> Parameters Result','Signature',2,'p_signature','parser.py',179),
  ('Signature -> Result','Signature',1,'p_signature','parser.py',180),
  ('Result -> Parameters','Result',1,'p_result','parser.py',186),
  ('Result -> Type','Result',1,'p_result','parser.py',187),
  ('Result -> IDENT','Result',1,'p_result','parser.py',188),
  ('Result -> IDENT PERIOD IDENT','Result',3,'p_result','parser.py',189),
  ('Parameters -> LEFT_PARENTHESIS RIGHT_PARENTHESIS','Parameters',2,'p_parameters','parser.py',198),
  ('Parameters -> LEFT_PARENTHESIS ParameterList RIGHT_PARENTHESIS','Parameters',3,'p_parameters','parser.py',199),
  ('Parameters -> LEFT_PARENTHESIS ParameterList COMMA RIGHT_PARENTHESIS','Parameters',4,'p_parameters','parser.py',200),
  ('ParameterList -> ParameterDecl ParameterDeclStar','ParameterList',2,'p_parameter_list','parser.py',206),
  ('ParameterDeclStar -> COMMA ParameterDecl ParameterDeclStar','ParameterDeclStar',3,'p_parameter_decl_star','parser.py',209),
  ('ParameterDeclStar -> <empty>','ParameterDeclStar',0,'p_parameter_decl_star','parser.py',210),
  ('ParameterDecl -> IdentifierList ELLIPSIS Type','ParameterDecl',3,'p_ParameterDecl','parser.py',217),
  ('ParameterDecl -> IdentifierList ELLIPSIS IDENT','ParameterDecl',3,'p_ParameterDecl','parser.py',218),
  ('ParameterDecl -> IdentifierList ELLIPSIS IDENT PERIOD IDENT','ParameterDecl',5,'p_ParameterDecl','parser.py',219),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_ParameterDecl','parser.py',220),
  ('ParameterDecl -> IdentifierList IDENT','ParameterDecl',2,'p_ParameterDecl','parser.py',221),
  ('ParameterDecl -> IdentifierList IDENT PERIOD IDENT','ParameterDecl',4,'p_ParameterDecl','parser.py',222),
  ('ParameterDecl -> ELLIPSIS Type','ParameterDecl',2,'p_ParameterDecl','parser.py',223),
  ('ParameterDecl -> ELLIPSIS IDENT','ParameterDecl',2,'p_ParameterDecl','parser.py',224),
  ('ParameterDecl -> ELLIPSIS IDENT PERIOD IDENT','ParameterDecl',4,'p_ParameterDecl','parser.py',225),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_ParameterDecl','parser.py',226),
  ('ParameterDecl -> IDENT','ParameterDecl',1,'p_ParameterDecl','parser.py',227),
  ('ParameterDecl -> IDENT PERIOD IDENT','ParameterDecl',3,'p_ParameterDecl','parser.py',228),
  ('InterfaceType -> INTERFACE LEFT_BRACE MethodSpecStar RIGHT_BRACE','InterfaceType',4,'p_interface_type','parser.py',237),
  ('MethodSpecStar -> MethodSpecStar MethodSpec SEMICOLON','MethodSpecStar',3,'p_method_spec_star','parser.py',240),
  ('MethodSpecStar -> <empty>','MethodSpecStar',0,'p_method_spec_star','parser.py',241),
  ('MethodSpec -> IDENT Signature','MethodSpec',2,'p_method_spec','parser.py',247),
  ('MethodSpec -> IDENT','MethodSpec',1,'p_method_spec','parser.py',248),
  ('MethodSpec -> IDENT PERIOD IDENT','MethodSpec',3,'p_method_spec','parser.py',249),
  ('MapType -> MAP LEFT_BRACKET Type RIGHT_BRACKET Type','MapType',5,'p_MapType','parser.py',257),
  ('MapType -> MAP LEFT_BRACKET Type RIGHT_BRACKET IDENT','MapType',5,'p_MapType','parser.py',258),
  ('MapType -> MAP LEFT_BRACKET Type RIGHT_BRACKET IDENT PERIOD IDENT','MapType',7,'p_MapType','parser.py',259),
  ('MapType -> MAP LEFT_BRACKET IDENT RIGHT_BRACKET Type','MapType',5,'p_MapType','parser.py',260),
  ('MapType -> MAP LEFT_BRACKET IDENT RIGHT_BRACKET IDENT','MapType',5,'p_MapType','parser.py',261),
  ('MapType -> MAP LEFT_BRACKET IDENT RIGHT_BRACKET IDENT PERIOD IDENT','MapType',7,'p_MapType','parser.py',262),
  ('MapType -> MAP LEFT_BRACKET IDENT PERIOD IDENT RIGHT_BRACKET Type','MapType',7,'p_MapType','parser.py',263),
  ('MapType -> MAP LEFT_BRACKET IDENT PERIOD IDENT RIGHT_BRACKET IDENT','MapType',7,'p_MapType','parser.py',264),
  ('MapType -> MAP LEFT_BRACKET IDENT PERIOD IDENT RIGHT_BRACKET IDENT PERIOD IDENT','MapType',9,'p_MapType','parser.py',265),
  ('ChannelType -> CHAN Type','ChannelType',2,'p_channel_type','parser.py',273),
  ('ChannelType -> CHAN IDENT','ChannelType',2,'p_channel_type','parser.py',274),
  ('ChannelType -> CHAN IDENT PERIOD IDENT','ChannelType',4,'p_channel_type','parser.py',275),
  ('ChannelType -> CHAN ARROW Type','ChannelType',3,'p_channel_type','parser.py',276),
  ('ChannelType -> CHAN ARROW IDENT','ChannelType',3,'p_channel_type','parser.py',277),
  ('ChannelType -> CHAN ARROW IDENT PERIOD IDENT','ChannelType',5,'p_channel_type','parser.py',278),
  ('ChannelType -> ARROW CHAN Type','ChannelType',3,'p_channel_type','parser.py',279),
  ('ChannelType -> ARROW CHAN IDENT','ChannelType',3,'p_channel_type','parser.py',280),
  ('ChannelType -> ARROW CHAN IDENT PERIOD IDENT','ChannelType',5,'p_channel_type','parser.py',281),
  ('Block -> LEFT_BRACE StatementList RIGHT_BRACE','Block',3,'p_block','parser.py',290),
  ('StatementList -> StatementList Statement SEMICOLON','StatementList',3,'p_statement_list','parser.py',293),
  ('StatementList -> <empty>','StatementList',0,'p_statement_list','parser.py',294),
  ('Declaration -> ConstDecl','Declaration',1,'p_declaration','parser.py',301),
  ('Declaration -> TypeDecl','Declaration',1,'p_declaration','parser.py',302),
  ('Declaration -> VarDecl','Declaration',1,'p_declaration','parser.py',303),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_top_level_decl','parser.py',306),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_top_level_decl','parser.py',307),
  ('TopLevelDecl -> MethodDecl','TopLevelDecl',1,'p_top_level_decl','parser.py',308),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',311),
  ('ConstDecl -> CONST LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS','ConstDecl',4,'p_const_decl','parser.py',312),
  ('ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON','ConstSpecStar',3,'p_const_spec_star','parser.py',318),
  ('ConstSpecStar -> <empty>','ConstSpecStar',0,'p_const_spec_star','parser.py',319),
  ('ConstSpec -> IdentifierList','ConstSpec',1,'p_const_spec','parser.py',325),
  ('ConstSpec -> IdentifierList ASSIGNMENT ExpressionList','ConstSpec',3,'p_const_spec','parser.py',326),
  ('ConstSpec -> IdentifierList Type ASSIGNMENT ExpressionList','ConstSpec',4,'p_const_spec','parser.py',327),
  ('ConstSpec -> IdentifierList IDENT ASSIGNMENT ExpressionList','ConstSpec',4,'p_const_spec','parser.py',328),
  ('ConstSpec -> IdentifierList IDENT PERIOD IDENT ASSIGNMENT ExpressionList','ConstSpec',6,'p_const_spec','parser.py',329),
  ('IdentifierList -> IDENT IdentifierListStar','IdentifierList',2,'p_identifier_list','parser.py',341),
  ('IdentifierListStar -> COMMA IDENT IdentifierListStar','IdentifierListStar',3,'p_identifier_list_star','parser.py',344),
  ('IdentifierListStar -> <empty>','IdentifierListStar',0,'p_identifier_list_star','parser.py',345),
  ('ExpressionList -> Expression ExpressionListStar','ExpressionList',2,'p_expression_list','parser.py',351),
  ('ExpressionListStar -> COMMA Expression ExpressionListStar','ExpressionListStar',3,'p_expression_list_star','parser.py',354),
  ('ExpressionListStar -> <empty>','ExpressionListStar',0,'p_expression_list_star','parser.py',355),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',361),
  ('TypeDecl -> TYPE LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESIS','TypeDecl',4,'p_type_decl','parser.py',362),
  ('TypeSpecStar -> TypeSpecStar TypeSpec SEMICOLON','TypeSpecStar',3,'p_type_spec_star','parser.py',368),
  ('TypeSpecStar -> <empty>','TypeSpecStar',0,'p_type_spec_star','parser.py',369),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',375),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',376),
  ('AliasDecl -> IDENT ASSIGNMENT Type','AliasDecl',3,'p_alias_decl','parser.py',379),
  ('AliasDecl -> IDENT ASSIGNMENT IDENT','AliasDecl',3,'p_alias_decl','parser.py',380),
  ('AliasDecl -> IDENT ASSIGNMENT IDENT PERIOD IDENT','AliasDecl',5,'p_alias_decl','parser.py',381),
  ('TypeDef -> IDENT Type','TypeDef',2,'p_type_def','parser.py',389),
  ('TypeDef -> IDENT IDENT PERIOD IDENT','TypeDef',4,'p_type_def','parser.py',390),
  ('TypeDef -> IDENT IDENT','TypeDef',2,'p_type_def','parser.py',391),
  ('VarDecl -> VARIABLE VarSpec','VarDecl',2,'p_var_decl','parser.py',400),
  ('VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS','VarDecl',4,'p_var_decl','parser.py',401),
  ('VarSpecStar -> VarSpecStar VarSpec SEMICOLON','VarSpecStar',3,'p_var_spec_star','parser.py',407),
  ('VarSpecStar -> <empty>','VarSpecStar',0,'p_var_spec_star','parser.py',408),
  ('VarSpec -> IdentifierList Type','VarSpec',2,'p_var_spec','parser.py',414),
  ('VarSpec -> IdentifierList Type ASSIGNMENT Expression','VarSpec',4,'p_var_spec','parser.py',415),
  ('VarSpec -> IdentifierList IDENT ASSIGNMENT ExpressionList','VarSpec',4,'p_var_spec','parser.py',416),
  ('VarSpec -> IdentifierList IDENT PERIOD IDENT ASSIGNMENT ExpressionList','VarSpec',6,'p_var_spec','parser.py',417),
  ('VarSpec -> IdentifierList IDENT PERIOD IDENT','VarSpec',4,'p_var_spec','parser.py',418),
  ('VarSpec -> IdentifierList IDENT','VarSpec',2,'p_var_spec','parser.py',419),
  ('VarSpec -> IdentifierList ASSIGNMENT ExpressionList','VarSpec',3,'p_var_spec','parser.py',420),
  ('ShortVarDecl -> IdentifierList DEFINE ExpressionList','ShortVarDecl',3,'p_short_var_decl','parser.py',428),
  ('FunctionDecl -> FUNCTION IDENT Signature Block','FunctionDecl',4,'p_function_decl','parser.py',431),
  ('FunctionDecl -> FUNCTION IDENT Signature','FunctionDecl',3,'p_function_decl','parser.py',432),
  ('MethodDecl -> FUNCTION Receiver IDENT Signature Block','MethodDecl',5,'p_method_decl','parser.py',438),
  ('MethodDecl -> FUNCTION Receiver IDENT Signature','MethodDecl',4,'p_method_decl','parser.py',439),
  ('Receiver -> Parameters','Receiver',1,'p_receiver','parser.py',445),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',448),
  ('Literal -> CompositeLit','Literal',1,'p_literal','parser.py',449),
  ('Literal -> FunctionLit','Literal',1,'p_literal','parser.py',450),
  ('BasicLit -> INT','BasicLit',1,'p_basic_lit','parser.py',453),
  ('BasicLit -> FLOAT','BasicLit',1,'p_basic_lit','parser.py',454),
  ('BasicLit -> IMAGINARY','BasicLit',1,'p_basic_lit','parser.py',455),
  ('BasicLit -> RUNE','BasicLit',1,'p_basic_lit','parser.py',456),
  ('BasicLit -> STRING','BasicLit',1,'p_basic_lit','parser.py',457),
  ('CompositeLit -> StructType LiteralValue','CompositeLit',2,'p_composite_lit','parser.py',461),
  ('CompositeLit -> ArrayType LiteralValue','CompositeLit',2,'p_composite_lit','parser.py',462),
  ('CompositeLit -> SliceType LiteralValue','CompositeLit',2,'p_composite_lit','parser.py',463),
  ('CompositeLit -> MapType LiteralValue','CompositeLit',2,'p_composite_lit','parser.py',464),
  ('CompositeLit -> Type LiteralValue','CompositeLit',2,'p_composite_lit','parser.py',465),
  ('CompositeLit -> IDENT LiteralValue','CompositeLit',2,'p_composite_lit','parser.py',466),
  ('CompositeLit -> IDENT PERIOD IDENT LiteralValue','CompositeLit',4,'p_composite_lit','parser.py',467),
  ('CompositeLit -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET Type LiteralValue','CompositeLit',5,'p_composite_lit','parser.py',468),
  ('CompositeLit -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET IDENT LiteralValue','CompositeLit',5,'p_composite_lit','parser.py',469),
  ('CompositeLit -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET IDENT PERIOD IDENT LiteralValue','CompositeLit',7,'p_composite_lit','parser.py',470),
  ('LiteralValue -> LEFT_BRACE RIGHT_BRACE','LiteralValue',2,'p_literal_value','parser.py',478),
  ('LiteralValue -> LEFT_BRACE ElementList RIGHT_BRACE','LiteralValue',3,'p_literal_value','parser.py',479),
  ('LiteralValue -> LEFT_BRACE ElementList COMMA RIGHT_BRACE','LiteralValue',4,'p_literal_value','parser.py',480),
  ('ElementList -> KeyedElement KeyedElementStar','ElementList',2,'p_element_list','parser.py',486),
  ('KeyedElementStar -> KeyedElementStar COMMA KeyedElement','KeyedElementStar',3,'p_keyed_element_star','parser.py',489),
  ('KeyedElementStar -> <empty>','KeyedElementStar',0,'p_keyed_element_star','parser.py',490),
  ('KeyedElement -> Element','KeyedElement',1,'p_keyed_element','parser.py',496),
  ('KeyedElement -> IDENT COLON Element','KeyedElement',3,'p_keyed_element','parser.py',497),
  ('KeyedElement -> Expression COLON Element','KeyedElement',3,'p_keyed_element','parser.py',498),
  ('KeyedElement -> LiteralValue COLON Element','KeyedElement',3,'p_keyed_element','parser.py',499),
  ('Element -> Expression','Element',1,'p_element','parser.py',510),
  ('Element -> LiteralValue','Element',1,'p_element','parser.py',511),
  ('FunctionLit -> FUNCTION Signature Block','FunctionLit',3,'p_function_lit','parser.py',514),
  ('PrimaryExpr -> IDENT','PrimaryExpr',1,'p_primary_expr','parser.py',517),
  ('PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS','PrimaryExpr',3,'p_primary_expr','parser.py',518),
  ('PrimaryExpr -> IDENT PERIOD IDENT','PrimaryExpr',3,'p_primary_expr','parser.py',519),
  ('PrimaryExpr -> Literal','PrimaryExpr',1,'p_primary_expr','parser.py',520),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_primary_expr','parser.py',521),
  ('PrimaryExpr -> MethodExpr','PrimaryExpr',1,'p_primary_expr','parser.py',522),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_primary_expr','parser.py',523),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_primary_expr','parser.py',524),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_primary_expr','parser.py',525),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_primary_expr','parser.py',526),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_primary_expr','parser.py',527),
  ('Selector -> PERIOD IDENT','Selector',2,'p_selector','parser.py',535),
  ('Index -> LEFT_BRACKET Expression RIGHT_BRACKET','Index',3,'p_index','parser.py',538),
  ('Slice -> LEFT_BRACKET Expression COLON Expression RIGHT_BRACKET','Slice',5,'p_slice','parser.py',541),
  ('Slice -> LEFT_BRACKET Expression COLON RIGHT_BRACKET','Slice',4,'p_slice','parser.py',542),
  ('Slice -> LEFT_BRACKET COLON Expression RIGHT_BRACKET','Slice',4,'p_slice','parser.py',543),
  ('Slice -> LEFT_BRACKET COLON RIGHT_BRACKET','Slice',3,'p_slice','parser.py',544),
  ('Slice -> LEFT_BRACKET Expression COLON Expression COLON Expression RIGHT_BRACKET','Slice',7,'p_slice','parser.py',545),
  ('Slice -> LEFT_BRACKET COLON Expression COLON Expression RIGHT_BRACKET','Slice',6,'p_slice','parser.py',546),
  ('TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS','TypeAssertion',4,'p_type_assertion','parser.py',557),
  ('TypeAssertion -> PERIOD LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS','TypeAssertion',4,'p_type_assertion','parser.py',558),
  ('TypeAssertion -> PERIOD LEFT_PARENTHESIS IDENT PERIOD IDENT RIGHT_PARENTHESIS','TypeAssertion',6,'p_type_assertion','parser.py',559),
  ('Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS','Arguments',2,'p_arguments','parser.py',567),
  ('Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS','Arguments',3,'p_arguments','parser.py',568),
  ('Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS','Arguments',4,'p_arguments','parser.py',569),
  ('Arguments -> LEFT_PARENTHESIS ExpressionList ELLIPSIS RIGHT_PARENTHESIS','Arguments',4,'p_arguments','parser.py',570),
  ('Arguments -> LEFT_PARENTHESIS ExpressionList ELLIPSIS COMMA RIGHT_PARENTHESIS','Arguments',5,'p_arguments','parser.py',571),
  ('Arguments -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS','Arguments',3,'p_arguments','parser.py',572),
  ('Arguments -> LEFT_PARENTHESIS Type COMMA RIGHT_PARENTHESIS','Arguments',4,'p_arguments','parser.py',573),
  ('Arguments -> LEFT_PARENTHESIS Type ELLIPSIS RIGHT_PARENTHESIS','Arguments',4,'p_arguments','parser.py',574),
  ('Arguments -> LEFT_PARENTHESIS Type ELLIPSIS COMMA RIGHT_PARENTHESIS','Arguments',5,'p_arguments','parser.py',575),
  ('Arguments -> LEFT_PARENTHESIS Type COMMA ExpressionList RIGHT_PARENTHESIS','Arguments',5,'p_arguments','parser.py',576),
  ('Arguments -> LEFT_PARENTHESIS Type COMMA ExpressionList COMMA RIGHT_PARENTHESIS','Arguments',6,'p_arguments','parser.py',577),
  ('Arguments -> LEFT_PARENTHESIS Type COMMA ExpressionList ELLIPSIS RIGHT_PARENTHESIS','Arguments',6,'p_arguments','parser.py',578),
  ('Arguments -> LEFT_PARENTHESIS Type COMMA ExpressionList ELLIPSIS COMMA RIGHT_PARENTHESIS','Arguments',7,'p_arguments','parser.py',579),
  ('Arguments -> LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS','Arguments',3,'p_arguments','parser.py',580),
  ('Arguments -> LEFT_PARENTHESIS IDENT COMMA RIGHT_PARENTHESIS','Arguments',4,'p_arguments','parser.py',581),
  ('Arguments -> LEFT_PARENTHESIS IDENT ELLIPSIS RIGHT_PARENTHESIS','Arguments',4,'p_arguments','parser.py',582),
  ('Arguments -> LEFT_PARENTHESIS IDENT ELLIPSIS COMMA RIGHT_PARENTHESIS','Arguments',5,'p_arguments','parser.py',583),
  ('Arguments -> LEFT_PARENTHESIS IDENT COMMA ExpressionList RIGHT_PARENTHESIS','Arguments',5,'p_arguments','parser.py',584),
  ('Arguments -> LEFT_PARENTHESIS IDENT COMMA ExpressionList COMMA RIGHT_PARENTHESIS','Arguments',6,'p_arguments','parser.py',585),
  ('Arguments -> LEFT_PARENTHESIS IDENT COMMA ExpressionList ELLIPSIS RIGHT_PARENTHESIS','Arguments',6,'p_arguments','parser.py',586),
  ('Arguments -> LEFT_PARENTHESIS IDENT COMMA ExpressionList ELLIPSIS COMMA RIGHT_PARENTHESIS','Arguments',7,'p_arguments','parser.py',587),
  ('Arguments -> LEFT_PARENTHESIS IDENT PERIOD IDENT RIGHT_PARENTHESIS','Arguments',5,'p_arguments','parser.py',588),
  ('Arguments -> LEFT_PARENTHESIS IDENT PERIOD IDENT COMMA RIGHT_PARENTHESIS','Arguments',6,'p_arguments','parser.py',589),
  ('Arguments -> LEFT_PARENTHESIS IDENT PERIOD IDENT ELLIPSIS RIGHT_PARENTHESIS','Arguments',6,'p_arguments','parser.py',590),
  ('Arguments -> LEFT_PARENTHESIS IDENT PERIOD IDENT ELLIPSIS COMMA RIGHT_PARENTHESIS','Arguments',7,'p_arguments','parser.py',591),
  ('Arguments -> LEFT_PARENTHESIS IDENT PERIOD IDENT COMMA ExpressionList RIGHT_PARENTHESIS','Arguments',7,'p_arguments','parser.py',592),
  ('Arguments -> LEFT_PARENTHESIS IDENT PERIOD IDENT COMMA ExpressionList COMMA RIGHT_PARENTHESIS','Arguments',8,'p_arguments','parser.py',593),
  ('Arguments -> LEFT_PARENTHESIS IDENT PERIOD IDENT COMMA ExpressionList ELLIPSIS RIGHT_PARENTHESIS','Arguments',8,'p_arguments','parser.py',594),
  ('Arguments -> LEFT_PARENTHESIS IDENT PERIOD IDENT COMMA ExpressionList ELLIPSIS COMMA RIGHT_PARENTHESIS','Arguments',9,'p_arguments','parser.py',595),
  ('MethodExpr -> Type PERIOD IDENT','MethodExpr',3,'p_method_expr','parser.py',603),
  ('MethodExpr -> IDENT PERIOD IDENT','MethodExpr',3,'p_method_expr','parser.py',604),
  ('MethodExpr -> IDENT PERIOD IDENT PERIOD IDENT','MethodExpr',5,'p_method_expr','parser.py',605),
  ('Expression -> UnaryExpr','Expression',1,'p_expression','parser.py',615),
  ('Expression -> Expression binary_op Expression','Expression',3,'p_expression','parser.py',616),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',622),
  ('UnaryExpr -> unary_op UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',623),
  ('binary_op -> LOGICAL_OR','binary_op',1,'p_binary_op','parser.py',629),
  ('binary_op -> LOGICAL_AND','binary_op',1,'p_binary_op','parser.py',630),
  ('binary_op -> rel_op','binary_op',1,'p_binary_op','parser.py',631),
  ('binary_op -> add_op','binary_op',1,'p_binary_op','parser.py',632),
  ('binary_op -> mul_op','binary_op',1,'p_binary_op','parser.py',633),
  ('rel_op -> EQUAL','rel_op',1,'p_rel_op','parser.py',640),
  ('rel_op -> NOT_EQUAL','rel_op',1,'p_rel_op','parser.py',641),
  ('rel_op -> LESS_THAN','rel_op',1,'p_rel_op','parser.py',642),
  ('rel_op -> LESS_THAN_EQUAL','rel_op',1,'p_rel_op','parser.py',643),
  ('rel_op -> GREATER_THAN','rel_op',1,'p_rel_op','parser.py',644),
  ('rel_op -> GREATER_THAN_EQUAL','rel_op',1,'p_rel_op','parser.py',645),
  ('add_op -> ADD','add_op',1,'p_add_op','parser.py',648),
  ('add_op -> SUBTRACT','add_op',1,'p_add_op','parser.py',649),
  ('add_op -> OR','add_op',1,'p_add_op','parser.py',650),
  ('add_op -> XOR','add_op',1,'p_add_op','parser.py',651),
  ('mul_op -> MULTIPLY','mul_op',1,'p_mul_op','parser.py',654),
  ('mul_op -> QUOTIENT','mul_op',1,'p_mul_op','parser.py',655),
  ('mul_op -> REMAINDER','mul_op',1,'p_mul_op','parser.py',656),
  ('mul_op -> SHIFT_LEFT','mul_op',1,'p_mul_op','parser.py',657),
  ('mul_op -> SHIFT_RIGHT','mul_op',1,'p_mul_op','parser.py',658),
  ('mul_op -> AND','mul_op',1,'p_mul_op','parser.py',659),
  ('mul_op -> AND_NOT','mul_op',1,'p_mul_op','parser.py',660),
  ('unary_op -> ADD','unary_op',1,'p_unary_op','parser.py',663),
  ('unary_op -> SUBTRACT','unary_op',1,'p_unary_op','parser.py',664),
  ('unary_op -> NOT','unary_op',1,'p_unary_op','parser.py',665),
  ('unary_op -> XOR','unary_op',1,'p_unary_op','parser.py',666),
  ('unary_op -> MULTIPLY','unary_op',1,'p_unary_op','parser.py',667),
  ('unary_op -> AND','unary_op',1,'p_unary_op','parser.py',668),
  ('unary_op -> ARROW','unary_op',1,'p_unary_op','parser.py',669),
  ('Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS','Conversion',5,'p_conversion','parser.py',672),
  ('Conversion -> Type LEFT_PARENTHESIS Expression LEFT_PARENTHESIS','Conversion',4,'p_conversion','parser.py',673),
  ('Conversion -> IDENT LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS','Conversion',4,'p_conversion','parser.py',674),
  ('Conversion -> IDENT LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS','Conversion',5,'p_conversion','parser.py',675),
  ('Conversion -> IDENT PERIOD IDENT LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS','Conversion',6,'p_conversion','parser.py',676),
  ('Conversion -> IDENT PERIOD IDENT LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS','Conversion',7,'p_conversion','parser.py',677),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',689),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',690),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',691),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',692),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',693),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',694),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',695),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',696),
  ('Statement -> FallthroughStmt','Statement',1,'p_statement','parser.py',697),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',698),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',699),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',700),
  ('Statement -> SelectStmt','Statement',1,'p_statement','parser.py',701),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',702),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',703),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',706),
  ('SimpleStmt -> SendStmt','SimpleStmt',1,'p_simple_stmt','parser.py',707),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',708),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',709),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',710),
  ('SimpleStmt -> <empty>','SimpleStmt',0,'p_simple_stmt','parser.py',711),
  ('LabeledStmt -> IDENT COLON Statement','LabeledStmt',3,'p_labeled_stmt','parser.py',718),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',721),
  ('SendStmt -> Expression ARROW Expression','SendStmt',3,'p_send_stmt','parser.py',724),
  ('IncDecStmt -> Expression INCREMENT','IncDecStmt',2,'p_inc_dec_stmt','parser.py',727),
  ('IncDecStmt -> Expression DECREMENT','IncDecStmt',2,'p_inc_dec_stmt','parser.py',728),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',731),
  ('assign_op -> ADD_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',734),
  ('assign_op -> SUB_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',735),
  ('assign_op -> MUL_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',736),
  ('assign_op -> QUO_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',737),
  ('assign_op -> REM_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',738),
  ('assign_op -> AND_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',739),
  ('assign_op -> AND_NOT_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',740),
  ('assign_op -> OR_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',741),
  ('assign_op -> XOR_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',742),
  ('assign_op -> SHIFT_LEFT_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',743),
  ('assign_op -> SHIFT_RIGHT_ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',744),
  ('assign_op -> ASSIGNMENT','assign_op',1,'p_assign_op','parser.py',745),
  ('IfStmt -> IF Expression Block','IfStmt',3,'p_if_stmt','parser.py',748),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression Block','IfStmt',5,'p_if_stmt','parser.py',749),
  ('IfStmt -> IF Expression Block Expression Block ELSE IfStmt','IfStmt',7,'p_if_stmt','parser.py',750),
  ('IfStmt -> IF Expression Block Expression Block ELSE Block','IfStmt',7,'p_if_stmt','parser.py',751),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression Block ELSE IfStmt','IfStmt',7,'p_if_stmt','parser.py',752),
  ('IfStmt -> IF SimpleStmt SEMICOLON Expression Block ELSE Block','IfStmt',7,'p_if_stmt','parser.py',753),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_stmt','parser.py',761),
  ('SwitchStmt -> TypeSwitchStmt','SwitchStmt',1,'p_switch_stmt','parser.py',762),
  ('ExprSwitchStmt -> SWITCH LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE','ExprSwitchStmt',4,'p_expr_switch_stmt','parser.py',765),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE','ExprSwitchStmt',6,'p_expr_switch_stmt','parser.py',766),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE','ExprSwitchStmt',7,'p_expr_switch_stmt','parser.py',767),
  ('ExprSwitchStmt -> SWITCH Expression LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE','ExprSwitchStmt',5,'p_expr_switch_stmt','parser.py',768),
  ('ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause','ExprCaseClauseStar',2,'p_expr_case_clause_star','parser.py',776),
  ('ExprCaseClauseStar -> <empty>','ExprCaseClauseStar',0,'p_expr_case_clause_star','parser.py',777),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_expr_case_clause','parser.py',783),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_expr_switch_case','parser.py',786),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_expr_switch_case','parser.py',787),
  ('TypeSwitchStmt -> SWITCH TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE','TypeSwitchStmt',5,'p_type_switch_stmt','parser.py',793),
  ('TypeSwitchStmt -> SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE','TypeSwitchStmt',7,'p_type_switch_stmt','parser.py',794),
  ('TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause','TypeCaseClauseStar',2,'p_type_case_clause_star','parser.py',802),
  ('TypeCaseClauseStar -> <empty>','TypeCaseClauseStar',0,'p_type_case_clause_star','parser.py',803),
  ('TypeSwitchGuard -> IDENT DEFINE PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS','TypeSwitchGuard',7,'p_type_switch_guard','parser.py',809),
  ('TypeSwitchGuard -> PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS','TypeSwitchGuard',5,'p_type_switch_guard','parser.py',810),
  ('TypeCaseClause -> TypeSwitchCase COLON StatementList','TypeCaseClause',3,'p_type_case_clause','parser.py',818),
  ('TypeSwitchCase -> CASE TypeList','TypeSwitchCase',2,'p_type_switch_case','parser.py',821),
  ('TypeSwitchCase -> DEFAULT','TypeSwitchCase',1,'p_type_switch_case','parser.py',822),
  ('TypeList -> Type CommaTypeStar','TypeList',2,'p_type_list','parser.py',828),
  ('TypeList -> IDENT CommaTypeStar','TypeList',2,'p_type_list','parser.py',829),
  ('TypeList -> IDENT PERIOD IDENT CommaTypeStar','TypeList',4,'p_type_list','parser.py',830),
  ('CommaTypeStar -> CommaTypeStar COMMA Type','CommaTypeStar',3,'p_comma_type_star','parser.py',841),
  ('CommaTypeStar -> CommaTypeStar COMMA IDENT','CommaTypeStar',3,'p_comma_type_star','parser.py',842),
  ('CommaTypeStar -> CommaTypeStar COMMA IDENT PERIOD IDENT','CommaTypeStar',5,'p_comma_type_star','parser.py',843),
  ('CommaTypeStar -> <empty>','CommaTypeStar',0,'p_comma_type_star','parser.py',844),
  ('ForStmt -> FOR ForClause Block','ForStmt',3,'p_for_stmt','parser.py',854),
  ('ForStmt -> FOR RangeClause Block','ForStmt',3,'p_for_stmt','parser.py',855),
  ('ForStmt -> FOR Expression Block','ForStmt',3,'p_for_stmt','parser.py',856),
  ('ForStmt -> FOR Block','ForStmt',2,'p_for_stmt','parser.py',857),
  ('ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt','ForClause',5,'p_for_clause','parser.py',865),
  ('ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt','ForClause',4,'p_for_clause','parser.py',866),
  ('ForClause -> SEMICOLON Expression SEMICOLON SimpleStmt','ForClause',4,'p_for_clause','parser.py',867),
  ('ForClause -> SEMICOLON SEMICOLON SimpleStmt','ForClause',3,'p_for_clause','parser.py',868),
  ('ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON','ForClause',4,'p_for_clause','parser.py',869),
  ('ForClause -> SimpleStmt SEMICOLON SEMICOLON','ForClause',3,'p_for_clause','parser.py',870),
  ('ForClause -> SEMICOLON Expression SEMICOLON','ForClause',3,'p_for_clause','parser.py',871),
  ('ForClause -> SEMICOLON SEMICOLON','ForClause',2,'p_for_clause','parser.py',872),
  ('RangeClause -> RANGE Expression','RangeClause',2,'p_range_clause','parser.py',880),
  ('RangeClause -> IdentifierList DEFINE RANGE Expression','RangeClause',4,'p_range_clause','parser.py',881),
  ('RangeClause -> ExpressionList ASSIGNMENT RANGE Expression','RangeClause',4,'p_range_clause','parser.py',882),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',890),
  ('SelectStmt -> SELECT LEFT_BRACE CommClauseStar RIGHT_BRACE','SelectStmt',4,'p_selectstmt','parser.py',894),
  ('CommClauseStar -> CommClauseStar CommClause','CommClauseStar',2,'p_comm_clause_plus','parser.py',898),
  ('CommClauseStar -> <empty>','CommClauseStar',0,'p_comm_clause_plus','parser.py',899),
  ('CommClause -> CommCase COLON StatementList','CommClause',3,'p_comm_clause','parser.py',905),
  ('CommCase -> CASE SendStmt','CommCase',2,'p_comm_case','parser.py',908),
  ('CommCase -> CASE RecvStmt','CommCase',2,'p_comm_case','parser.py',909),
  ('CommCase -> DEFAULT','CommCase',1,'p_comm_case','parser.py',910),
  ('RecvStmt -> IdentifierList DEFINE Expression','RecvStmt',3,'p_recv_stmt','parser.py',916),
  ('RecvStmt -> ExpressionList ASSIGNMENT Expression','RecvStmt',3,'p_recv_stmt','parser.py',917),
  ('RecvStmt -> Expression','RecvStmt',1,'p_recv_stmt','parser.py',918),
  ('ReturnStmt -> RETURN ExpressionList','ReturnStmt',2,'p_returnstmt','parser.py',925),
  ('ReturnStmt -> RETURN','ReturnStmt',1,'p_returnstmt','parser.py',926),
  ('BreakStmt -> BREAK IDENT','BreakStmt',2,'p_break_stmt','parser.py',933),
  ('BreakStmt -> BREAK','BreakStmt',1,'p_break_stmt','parser.py',934),
  ('ContinueStmt -> CONTINUE IDENT','ContinueStmt',2,'p_continue_stmt','parser.py',941),
  ('ContinueStmt -> CONTINUE','ContinueStmt',1,'p_continue_stmt','parser.py',942),
  ('GotoStmt -> GOTO IDENT','GotoStmt',2,'p_goto_stmt','parser.py',948),
  ('FallthroughStmt -> FALLTHROUGH','FallthroughStmt',1,'p_fallthrough_stmt','parser.py',951),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',954),
]
