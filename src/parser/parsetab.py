
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNMENTleftLOGICAL_ORleftLOGICAL_ANDleftEQUALNOT_EQUALLESS_THANLESS_THAN_EQUALGREATER_THANGREATER_THAN_EQUALleftADDSUBTRACTORXORleftMULTIPLYQUOTIENTREMAINDERSHIFT_LEFTSHIFT_RIGHTANDAND_NOTrightNOTADD ADD_ASSIGNMENT AND AND_ASSIGNMENT AND_NOT AND_NOT_ASSIGNMENT ARROW ASSIGNMENT BREAK CASE CHAN CHAR COLON COMMA COMMENT CONST CONTINUE DECREMENT DEFAULT DEFER DEFINE ELLIPSIS ELSE EOF EQUAL FALLTHROUGH FLOAT FOR FUNCTION GO GOTO GREATER_THAN GREATER_THAN_EQUAL IDENT IF IMAGINARY IMPORT INCREMENT INT INTERFACE LEFT_BRACE LEFT_BRACKET LEFT_PARENTHESIS LESS_THAN LESS_THAN_EQUAL LOGICAL_AND LOGICAL_OR MAP MULTIPLY MUL_ASSIGNMENT NEWLINE NOT NOT_EQUAL OR OR_ASSIGNMENT PACKAGE PERIOD QUOTIENT QUO_ASSIGNMENT RANGE REMAINDER REM_ASSIGNMENT RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PARENTHESIS RUNE SELECT SEMICOLON SHIFT_LEFT SHIFT_LEFT_ASSIGNMENT SHIFT_RIGHT SHIFT_RIGHT_ASSIGNMENT STRING STRUCT SUBTRACT SUB_ASSIGNMENT SWITCH TYPE VARIABLE XOR XOR_ASSIGNMENTType : TypeName \n    | TypeLit \n    | LEFT_PARENTHESIS Type RIGHT_PARENTHESISTypeName : IDENT \n    | QualifiedIdentTypeLit : ArrayType \n    | StructType \n    | PointerType \n    | FunctionType \n    | InterfaceType \n    | SliceType \n    | MapType \n    | ChannelTypeArrayType : LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementTypeArrayLength : ExpressionElementType : TypeSliceType : LEFT_BRACKET RIGHT_BRACKET ElementTypeStructType : STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACEManyFieldDecl : ManyFieldDecl FieldDecl SEMICOLON\n    |FieldDecl : IdentifierList Type TagPlus \n    | EmbeddedField TagPlusTagPlus : Tag\n    |EmbeddedField : MULTIPLY TypeName \n    | TypeNameTag : STRINGPointerType : MULTIPLY BaseTypeBaseType : TypeFunctionType : FUNCTION SignatureSignature : Parameters ResultPlusResultPlus : Result\n    |Result : Parameters \n    | TypeParameters : LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESISParameterListPlus : ParameterList COMMA \n    | ParameterList \n    |ParameterList : ParameterDecl\n    | ParameterDecl COMMA ParameterListParameterDecl : IdentifierListPlus EllipsisPlus TypeIdentifierListPlus : IdentifierList\n    |EllipsisPlus : ELLIPSIS\n    |InterfaceType : INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACEInterfaceTypePlus : InterfaceTypePlus InterfaceTypeMethod SEMICOLON\n    |InterfaceTypeMethod : MethodSpec \n    | InterfaceTypeNameMethodSpec : MethodName SignatureMethodName : IDENTInterfaceTypeName : TypeNameMapType : MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementTypeKeyType : TypeChannelType : ChannelTypeOr ElementTypeChannelTypeOr : CHAN \n    | CHAN ARROW \n    | ARROW CHANBlock : LEFT_BRACE StatementList RIGHT_BRACEStatementList : StatementList Statement SEMICOLON\n    |Declaration : ConstDecl \n    | TypeDecl \n    | VarDeclTopLevelDecl : Declaration \n    | FunctionDecl \n    | MethodDeclConstDecl : CONST ConstSpecOrConstSpecOr : ConstSpec \n    | LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESISConstSpecStar : ConstSpecStar ConstSpec SEMICOLON\n    |ConstSpec : IdentifierList TypeAssignmentExpressionListPlusTypeAssignmentExpressionListPlus : TypePlus ASSIGNMENT ExpressionList \n    |TypePlus : Type \n    |IdentifierList : IDENT IdentStarIdentStar : COMMA IDENT IdentStar\n    |ExpressionList : Expression ExpressionStarExpressionStar : COMMA Expression ExpressionStar\n    |TypeDecl : TYPE TypeSpecOrTypeSpecOr : TypeSpec \n    | LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESISTypeSpecStar : TypeSpecStar TypeSpec SEMICOLON\n    |TypeSpec : AliasDecl \n    | TypeDefAliasDecl : IDENT ASSIGNMENT TypeTypeDef : IDENT TypeVarDecl : VARIABLE VarSpec\n    | VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESISVarSpecStar : VarSpecStar VarSpec SEMICOLON \n    |VarSpec : IdentifierList TypeExpressionListOrTypeExpressionListOr : Type AssignmentExpressionListPlus \n    | ASSIGNMENT ExpressionListAssignmentExpressionListPlus : ASSIGNMENT Expression \n    |ShortVarDecl : IdentifierList DEFINE ExpressionListFunctionDecl : FUNCTION FunctionName Signature FunctionBodyPlusFunctionBodyPlus : FunctionBody \n    |FunctionName : IDENTFunctionBody : BlockMethodDecl : FUNCTION Receiver MethodName Signature FunctionBodyPlusReceiver : ParametersOperand : Literal \n    | OperandName \n    | LEFT_PARENTHESIS Expression RIGHT_PARENTHESISLiteral : BasicLit \n    | CompositeLit \n    | FunctionLitBasicLit : INT \n    | FLOAT \n    | IMAGINARY \n    | RUNE \n    | STRINGOperandName : IDENT \n    | QualifiedIdentQualifiedIdent : PackageName PERIOD IDENTCompositeLit : LiteralType LiteralValueLiteralType : StructType \n    | ArrayType \n    | LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType \n    | SliceType \n    | MapType \n    | TypeNameLiteralValue : LEFT_BRACKET ElementListPlus RIGHT_BRACKETElementListPlus : ElementList \n    | ElementList COMMA\n    |ElementList : KeyedElement KeyedElementStarKeyedElementStar : COMMA KeyedElement KeyedElementStar \n                        |KeyedElement : KeyPlus ElementKeyPlus : Key COLON\n    |Key : FieldName \n    | Expression \n    | LiteralValueFieldName : IDENTElement : Expression \n    | LiteralValueFunctionLit : FUNCTION Signature FunctionBodyPrimaryExpr : Operand \n    | Conversion\n    | MethodExpr \n    | PrimaryExpr Selector \n    | PrimaryExpr Index \n    | PrimaryExpr Slice \n    | PrimaryExpr TypeAssertion \n    | PrimaryExpr ArgumentsSelector : PERIOD IDENTIndex : LEFT_BRACKET Expression RIGHT_BRACKETSlice : LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET \n    | LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKETTypeAssertion : PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESISArguments : LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESISArgumentsPlus : ArgumentsInOr \n    |ArgumentsInOr : ExpressionList \n    | Type CommaExpressionListPlusCommaExpressionListPlus : COMMA ExpressionList\n    | ExpressionList \n    |MethodExpr : ReceiverType PERIOD MethodNameReceiverType : TypeExpression : UnaryExpr \n    | Expression binary_op ExpressionUnaryExpr : PrimaryExpr \n    | unary_op UnaryExprbinary_op : LOGICAL_OR \n    | LOGICAL_AND \n    | rel_op \n    | add_op \n    | mul_oprel_op : EQUAL \n    | NOT_EQUAL \n    | LESS_THAN \n    | LESS_THAN_EQUAL \n    | GREATER_THAN \n    | GREATER_THAN_EQUALadd_op : ADD \n    | SUBTRACT \n    | OR \n    | XORmul_op : MULTIPLY \n    | QUOTIENT \n    | REMAINDER \n    | SHIFT_LEFT \n    | SHIFT_RIGHT \n    | AND \n    | AND_NOTunary_op : ADD \n    | SUBTRACT \n    | NOT \n    | XOR \n    | MULTIPLY \n    | AND \n    | ARROWConversion : Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS\n    | Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESISStatement : Declaration \n    | LabeledStmt \n    | SimpleStmt \n    | GoStmt \n    | ReturnStmt \n    | BreakStmt \n    | ContinueStmt \n    | GotoStmt \n    | FallthroughStmt \n    | Block \n    | IfStmt \n    | SwitchStmt \n    | SelectStmt \n    | ForStmt \n    | DeferStmt SimpleStmt : ExpressionStmt \n    | SendStmt \n    | IncDecStmt \n    | Assignment \n    | ShortVarDecl \n    |LabeledStmt : Label COLON Statement Label : IDENTExpressionStmt : ExpressionSendStmt : Channel ARROW ExpressionChannel : ExpressionIncDecStmt : Expression IncDecOrIncDecOr : INCREMENT \n    | DECREMENTAssignment : ExpressionList assign_op ExpressionListassign_op : add_op_mul_op_or_plus ASSIGNMENTadd_op_mul_op_or_plus : add_op_mul_op_or \n    |add_op_mul_op_or : add_op \n    | mul_opIfStmt : IF SimpleStmtSemicolonPlus Expression Block ElsePlusSimpleStmtSemicolonPlus : SimpleStmt SEMICOLON \n    |ElsePlus : ELSE Nested_if_block \n    |Nested_if_block : IfStmt \n    | Block SwitchStmt : ExprSwitchStmt \n    | TypeSwitchStmtExprSwitchStmt : SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE ExpressionPlus : Expression \n    |ExprCaseClauseStar : ExprCaseClauseStar ExprCaseClause \n    |ExprCaseClause : ExprSwitchCase COLON StatementListExprSwitchCase : CASE ExpressionList \n    | DEFAULTTypeSwitchStmt  : SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE TypeCaseClauseStar : TypeCaseClauseStar TypeCaseClause \n    |TypeSwitchGuard : IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS IdentDefinePlus : IDENT DEFINE \n    |TypeCaseClause  : TypeSwitchCase COLON StatementList TypeSwitchCase : CASE TypeList \n    | DEFAULTTypeList : Type CommaTypePlus CommaTypePlus : CommaTypePlus COMMA TYPE \n    |ForStmt : FOR ForInternal BlockForInternal : Condition \n    | ForClause \n    | RangeClause \n    |Condition : ExpressionForClause : InitStmtPlus SEMICOLON ConditionPlus SEMICOLON PostStmtPlusInitStmtPlus : InitStmt \n    |ConditionPlus : Condition \n    |PostStmtPlus : PostStmt \n    |InitStmt : SimpleStmtPostStmt : SimpleStmtRangeClause :  ExpListAssignIdListDefOrPlus RANGE ExpressionExpListAssignIdListDefOrPlus : ExpressionList ASSIGNMENT \n    | IdentifierList DEFINE \n    |GoStmt : GO Expression SelectStmt : SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE CommClausePlus : CommClausePlus CommClause \n    |CommClause : CommCase COLON StatementListCommCase : CASE SentStmtRecvStmtOr \n    | DEFAULTSentStmtRecvStmtOr : SendStmt \n    | RecvStmtRecvStmt : ExpListAssignIdListDefOrPlus RecvExprRecvExpr : ExpressionReturnStmt : RETURN ExpressionListPlusExpressionListPlus : ExpressionList \n    |BreakStmt : BREAK LabelPlusLabelPlus : Label \n    |ContinueStmt : CONTINUE LabelPlusGotoStmt : GOTO LabelFallthroughStmt : FALLTHROUGHDeferStmt : DEFER ExpressionSourceFile  : PackageClause SEMICOLON ImportDeclStar TopLevelDeclStarImportDeclStar : ImportDeclStar ImportDecl SEMICOLON \n    |TopLevelDeclStar : TopLevelDeclStar TopLevelDecl SEMICOLON \n    |PackageClause : PACKAGE PackageNamePackageName : IDENTImportDecl : IMPORT ImportSpecOrImportSpecOr : ImportSpec \n    | LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESISImportSpecSemicolonStar : ImportSpecSemicolonStar ImportSpec SEMICOLON \n    |ImportSpec : PeriodPackageNamePlus ImportPathPeriodPackageNamePlus : PeriodPackageNameOr \n    |PeriodPackageNameOr : PERIOD \n    | PackageNameImportPath : STRING'
    
_lr_action_items = {'LEFT_PARENTHESIS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,19,22,23,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,117,118,119,120,121,122,124,125,126,128,129,130,131,132,136,137,138,142,143,145,146,152,154,155,156,158,159,160,164,169,170,171,172,173,175,177,180,181,183,184,185,186,188,192,194,195,198,199,200,202,203,206,208,210,213,217,218,227,230,231,237,239,265,267,272,276,277,278,279,280,281,285,287,288,289,290,293,294,306,308,325,331,334,335,336,341,342,346,349,350,351,352,358,363,366,371,372,373,378,386,393,397,398,401,406,409,417,421,424,431,436,438,439,441,445,446,],[4,-1,-2,4,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,46,4,71,4,-58,46,4,113,46,-150,-151,-152,-199,-200,-201,-202,-203,-204,-205,-112,-113,115,122,-115,-116,-117,-4,-5,-1,-118,-119,-120,-121,-122,71,-6,-7,-11,-12,-28,-29,-30,132,-44,4,-57,-16,-59,-60,-3,-125,4,-17,46,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,-153,-154,-155,-156,-157,146,46,115,115,122,-4,-5,46,71,46,-126,46,-30,-34,-31,-32,-35,4,-46,-43,-82,4,-14,-158,4,202,-203,-114,-30,-171,-53,46,46,-4,-149,-109,-63,-18,4,-82,-82,-36,-44,4,-45,-80,-47,71,-53,4,-159,46,-163,115,46,46,-207,-133,46,-141,46,-82,-55,-162,-206,-61,46,46,46,46,46,324,328,333,-4,46,-81,-160,46,-114,-62,46,46,-4,4,4,4,46,46,46,46,-244,46,46,-288,46,4,46,-238,46,-4,-161,46,46,46,113,-264,-63,46,46,438,46,-289,46,4,4,-63,-63,46,46,]),'IDENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,22,23,26,27,29,33,37,38,39,40,41,42,43,46,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,111,112,113,115,118,119,120,122,123,125,127,128,129,130,131,132,136,137,138,139,142,143,146,152,154,156,160,164,172,173,175,177,178,180,181,183,184,185,186,187,188,195,199,202,203,206,213,217,218,219,227,228,230,265,267,268,269,270,272,276,277,278,279,280,285,287,289,293,294,306,324,325,328,331,333,334,335,336,341,342,346,349,350,351,352,353,357,358,360,363,366,371,378,386,393,398,401,406,409,410,412,413,417,421,424,431,436,438,439,441,445,446,],[5,-1,-2,5,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,52,5,5,-58,79,52,5,52,-199,-200,-201,-202,-203,-204,-205,118,-1,-6,-7,-11,-12,-20,-28,-29,-30,5,138,-49,5,-57,-16,-59,-60,-3,-125,5,-17,52,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,145,52,118,118,-4,-5,52,52,159,169,177,-34,-31,-32,-35,180,-46,-43,-82,194,5,-14,5,52,-203,-30,169,52,-63,-18,5,-82,5,-82,-36,138,5,-45,-80,227,-47,5,52,118,52,52,169,-141,281,-19,-82,-48,-55,52,52,303,303,303,308,308,52,138,331,138,308,-81,52,-62,281,52,-74,5,-90,5,-98,5,52,52,52,372,-244,52,52,-288,52,138,331,5,138,52,-238,52,308,52,52,-264,-63,52,308,-73,-89,-97,145,281,-289,52,5,5,-63,-63,281,281,]),'LEFT_BRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,21,22,23,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,115,118,119,120,122,124,125,128,129,130,131,132,136,137,138,142,143,145,146,152,154,155,156,158,159,160,164,169,170,171,172,173,175,177,180,181,183,184,185,186,188,195,196,198,199,200,202,203,206,208,210,213,217,218,227,230,231,237,239,265,267,272,276,277,281,285,287,288,289,290,293,294,306,308,325,331,334,335,336,341,342,346,349,350,351,352,358,363,366,371,372,373,378,386,393,397,398,401,406,409,421,424,431,436,438,439,441,445,446,],[16,-1,-2,16,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,27,16,73,16,-58,27,16,112,27,-150,-151,-152,-199,-200,-201,-202,-203,-204,-205,-112,-113,120,-115,-116,-117,-4,-5,-1,-118,-119,-120,-121,-122,125,-6,-7,-11,-12,-28,-29,-30,16,-44,16,-57,-16,-59,-60,-3,-125,16,-17,27,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,-153,-154,-155,-156,-157,27,120,120,-4,-5,27,27,-126,160,-34,-31,-32,-35,16,-46,-43,-82,16,-14,-158,16,27,-203,-114,-30,-171,-53,160,160,-4,-149,-109,-63,-18,16,-82,-82,-36,-44,16,-45,-80,-47,16,-129,-159,27,-163,120,27,27,-207,-133,160,-141,27,-82,-55,-162,-206,-61,27,27,27,27,27,-4,27,-81,-160,27,-114,-62,27,27,-4,16,16,16,27,27,27,27,-244,27,27,-288,27,16,27,-238,27,-4,-161,27,27,27,112,-264,-63,27,27,27,-289,27,16,16,-63,-63,27,27,]),'STRUCT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,22,23,27,29,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,132,136,137,138,142,143,146,152,154,156,160,164,172,173,175,177,180,181,183,184,185,186,188,195,199,202,203,206,213,217,218,227,230,265,267,272,276,277,285,287,289,293,294,306,325,331,334,335,336,341,342,346,349,350,351,352,358,363,366,371,378,386,393,398,401,406,409,421,424,431,436,438,439,441,445,446,],[17,-1,-2,17,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,17,17,17,-58,17,17,17,-199,-200,-201,-202,-203,-204,-205,17,-1,-6,-7,-11,-12,-28,-29,-30,17,-44,17,-57,-16,-59,-60,-3,-125,17,-17,17,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,17,17,17,-4,-5,17,17,17,-34,-31,-32,-35,17,-46,-43,-82,17,-14,17,17,-203,-30,17,17,-63,-18,17,-82,-82,-36,-44,17,-45,-80,-47,17,17,17,17,17,17,-141,17,-82,-55,17,17,17,17,17,17,-81,17,-62,17,17,17,17,17,17,17,17,17,-244,17,17,-288,17,17,17,-238,17,17,17,17,-264,-63,17,17,17,-289,17,17,17,-63,-63,17,17,]),'MULTIPLY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,22,23,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,118,119,120,122,124,125,127,128,129,130,131,132,136,137,138,142,143,144,145,146,147,152,153,154,155,156,157,158,159,160,164,167,169,170,171,172,173,175,177,180,181,183,184,185,186,188,195,198,199,200,202,203,205,206,208,209,210,213,215,217,218,219,227,230,231,233,234,236,237,239,265,266,267,272,276,277,281,283,285,287,288,289,290,291,293,294,295,306,308,314,318,321,325,331,334,335,336,341,342,343,345,346,349,350,351,352,358,363,364,366,370,371,372,373,378,382,383,386,393,398,401,405,406,409,414,421,423,424,431,436,438,439,441,445,446,],[18,-1,-2,18,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,41,18,18,-58,41,18,99,-173,-175,41,-150,-151,-152,-199,-200,-201,-202,-203,-204,-205,-112,-113,41,-115,-116,-117,-123,-124,-1,-118,-119,-120,-121,-122,-6,-7,-11,-12,-20,-28,-29,-30,18,-44,18,-57,-16,-59,-60,-3,-125,18,-17,41,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,-153,-154,-155,-156,-157,41,154,-176,154,99,-4,-5,41,41,-126,41,178,-34,-31,-32,-35,18,-46,-43,-82,18,-14,99,-158,18,99,41,99,-203,-114,-30,99,-171,-53,41,41,99,-123,-149,-109,-63,-18,18,-82,-82,-36,-44,18,-45,-80,-47,18,-159,41,-163,41,41,-83,41,-207,99,-133,41,99,-141,41,-19,-82,-55,-162,99,99,99,-206,-61,41,99,41,41,41,41,-123,99,41,-81,-160,41,-114,-84,-62,41,99,41,-123,99,99,99,18,18,18,41,41,41,41,99,99,-244,41,41,-288,41,18,41,99,-238,99,18,-123,-161,41,99,99,41,41,-264,-63,99,41,41,99,41,99,-289,41,18,18,-63,-63,41,41,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,22,23,27,29,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,132,136,137,138,142,143,146,152,154,156,160,164,172,173,175,177,180,181,183,184,185,186,188,195,199,202,203,206,213,217,218,227,230,265,267,272,276,277,285,287,289,293,294,306,325,331,334,335,336,341,342,346,349,350,351,352,358,363,366,371,378,386,393,398,401,406,409,421,424,431,436,438,439,441,445,446,],[19,-1,-2,19,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,61,19,19,-58,61,19,61,-199,-200,-201,-202,-203,-204,-205,121,-1,-6,-7,-11,-12,-28,-29,-30,19,-44,19,-57,-16,-59,-60,-3,-125,19,-17,61,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,61,121,121,-4,-5,61,61,61,-34,-31,-32,-35,19,-46,-43,-82,19,-14,19,61,-203,-30,61,61,-63,-18,19,-82,-82,-36,-44,19,-45,-80,-47,19,61,121,61,61,61,-141,61,-82,-55,61,61,61,61,61,61,-81,61,-62,61,61,19,19,19,61,61,61,61,-244,61,61,-288,61,19,61,-238,61,61,61,61,-264,-63,61,61,61,-289,61,19,19,-63,-63,61,61,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,22,23,27,29,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,132,136,137,138,142,143,146,152,154,156,160,164,172,173,175,177,180,181,183,184,185,186,188,195,199,202,203,206,213,217,218,227,230,265,267,272,276,277,285,287,289,293,294,306,325,331,334,335,336,341,342,346,349,350,351,352,358,363,366,371,378,386,393,398,401,406,409,421,424,431,436,438,439,441,445,446,],[20,-1,-2,20,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,20,20,20,-58,20,20,20,-199,-200,-201,-202,-203,-204,-205,20,-1,-6,-7,-11,-12,-28,-29,-30,20,-44,20,-57,-16,-59,-60,-3,-125,20,-17,20,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,20,20,20,-4,-5,20,20,20,-34,-31,-32,-35,20,-46,-43,-82,20,-14,20,20,-203,-30,20,20,-63,-18,20,-82,-82,-36,-44,20,-45,-80,-47,20,20,20,20,20,20,-141,20,-82,-55,20,20,20,20,20,20,-81,20,-62,20,20,20,20,20,20,20,20,20,-244,20,20,-288,20,20,20,-238,20,20,20,20,-264,-63,20,20,20,-289,20,20,20,-63,-63,20,20,]),'MAP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,22,23,27,29,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,132,136,137,138,142,143,146,152,154,156,160,164,172,173,175,177,180,181,183,184,185,186,188,195,199,202,203,206,213,217,218,227,230,265,267,272,276,277,285,287,289,293,294,306,325,331,334,335,336,341,342,346,349,350,351,352,358,363,366,371,378,386,393,398,401,406,409,421,424,431,436,438,439,441,445,446,],[21,-1,-2,21,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,21,21,21,-58,21,21,21,-199,-200,-201,-202,-203,-204,-205,21,-1,-6,-7,-11,-12,-28,-29,-30,21,-44,21,-57,-16,-59,-60,-3,-125,21,-17,21,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,21,21,21,-4,-5,21,21,21,-34,-31,-32,-35,21,-46,-43,-82,21,-14,21,21,-203,-30,21,21,-63,-18,21,-82,-82,-36,-44,21,-45,-80,-47,21,21,21,21,21,21,-141,21,-82,-55,21,21,21,21,21,21,-81,21,-62,21,21,21,21,21,21,21,21,21,-244,21,21,-288,21,21,21,-238,21,21,21,21,-264,-63,21,21,21,-289,21,21,21,-63,-63,21,21,]),'CHAN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,22,23,24,27,29,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,132,136,137,138,142,143,146,152,154,156,160,164,172,173,175,177,180,181,183,184,185,186,188,195,199,202,203,206,213,217,218,227,230,265,267,272,276,277,285,287,289,293,294,306,325,331,334,335,336,341,342,346,349,350,351,352,358,363,366,371,378,386,393,398,401,406,409,421,424,431,436,438,439,441,445,446,],[23,-1,-2,23,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,23,23,23,-58,77,23,23,23,-199,-200,-201,-202,-203,-204,77,23,-1,-6,-7,-11,-12,-28,-29,-30,23,-44,23,-57,-16,-59,-60,-3,-125,23,-17,23,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,23,23,23,-4,-5,23,23,23,-34,-31,-32,-35,23,-46,-43,-82,23,-14,23,23,-203,-30,23,23,-63,-18,23,-82,-82,-36,-44,23,-45,-80,-47,23,23,23,23,23,23,-141,23,-82,-55,23,23,23,23,23,23,-81,23,-62,23,23,23,23,23,23,23,23,23,-244,23,23,-288,23,23,23,-238,23,23,23,23,-264,-63,23,23,23,-289,23,23,23,-63,-63,23,23,]),'ARROW':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,22,23,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,118,119,120,122,124,125,128,129,130,131,132,136,137,138,142,143,144,145,146,152,154,155,156,158,159,160,164,170,171,172,173,175,177,180,181,183,184,185,186,188,195,198,199,200,202,203,206,208,210,213,217,218,227,230,231,237,239,265,266,267,272,276,277,281,282,285,287,288,289,293,294,306,308,314,325,331,334,335,336,341,342,346,349,350,351,352,358,363,366,371,373,378,386,393,398,401,405,406,409,421,424,431,436,438,439,441,445,446,],[24,-1,-2,24,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,43,24,24,76,43,24,-173,-175,43,-150,-151,-152,-199,-200,-201,-202,-203,-204,-205,-112,-113,43,-115,-116,-117,-123,-124,-1,-118,-119,-120,-121,-122,-6,-7,-11,-12,-28,-29,-30,24,-44,24,-57,-16,-59,-60,-3,-125,24,-17,43,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,-153,-154,-155,-156,-157,43,43,-176,43,-4,-5,43,43,-126,43,-34,-31,-32,-35,24,-46,-43,-82,24,-14,-174,-158,24,43,-203,-114,-30,-171,-53,43,43,-149,-109,-63,-18,24,-82,-82,-36,-44,24,-45,-80,-47,24,-159,43,-163,43,43,43,-207,-133,43,-141,43,-82,-55,-162,-206,-61,43,-233,43,43,43,43,-123,335,43,-81,-160,43,-62,43,43,-123,-233,24,24,24,43,43,43,43,-244,43,43,-288,43,24,43,-238,24,-161,43,43,43,-264,-63,-233,43,43,43,-289,43,24,24,-63,-63,43,43,]),'$end':([1,2,3,5,6,7,8,9,10,11,12,13,14,67,68,69,70,74,75,78,79,82,128,129,130,131,143,173,181,188,230,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-28,-29,-30,-33,-57,-16,-3,-125,-17,-34,-31,-32,-35,-14,-18,-36,-47,-55,]),'RIGHT_PARENTHESIS':([2,3,5,6,7,8,9,10,11,12,13,14,25,31,32,34,35,36,44,45,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,67,68,69,70,71,74,75,78,79,82,106,107,108,109,110,113,114,116,117,118,119,124,128,129,130,131,132,133,134,135,143,144,145,149,150,151,152,153,155,156,157,158,159,170,171,173,180,181,182,188,197,198,200,201,204,205,207,208,210,225,226,230,231,234,235,236,237,239,288,290,291,324,328,333,353,357,360,373,410,412,413,444,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,78,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-1,-118,-119,-120,-121,-122,-6,-7,-11,-12,-28,-29,-30,-33,-39,-57,-16,-3,-125,-17,-153,-154,-155,-156,-157,-165,-176,155,78,-4,-5,-126,-34,-31,-32,-35,-39,181,-38,-40,-14,-174,-158,200,-164,-166,-170,-85,-114,-30,208,-171,-53,-149,-109,-18,-4,-36,-37,-47,231,-159,-163,-167,-169,-83,237,-207,-133,-41,-42,-55,-162,290,-168,-85,-206,-61,-160,-114,-84,-74,-90,-98,384,387,390,-161,-73,-89,-97,448,]),'PERIOD':([2,3,5,6,7,8,9,10,11,12,13,14,15,32,34,35,36,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,67,68,69,70,74,75,78,79,82,106,107,108,109,110,117,118,119,124,126,128,129,130,131,143,145,152,155,156,158,159,169,170,171,173,177,180,181,188,194,198,200,208,210,230,231,237,239,281,288,290,308,372,373,397,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,26,111,-150,-151,-152,-112,-113,-172,123,-115,-116,-117,-4,-5,-1,-118,-119,-120,-121,-122,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,-153,-154,-155,-156,-157,-172,-4,-5,-126,-30,-34,-31,-32,-35,-14,-158,-172,-114,-30,-171,-53,-4,-149,-109,-18,-318,-318,-36,-47,-318,-159,-163,-207,-133,-55,-162,-206,-61,-4,-160,-114,-4,-4,-161,417,]),'RIGHT_BRACKET':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,28,30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,67,68,69,70,74,75,78,79,80,82,106,107,108,109,110,114,120,124,125,128,129,130,131,140,141,143,144,145,147,155,158,159,160,161,162,163,169,170,171,173,181,188,198,199,200,208,209,210,211,212,214,215,216,230,231,232,233,237,238,239,288,292,343,373,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,29,29,81,-15,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-28,-29,-30,-33,-57,-16,-3,-125,142,-17,-153,-154,-155,-156,-157,-176,29,-126,-136,-34,-31,-32,-35,195,-56,-14,-174,-158,198,-114,-171,-53,29,210,-134,-139,-123,-149,-109,-18,-36,-47,-159,-254,-163,-207,-15,-133,-135,-137,-140,-147,-148,-55,-162,288,-253,-206,-139,-61,-160,-138,373,-161,]),'COMMA':([2,3,5,6,7,8,9,10,11,12,13,14,31,32,34,35,36,44,45,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,67,68,69,70,74,75,78,79,82,106,107,108,109,110,114,118,119,124,128,129,130,131,134,135,138,143,144,145,152,153,155,156,157,158,159,162,163,170,171,173,177,180,181,188,198,200,208,210,212,214,215,216,225,226,227,230,231,234,236,237,238,239,266,281,288,290,292,308,314,373,405,443,447,450,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-1,-118,-119,-120,-121,-122,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,-153,-154,-155,-156,-157,-176,-4,-5,-126,-34,-31,-32,-35,182,183,187,-14,-174,-158,203,206,-114,-30,207,-171,-53,211,213,-149,-109,-18,187,187,-36,-47,-159,-163,-207,-133,-137,-140,-147,-148,-41,-42,187,-55,-162,207,206,-206,213,-61,206,187,-160,-114,-138,187,206,-161,206,-271,449,-270,]),'ADD':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,67,68,69,70,74,75,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,118,119,120,122,124,125,128,129,130,131,143,144,145,147,152,153,154,155,156,157,158,159,160,164,167,169,170,171,172,173,181,188,198,199,200,202,203,205,206,208,209,210,213,215,217,218,230,231,233,234,236,237,239,265,266,267,272,276,277,281,283,285,288,289,290,291,293,294,295,306,308,314,318,321,335,336,341,342,343,345,346,349,350,351,352,363,364,366,370,372,373,378,382,383,386,393,401,405,406,409,414,421,423,424,431,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,37,37,95,-173,-175,37,-150,-151,-152,-199,-200,-201,-202,-203,-204,-205,-112,-113,37,-115,-116,-117,-123,-124,-1,-118,-119,-120,-121,-122,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,37,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,-153,-154,-155,-156,-157,37,37,-176,37,95,-4,-5,37,37,-126,37,-34,-31,-32,-35,-14,95,-158,95,37,95,-203,-114,-30,95,-171,-53,37,37,95,-123,-149,-109,-63,-18,-36,-47,-159,37,-163,37,37,-83,37,-207,95,-133,37,95,-141,37,-55,-162,95,95,95,-206,-61,37,95,37,37,37,37,-123,95,37,-160,37,-114,-84,-62,37,95,37,-123,95,95,95,37,37,37,37,95,95,-244,37,37,-288,37,37,95,-238,95,-123,-161,37,95,95,37,37,-63,95,37,37,95,37,95,-289,37,-63,-63,37,37,]),'SUBTRACT':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,67,68,69,70,74,75,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,118,119,120,122,124,125,128,129,130,131,143,144,145,147,152,153,154,155,156,157,158,159,160,164,167,169,170,171,172,173,181,188,198,199,200,202,203,205,206,208,209,210,213,215,217,218,230,231,233,234,236,237,239,265,266,267,272,276,277,281,283,285,288,289,290,291,293,294,295,306,308,314,318,321,335,336,341,342,343,345,346,349,350,351,352,363,364,366,370,372,373,378,382,383,386,393,401,405,406,409,414,421,423,424,431,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,38,38,96,-173,-175,38,-150,-151,-152,-199,-200,-201,-202,-203,-204,-205,-112,-113,38,-115,-116,-117,-123,-124,-1,-118,-119,-120,-121,-122,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,38,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,-153,-154,-155,-156,-157,38,38,-176,38,96,-4,-5,38,38,-126,38,-34,-31,-32,-35,-14,96,-158,96,38,96,-203,-114,-30,96,-171,-53,38,38,96,-123,-149,-109,-63,-18,-36,-47,-159,38,-163,38,38,-83,38,-207,96,-133,38,96,-141,38,-55,-162,96,96,96,-206,-61,38,96,38,38,38,38,-123,96,38,-160,38,-114,-84,-62,38,96,38,-123,96,96,96,38,38,38,38,96,96,-244,38,38,-288,38,38,96,-238,96,-123,-161,38,96,96,38,38,-63,96,38,38,96,38,96,-289,38,-63,-63,38,38,]),'NOT':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,74,75,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,143,152,154,156,160,164,172,173,181,188,199,202,203,206,213,217,218,230,265,267,272,276,277,285,289,293,294,306,335,336,341,342,346,349,350,351,352,363,366,378,386,393,401,406,409,421,424,431,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,39,39,39,-199,-200,-201,-202,-203,-204,-205,39,-1,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,39,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,39,39,39,-4,-5,39,39,39,-34,-31,-32,-35,-14,39,-203,-30,39,39,-63,-18,-36,-47,39,39,39,39,39,-141,39,-55,39,39,39,39,39,39,39,-62,39,39,39,39,39,39,-244,39,39,-288,39,39,-238,39,39,39,-63,39,39,39,-289,39,-63,-63,39,39,]),'XOR':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,67,68,69,70,74,75,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,118,119,120,122,124,125,128,129,130,131,143,144,145,147,152,153,154,155,156,157,158,159,160,164,167,169,170,171,172,173,181,188,198,199,200,202,203,205,206,208,209,210,213,215,217,218,230,231,233,234,236,237,239,265,266,267,272,276,277,281,283,285,288,289,290,291,293,294,295,306,308,314,318,321,335,336,341,342,343,345,346,349,350,351,352,363,364,366,370,372,373,378,382,383,386,393,401,405,406,409,414,421,423,424,431,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,40,40,98,-173,-175,40,-150,-151,-152,-199,-200,-201,-202,-203,-204,-205,-112,-113,40,-115,-116,-117,-123,-124,-1,-118,-119,-120,-121,-122,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,40,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,-153,-154,-155,-156,-157,40,40,-176,40,98,-4,-5,40,40,-126,40,-34,-31,-32,-35,-14,98,-158,98,40,98,-203,-114,-30,98,-171,-53,40,40,98,-123,-149,-109,-63,-18,-36,-47,-159,40,-163,40,40,-83,40,-207,98,-133,40,98,-141,40,-55,-162,98,98,98,-206,-61,40,98,40,40,40,40,-123,98,40,-160,40,-114,-84,-62,40,98,40,-123,98,98,98,40,40,40,40,98,98,-244,40,40,-288,40,40,98,-238,98,-123,-161,40,98,98,40,40,-63,98,40,40,98,40,98,-289,40,-63,-63,40,40,]),'AND':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,67,68,69,70,74,75,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,118,119,120,122,124,125,128,129,130,131,143,144,145,147,152,153,154,155,156,157,158,159,160,164,167,169,170,171,172,173,181,188,198,199,200,202,203,205,206,208,209,210,213,215,217,218,230,231,233,234,236,237,239,265,266,267,272,276,277,281,283,285,288,289,290,291,293,294,295,306,308,314,318,321,335,336,341,342,343,345,346,349,350,351,352,363,364,366,370,372,373,378,382,383,386,393,401,405,406,409,414,421,423,424,431,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,42,42,104,-173,-175,42,-150,-151,-152,-199,-200,-201,-202,-203,-204,-205,-112,-113,42,-115,-116,-117,-123,-124,-1,-118,-119,-120,-121,-122,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,42,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,-153,-154,-155,-156,-157,42,42,-176,42,104,-4,-5,42,42,-126,42,-34,-31,-32,-35,-14,104,-158,104,42,104,-203,-114,-30,104,-171,-53,42,42,104,-123,-149,-109,-63,-18,-36,-47,-159,42,-163,42,42,-83,42,-207,104,-133,42,104,-141,42,-55,-162,104,104,104,-206,-61,42,104,42,42,42,42,-123,104,42,-160,42,-114,-84,-62,42,104,42,-123,104,104,104,42,42,42,42,104,104,-244,42,42,-288,42,42,104,-238,104,-123,-161,42,104,104,42,42,-63,104,42,42,104,42,104,-289,42,-63,-63,42,42,]),'INT':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,74,75,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,143,152,154,156,160,164,172,173,181,188,199,202,203,206,213,217,218,230,265,267,272,276,277,285,289,293,294,306,335,336,341,342,346,349,350,351,352,363,366,371,378,386,393,398,401,406,409,421,424,431,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,55,55,55,-199,-200,-201,-202,-203,-204,-205,55,-1,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,55,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,55,55,55,-4,-5,55,55,55,-34,-31,-32,-35,-14,55,-203,-30,55,55,-63,-18,-36,-47,55,55,55,55,55,-141,55,-55,55,55,55,55,55,55,55,-62,55,55,55,55,55,55,-244,55,55,-288,55,55,-238,55,55,55,55,-264,-63,55,55,55,-289,55,-63,-63,55,55,]),'FLOAT':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,74,75,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,143,152,154,156,160,164,172,173,181,188,199,202,203,206,213,217,218,230,265,267,272,276,277,285,289,293,294,306,335,336,341,342,346,349,350,351,352,363,366,371,378,386,393,398,401,406,409,421,424,431,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,56,56,56,-199,-200,-201,-202,-203,-204,-205,56,-1,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,56,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,56,56,56,-4,-5,56,56,56,-34,-31,-32,-35,-14,56,-203,-30,56,56,-63,-18,-36,-47,56,56,56,56,56,-141,56,-55,56,56,56,56,56,56,56,-62,56,56,56,56,56,56,-244,56,56,-288,56,56,-238,56,56,56,56,-264,-63,56,56,56,-289,56,-63,-63,56,56,]),'IMAGINARY':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,74,75,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,143,152,154,156,160,164,172,173,181,188,199,202,203,206,213,217,218,230,265,267,272,276,277,285,289,293,294,306,335,336,341,342,346,349,350,351,352,363,366,371,378,386,393,398,401,406,409,421,424,431,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,57,57,57,-199,-200,-201,-202,-203,-204,-205,57,-1,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,57,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,57,57,57,-4,-5,57,57,57,-34,-31,-32,-35,-14,57,-203,-30,57,57,-63,-18,-36,-47,57,57,57,57,57,-141,57,-55,57,57,57,57,57,57,57,-62,57,57,57,57,57,57,-244,57,57,-288,57,57,-238,57,57,57,57,-264,-63,57,57,57,-289,57,-63,-63,57,57,]),'RUNE':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,74,75,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,143,152,154,156,160,164,172,173,181,188,199,202,203,206,213,217,218,230,265,267,272,276,277,285,289,293,294,306,335,336,341,342,346,349,350,351,352,363,366,371,378,386,393,398,401,406,409,421,424,431,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,58,58,58,-199,-200,-201,-202,-203,-204,-205,58,-1,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,58,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,58,58,58,-4,-5,58,58,58,-34,-31,-32,-35,-14,58,-203,-30,58,58,-63,-18,-36,-47,58,58,58,58,58,-141,58,-55,58,58,58,58,58,58,58,-62,58,58,58,58,58,58,-244,58,58,-288,58,58,-238,58,58,58,58,-264,-63,58,58,58,-289,58,-63,-63,58,58,]),'STRING':([2,3,5,6,7,8,9,10,11,12,13,14,16,27,33,37,38,39,40,41,42,43,46,54,62,63,64,65,67,68,69,70,74,75,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,113,115,118,119,120,122,125,128,129,130,131,143,152,154,156,160,164,172,173,176,177,179,181,188,199,202,203,206,213,217,218,220,224,230,265,267,272,276,277,285,289,293,294,306,335,336,341,342,346,349,350,351,352,363,366,371,378,386,393,398,401,406,409,421,424,431,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,59,59,59,-199,-200,-201,-202,-203,-204,-205,59,-1,-6,-7,-11,-12,-28,-29,-30,-33,-57,-16,-3,-125,-17,59,-177,-178,-179,-180,-181,-182,-183,-184,-185,-186,-187,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,59,59,59,-4,-5,59,59,59,-34,-31,-32,-35,-14,59,-203,-30,59,59,-63,-18,223,-4,-26,-36,-47,59,59,59,59,59,-141,59,223,-25,-55,59,59,59,59,59,59,59,-62,59,59,59,59,59,59,-244,59,59,-288,59,59,-238,59,59,59,59,-264,-63,59,59,59,-289,59,-63,-63,59,59,]),'SEMICOLON':([2,3,5,6,7,8,9,10,11,12,13,14,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,67,68,69,70,74,75,78,79,82,106,107,108,109,110,114,124,128,129,130,131,138,143,144,145,153,155,158,159,170,171,172,173,174,176,177,179,181,186,188,189,190,191,193,194,198,200,205,208,210,218,220,221,222,223,224,227,229,230,231,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,266,267,268,269,271,272,273,274,276,281,285,286,287,288,291,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,314,315,317,320,321,322,323,325,326,327,329,330,332,344,348,349,354,359,361,362,364,365,367,373,374,375,380,381,382,384,385,387,388,389,390,391,392,394,399,401,411,414,418,419,420,421,428,433,439,441,445,446,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-28,-29,-30,-33,-57,-16,-3,-125,-17,-153,-154,-155,-156,-157,-176,-126,-34,-31,-32,-35,-82,-14,-174,-158,-85,-114,-171,-53,-149,-109,-63,-18,219,-24,-4,-26,-36,-80,-47,228,-50,-51,-54,-4,-159,-163,-83,-207,-133,-228,-24,-22,-23,-27,-25,-82,-52,-55,-162,-85,-206,-61,293,-208,-209,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-221,-222,-64,-65,-66,-223,-224,-225,-226,-227,-231,-304,-307,-307,-310,-228,-250,-251,-228,-123,-228,-21,-81,-160,-84,-62,-228,-291,-234,-235,-236,-302,-303,-305,-306,-230,-308,-309,346,-123,-231,349,-279,-285,-311,-70,-71,-77,-86,-87,-91,-92,-95,-229,-272,-282,-75,-94,-99,-103,-232,-237,-104,-161,-247,-292,409,-281,-277,-72,410,-88,412,-93,-96,413,-100,-101,-243,-63,-76,-102,-246,-248,-249,-228,-252,-260,-63,-63,-228,-228,]),'ASSIGNMENT':([2,3,5,6,7,8,9,10,11,12,13,14,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,67,68,69,70,74,75,78,79,82,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,124,128,129,130,131,138,143,144,145,155,158,159,170,171,173,181,186,188,198,200,205,208,210,227,230,231,236,237,239,266,281,283,287,288,291,308,314,318,325,331,334,337,338,339,340,355,356,362,373,405,407,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-28,-29,-30,-33,-57,-16,-3,-125,-17,-188,-189,-190,-191,-192,-193,-194,-195,-196,-197,-198,-153,-154,-155,-156,-157,-176,-126,-34,-31,-32,-35,-82,-14,-174,-158,-114,-171,-53,-149,-109,-18,-36,-80,-47,-159,-163,-83,-207,-133,-82,-55,-162,-85,-206,-61,-85,-123,-240,-81,-160,-84,-123,-85,351,-79,358,363,366,-239,-241,-242,386,-78,393,-161,-85,351,]),'COLON':([2,3,5,6,7,8,9,10,11,12,13,14,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,67,68,69,70,74,75,78,79,82,106,107,108,109,110,112,114,124,128,129,130,131,143,144,145,147,148,153,155,158,159,165,166,167,168,169,170,171,173,181,188,198,200,205,208,209,210,230,231,233,236,237,239,259,281,288,291,364,373,377,379,402,403,404,422,423,430,432,435,437,440,442,443,447,450,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-28,-29,-30,-33,-57,-16,-3,-125,-17,-153,-154,-155,-156,-157,-254,-176,-126,-34,-31,-32,-35,-14,-174,-158,-253,199,-85,-114,-171,-53,217,-143,-144,-145,-123,-149,-109,-18,-36,-47,-159,-163,-83,-207,-144,-133,-55,-162,289,-85,-206,-61,294,-230,-160,-84,-232,-161,401,-297,-296,-298,-299,-300,-301,439,-259,441,-268,-258,-267,-271,-269,-270,]),'LEFT_BRACE':([2,3,5,6,7,8,9,10,11,12,13,14,17,20,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,67,68,69,70,74,75,78,79,82,106,107,108,109,110,114,124,126,128,129,130,131,143,144,145,153,155,156,158,159,170,171,172,173,181,188,198,200,205,208,210,218,230,231,236,237,239,260,261,262,263,264,266,275,276,285,288,291,293,294,296,297,298,308,310,311,312,313,314,342,345,346,364,365,367,368,369,370,372,373,383,400,401,409,421,425,426,427,439,441,445,446,448,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,66,72,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-28,-29,-30,-33,-57,-16,-3,-125,-17,-153,-154,-155,-156,-157,-176,-126,172,-34,-31,-32,-35,-14,-174,-158,-85,-114,172,-171,-53,-149,-109,-63,-18,-36,-47,-159,-163,-83,-207,-133,172,-55,-162,-85,-206,-61,-223,-224,-225,-226,-227,-231,309,-276,-245,-160,-84,-62,172,-234,-235,-236,-123,172,-273,-274,-275,-277,-254,172,-244,-232,-237,-104,395,396,-253,-123,-161,-287,172,-63,-228,172,-278,-283,-286,-63,-63,172,172,-263,]),'ELLIPSIS':([27,71,120,132,136,137,138,160,180,183,186,227,287,],[80,-44,80,-44,185,-43,-82,80,-82,-44,-80,-82,-81,]),'LOGICAL_OR':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,208,209,210,215,231,233,234,236,237,239,266,281,288,290,295,308,314,321,343,345,364,370,372,373,382,383,405,414,423,],[84,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,84,-123,-124,-126,84,-158,84,84,-114,84,-171,-53,84,-123,-149,-109,-159,-163,-207,84,-133,84,-162,84,84,84,-206,-61,84,-123,-160,-114,84,-123,84,84,84,84,84,84,-123,-161,84,84,84,84,84,]),'LOGICAL_AND':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,208,209,210,215,231,233,234,236,237,239,266,281,288,290,295,308,314,321,343,345,364,370,372,373,382,383,405,414,423,],[85,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,85,-123,-124,-126,85,-158,85,85,-114,85,-171,-53,85,-123,-149,-109,-159,-163,-207,85,-133,85,-162,85,85,85,-206,-61,85,-123,-160,-114,85,-123,85,85,85,85,85,85,-123,-161,85,85,85,85,85,]),'EQUAL':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,208,209,210,215,231,233,234,236,237,239,266,281,288,290,295,308,314,321,343,345,364,370,372,373,382,383,405,414,423,],[89,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,89,-123,-124,-126,89,-158,89,89,-114,89,-171,-53,89,-123,-149,-109,-159,-163,-207,89,-133,89,-162,89,89,89,-206,-61,89,-123,-160,-114,89,-123,89,89,89,89,89,89,-123,-161,89,89,89,89,89,]),'NOT_EQUAL':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,208,209,210,215,231,233,234,236,237,239,266,281,288,290,295,308,314,321,343,345,364,370,372,373,382,383,405,414,423,],[90,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,90,-123,-124,-126,90,-158,90,90,-114,90,-171,-53,90,-123,-149,-109,-159,-163,-207,90,-133,90,-162,90,90,90,-206,-61,90,-123,-160,-114,90,-123,90,90,90,90,90,90,-123,-161,90,90,90,90,90,]),'LESS_THAN':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,208,209,210,215,231,233,234,236,237,239,266,281,288,290,295,308,314,321,343,345,364,370,372,373,382,383,405,414,423,],[91,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,91,-123,-124,-126,91,-158,91,91,-114,91,-171,-53,91,-123,-149,-109,-159,-163,-207,91,-133,91,-162,91,91,91,-206,-61,91,-123,-160,-114,91,-123,91,91,91,91,91,91,-123,-161,91,91,91,91,91,]),'LESS_THAN_EQUAL':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,208,209,210,215,231,233,234,236,237,239,266,281,288,290,295,308,314,321,343,345,364,370,372,373,382,383,405,414,423,],[92,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,92,-123,-124,-126,92,-158,92,92,-114,92,-171,-53,92,-123,-149,-109,-159,-163,-207,92,-133,92,-162,92,92,92,-206,-61,92,-123,-160,-114,92,-123,92,92,92,92,92,92,-123,-161,92,92,92,92,92,]),'GREATER_THAN':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,208,209,210,215,231,233,234,236,237,239,266,281,288,290,295,308,314,321,343,345,364,370,372,373,382,383,405,414,423,],[93,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,93,-123,-124,-126,93,-158,93,93,-114,93,-171,-53,93,-123,-149,-109,-159,-163,-207,93,-133,93,-162,93,93,93,-206,-61,93,-123,-160,-114,93,-123,93,93,93,93,93,93,-123,-161,93,93,93,93,93,]),'GREATER_THAN_EQUAL':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,208,209,210,215,231,233,234,236,237,239,266,281,288,290,295,308,314,321,343,345,364,370,372,373,382,383,405,414,423,],[94,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,94,-123,-124,-126,94,-158,94,94,-114,94,-171,-53,94,-123,-149,-109,-159,-163,-207,94,-133,94,-162,94,94,94,-206,-61,94,-123,-160,-114,94,-123,94,94,94,94,94,94,-123,-161,94,94,94,94,94,]),'OR':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,205,208,209,210,215,231,233,234,236,237,239,266,281,283,288,290,291,295,308,314,318,321,343,345,364,370,372,373,382,383,405,414,423,],[97,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,97,-123,-124,-126,97,-158,97,97,-114,97,-171,-53,97,-123,-149,-109,-159,-163,-83,-207,97,-133,97,-162,97,97,97,-206,-61,97,-123,97,-160,-114,-84,97,-123,97,97,97,97,97,97,97,-123,-161,97,97,97,97,97,]),'QUOTIENT':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,205,208,209,210,215,231,233,234,236,237,239,266,281,283,288,290,291,295,308,314,318,321,343,345,364,370,372,373,382,383,405,414,423,],[100,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,100,-123,-124,-126,100,-158,100,100,-114,100,-171,-53,100,-123,-149,-109,-159,-163,-83,-207,100,-133,100,-162,100,100,100,-206,-61,100,-123,100,-160,-114,-84,100,-123,100,100,100,100,100,100,100,-123,-161,100,100,100,100,100,]),'REMAINDER':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,205,208,209,210,215,231,233,234,236,237,239,266,281,283,288,290,291,295,308,314,318,321,343,345,364,370,372,373,382,383,405,414,423,],[101,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,101,-123,-124,-126,101,-158,101,101,-114,101,-171,-53,101,-123,-149,-109,-159,-163,-83,-207,101,-133,101,-162,101,101,101,-206,-61,101,-123,101,-160,-114,-84,101,-123,101,101,101,101,101,101,101,-123,-161,101,101,101,101,101,]),'SHIFT_LEFT':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,205,208,209,210,215,231,233,234,236,237,239,266,281,283,288,290,291,295,308,314,318,321,343,345,364,370,372,373,382,383,405,414,423,],[102,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,102,-123,-124,-126,102,-158,102,102,-114,102,-171,-53,102,-123,-149,-109,-159,-163,-83,-207,102,-133,102,-162,102,102,102,-206,-61,102,-123,102,-160,-114,-84,102,-123,102,102,102,102,102,102,102,-123,-161,102,102,102,102,102,]),'SHIFT_RIGHT':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,205,208,209,210,215,231,233,234,236,237,239,266,281,283,288,290,291,295,308,314,318,321,343,345,364,370,372,373,382,383,405,414,423,],[103,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,103,-123,-124,-126,103,-158,103,103,-114,103,-171,-53,103,-123,-149,-109,-159,-163,-83,-207,103,-133,103,-162,103,103,103,-206,-61,103,-123,103,-160,-114,-84,103,-123,103,103,103,103,103,103,103,-123,-161,103,103,103,103,103,]),'AND_NOT':([30,31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,116,118,119,124,144,145,147,153,155,157,158,159,167,169,170,171,198,200,205,208,209,210,215,231,233,234,236,237,239,266,281,283,288,290,291,295,308,314,318,321,343,345,364,370,372,373,382,383,405,414,423,],[105,-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,105,-123,-124,-126,105,-158,105,105,-114,105,-171,-53,105,-123,-149,-109,-159,-163,-83,-207,105,-133,105,-162,105,105,105,-206,-61,105,-123,105,-160,-114,-84,105,-123,105,105,105,105,105,105,105,-123,-161,105,105,105,105,105,]),'INCREMENT':([31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,124,144,145,155,158,159,170,171,198,200,208,210,231,237,239,266,281,288,308,314,373,],[-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,-126,-174,-158,-114,-171,-53,-149,-109,-159,-163,-207,-133,-162,-206,-61,297,-123,-160,-123,297,-161,]),'DECREMENT':([31,32,34,35,36,44,45,49,50,51,52,53,55,56,57,58,59,79,106,107,108,109,110,114,124,144,145,155,158,159,170,171,198,200,208,210,231,237,239,266,281,288,308,314,373,],[-173,-175,-150,-151,-152,-112,-113,-115,-116,-117,-123,-124,-118,-119,-120,-121,-122,-125,-153,-154,-155,-156,-157,-176,-126,-174,-158,-114,-171,-53,-149,-109,-159,-163,-207,-133,-162,-206,-61,298,-123,-160,-123,298,-161,]),'RIGHT_BRACE':([66,72,127,139,172,218,219,228,293,309,347,376,395,396,401,415,416,421,429,434,439,441,445,446,],[-20,-49,173,188,-63,239,-19,-48,-62,-294,375,-293,-256,-262,-63,428,433,-295,-255,-261,-63,-63,-257,-266,]),'GO':([172,218,293,294,401,421,439,441,445,446,],[-63,265,-62,265,-63,265,-63,-63,265,265,]),'RETURN':([172,218,293,294,401,421,439,441,445,446,],[-63,267,-62,267,-63,267,-63,-63,267,267,]),'BREAK':([172,218,293,294,401,421,439,441,445,446,],[-63,268,-62,268,-63,268,-63,-63,268,268,]),'CONTINUE':([172,218,293,294,401,421,439,441,445,446,],[-63,269,-62,269,-63,269,-63,-63,269,269,]),'GOTO':([172,218,293,294,401,421,439,441,445,446,],[-63,270,-62,270,-63,270,-63,-63,270,270,]),'FALLTHROUGH':([172,218,293,294,401,421,439,441,445,446,],[-63,271,-62,271,-63,271,-63,-63,271,271,]),'IF':([172,218,293,294,400,401,421,439,441,445,446,],[-63,272,-62,272,272,-63,272,-63,-63,272,272,]),'SELECT':([172,218,293,294,401,421,439,441,445,446,],[-63,275,-62,275,-63,275,-63,-63,275,275,]),'FOR':([172,218,293,294,401,421,439,441,445,446,],[-63,276,-62,276,-63,276,-63,-63,276,276,]),'DEFER':([172,218,293,294,401,421,439,441,445,446,],[-63,277,-62,277,-63,277,-63,-63,277,277,]),'CONST':([172,218,293,294,401,421,439,441,445,446,],[-63,278,-62,278,-63,278,-63,-63,278,278,]),'TYPE':([172,218,293,294,401,421,438,439,441,445,446,449,],[-63,279,-62,279,-63,279,444,-63,-63,279,279,450,]),'VARIABLE':([172,218,293,294,401,421,439,441,445,446,],[-63,280,-62,280,-63,280,-63,-63,280,280,]),'SWITCH':([172,218,293,294,401,421,439,441,445,446,],[-63,285,-62,285,-63,285,-63,-63,285,285,]),'DEFINE':([186,227,281,284,287,308,319,372,408,],[-80,-82,-82,341,-81,-82,352,398,424,]),'ELSE':([239,374,],[-61,400,]),'RANGE':([276,316,351,352,],[-290,350,-288,-289,]),'CASE':([293,309,347,376,395,396,401,415,416,421,429,434,439,441,445,446,],[-62,-294,378,-293,-256,-262,-63,431,436,-295,-255,-261,-63,-63,-257,-266,]),'DEFAULT':([293,309,347,376,395,396,401,415,416,421,429,434,439,441,445,446,],[-62,-294,379,-293,-256,-262,-63,432,437,-295,-255,-261,-63,-63,-257,-266,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Type':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[1,25,47,68,75,47,75,47,68,117,131,141,75,47,47,152,117,47,47,47,25,75,197,47,68,47,47,220,226,75,47,117,47,47,47,47,47,47,47,47,47,47,47,47,47,356,359,362,47,47,47,47,47,47,47,389,47,47,47,47,47,47,47,47,47,443,197,47,47,]),'TypeName':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,127,132,139,142,146,152,154,160,164,175,178,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[2,2,54,2,2,54,2,54,2,54,2,2,2,54,54,54,54,54,54,54,179,2,193,2,2,54,2,54,54,2,224,2,2,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,2,2,2,54,54,54,54,54,54,54,2,54,54,54,54,54,54,54,54,54,2,2,54,54,]),'TypeLit':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'QualifiedIdent':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,127,132,139,142,146,152,154,160,164,175,178,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[6,6,53,6,6,53,6,53,6,119,6,6,6,53,53,119,119,53,53,53,6,6,6,6,6,53,6,53,53,6,6,6,6,53,119,53,53,53,53,53,53,53,53,53,53,53,53,53,6,6,6,53,53,53,53,53,53,53,6,53,53,53,53,53,53,53,53,53,6,6,53,53,]),'ArrayType':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[7,7,62,7,7,62,7,62,7,62,7,7,7,62,62,62,62,62,62,62,7,7,7,62,7,62,62,7,7,7,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,7,7,7,62,62,62,62,62,62,62,7,62,62,62,62,62,62,62,62,62,7,7,62,62,]),'StructType':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[8,8,63,8,8,63,8,63,8,63,8,8,8,63,63,63,63,63,63,63,8,8,8,63,8,63,63,8,8,8,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,8,8,8,63,63,63,63,63,63,63,8,63,63,63,63,63,63,63,63,63,8,8,63,63,]),'PointerType':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'FunctionType':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'InterfaceType':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'SliceType':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[12,12,64,12,12,64,12,64,12,64,12,12,12,64,64,64,64,64,64,64,12,12,12,64,12,64,64,12,12,12,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,12,12,12,64,64,64,64,64,64,64,12,64,64,64,64,64,64,64,64,64,12,12,64,64,]),'MapType':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[13,13,65,13,13,65,13,65,13,65,13,13,13,65,65,65,65,65,65,65,13,13,13,65,13,65,65,13,13,13,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,13,13,13,65,65,65,65,65,65,65,13,65,65,65,65,65,65,65,65,65,13,13,65,65,]),'ChannelType':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'PackageName':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,127,132,139,142,146,152,154,160,164,175,178,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'ChannelTypeOr':([0,4,16,18,22,27,29,33,41,46,70,73,81,83,112,113,115,120,122,125,132,142,146,152,154,160,164,175,184,195,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,325,331,334,335,336,341,342,349,350,352,358,363,371,378,386,393,406,409,421,431,436,438,445,446,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ArrayLength':([16,27,120,160,],[28,28,28,28,]),'Expression':([16,27,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,378,386,393,406,409,421,431,445,446,],[30,30,116,144,147,153,116,30,157,167,153,209,215,233,234,153,236,167,266,295,153,266,314,321,266,343,266,345,364,153,153,370,382,383,153,153,405,153,414,423,266,266,153,266,266,]),'UnaryExpr':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,378,386,393,406,409,421,431,445,446,],[31,31,114,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PrimaryExpr':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,397,32,32,32,32,32,32,32,32,32,]),'unary_op':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,378,386,393,406,409,421,431,445,446,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'Operand':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'Conversion':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'MethodExpr':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'Literal':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'OperandName':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ReceiverType':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'BasicLit':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'CompositeLit':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'FunctionLit':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'LiteralType':([16,27,33,46,83,112,113,115,120,122,125,152,160,164,199,202,203,206,213,218,265,267,272,276,277,285,289,294,306,335,336,341,342,349,350,352,363,371,378,386,393,406,409,421,431,445,446,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'BaseType':([18,41,154,],[67,67,67,]),'Signature':([19,61,121,192,],[69,126,156,229,]),'Parameters':([19,61,70,121,192,],[70,70,128,70,70,]),'ElementType':([22,29,81,142,195,],[74,82,143,196,230,]),'binary_op':([30,116,144,147,153,157,167,209,215,233,234,236,266,295,314,321,343,345,364,370,382,383,405,414,423,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'rel_op':([30,116,144,147,153,157,167,209,215,233,234,236,266,295,314,321,343,345,364,370,382,383,405,414,423,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'add_op':([30,116,144,147,153,157,167,209,215,233,234,236,266,283,295,314,318,321,343,345,364,370,382,383,405,414,423,],[87,87,87,87,87,87,87,87,87,87,87,87,87,339,87,87,339,87,87,87,87,87,87,87,87,87,87,]),'mul_op':([30,116,144,147,153,157,167,209,215,233,234,236,266,283,295,314,318,321,343,345,364,370,382,383,405,414,423,],[88,88,88,88,88,88,88,88,88,88,88,88,88,340,88,88,340,88,88,88,88,88,88,88,88,88,88,]),'Selector':([32,397,],[106,106,]),'Index':([32,397,],[107,107,]),'Slice':([32,397,],[108,108,]),'TypeAssertion':([32,397,],[109,109,]),'Arguments':([32,397,],[110,110,]),'LiteralValue':([60,125,160,164,213,],[124,168,168,216,168,]),'ManyFieldDecl':([66,],[127,]),'ResultPlus':([70,],[129,]),'Result':([70,],[130,]),'ParameterListPlus':([71,132,],[133,133,]),'ParameterList':([71,132,183,],[134,134,225,]),'ParameterDecl':([71,132,183,],[135,135,135,]),'IdentifierListPlus':([71,132,183,],[136,136,136,]),'IdentifierList':([71,127,132,183,218,272,276,278,280,285,294,353,360,378,409,421,445,446,],[137,175,137,137,284,284,319,325,334,284,284,325,334,408,284,284,284,284,]),'InterfaceTypePlus':([72,],[139,]),'KeyType':([73,],[140,]),'ExpressionPlus':([112,199,342,],[148,232,368,]),'ArgumentsPlus':([113,],[149,]),'ArgumentsInOr':([113,],[150,]),'ExpressionList':([113,152,203,218,267,272,276,285,294,336,341,352,363,378,386,409,421,431,445,446,],[151,204,235,283,300,283,318,283,283,365,367,367,394,407,411,283,283,440,283,283,]),'MethodName':([123,139,],[158,192,]),'ElementListPlus':([125,160,],[161,161,]),'ElementList':([125,160,],[162,162,]),'KeyedElement':([125,160,213,],[163,163,238,]),'KeyPlus':([125,160,213,],[164,164,164,]),'Key':([125,160,213,],[165,165,165,]),'FieldName':([125,160,213,],[166,166,166,]),'FunctionBody':([126,156,],[170,170,]),'Block':([126,156,218,294,310,345,400,421,445,446,],[171,171,250,250,348,374,420,250,250,250,]),'FieldDecl':([127,],[174,]),'EmbeddedField':([127,],[176,]),'EllipsisPlus':([136,],[184,]),'IdentStar':([138,177,180,227,281,308,],[186,186,186,287,186,186,]),'InterfaceTypeMethod':([139,],[189,]),'MethodSpec':([139,],[190,]),'InterfaceTypeName':([139,],[191,]),'CommaExpressionListPlus':([152,],[201,]),'ExpressionStar':([153,236,266,314,405,],[205,291,205,205,205,]),'KeyedElementStar':([163,238,],[212,292,]),'Element':([164,],[214,]),'StatementList':([172,401,439,441,],[218,421,445,446,]),'TagPlus':([176,220,],[221,286,]),'Tag':([176,220,],[222,222,]),'Statement':([218,294,421,445,446,],[240,344,240,240,240,]),'Declaration':([218,294,421,445,446,],[241,241,241,241,241,]),'LabeledStmt':([218,294,421,445,446,],[242,242,242,242,242,]),'SimpleStmt':([218,272,276,285,294,409,421,445,446,],[243,307,320,307,243,427,243,243,243,]),'GoStmt':([218,294,421,445,446,],[244,244,244,244,244,]),'ReturnStmt':([218,294,421,445,446,],[245,245,245,245,245,]),'BreakStmt':([218,294,421,445,446,],[246,246,246,246,246,]),'ContinueStmt':([218,294,421,445,446,],[247,247,247,247,247,]),'GotoStmt':([218,294,421,445,446,],[248,248,248,248,248,]),'FallthroughStmt':([218,294,421,445,446,],[249,249,249,249,249,]),'IfStmt':([218,294,400,421,445,446,],[251,251,419,251,251,251,]),'SwitchStmt':([218,294,421,445,446,],[252,252,252,252,252,]),'SelectStmt':([218,294,421,445,446,],[253,253,253,253,253,]),'ForStmt':([218,294,421,445,446,],[254,254,254,254,254,]),'DeferStmt':([218,294,421,445,446,],[255,255,255,255,255,]),'ConstDecl':([218,294,421,445,446,],[256,256,256,256,256,]),'TypeDecl':([218,294,421,445,446,],[257,257,257,257,257,]),'VarDecl':([218,294,421,445,446,],[258,258,258,258,258,]),'Label':([218,268,269,270,294,421,445,446,],[259,302,302,305,259,259,259,259,]),'ExpressionStmt':([218,272,276,285,294,409,421,445,446,],[260,260,260,260,260,260,260,260,260,]),'SendStmt':([218,272,276,285,294,378,409,421,445,446,],[261,261,261,261,261,403,261,261,261,261,]),'IncDecStmt':([218,272,276,285,294,409,421,445,446,],[262,262,262,262,262,262,262,262,262,]),'Assignment':([218,272,276,285,294,409,421,445,446,],[263,263,263,263,263,263,263,263,263,]),'ShortVarDecl':([218,272,276,285,294,409,421,445,446,],[264,264,264,264,264,264,264,264,264,]),'ExprSwitchStmt':([218,294,421,445,446,],[273,273,273,273,273,]),'TypeSwitchStmt':([218,294,421,445,446,],[274,274,274,274,274,]),'Channel':([218,272,276,285,294,378,409,421,445,446,],[282,282,282,282,282,282,282,282,282,282,]),'IncDecOr':([266,314,],[296,296,]),'ExpressionListPlus':([267,],[299,]),'LabelPlus':([268,269,],[301,304,]),'SimpleStmtSemicolonPlus':([272,285,],[306,342,]),'ForInternal':([276,],[310,]),'Condition':([276,349,],[311,381,]),'ForClause':([276,],[312,]),'RangeClause':([276,],[313,]),'InitStmtPlus':([276,],[315,]),'ExpListAssignIdListDefOrPlus':([276,378,],[316,406,]),'InitStmt':([276,],[317,]),'ConstSpecOr':([278,],[322,]),'ConstSpec':([278,353,],[323,385,]),'TypeSpecOr':([279,],[326,]),'TypeSpec':([279,357,],[327,388,]),'AliasDecl':([279,357,],[329,329,]),'TypeDef':([279,357,],[330,330,]),'VarSpec':([280,360,],[332,391,]),'assign_op':([283,318,],[336,336,]),'add_op_mul_op_or_plus':([283,318,],[337,337,]),'add_op_mul_op_or':([283,318,],[338,338,]),'CommClausePlus':([309,],[347,]),'ConstSpecStar':([324,],[353,]),'TypeAssignmentExpressionListPlus':([325,],[354,]),'TypePlus':([325,],[355,]),'TypeSpecStar':([328,],[357,]),'VarSpecStar':([333,],[360,]),'TypeExpressionListOr':([334,],[361,]),'TypeSwitchGuard':([342,],[369,]),'IdentDefinePlus':([342,],[371,]),'CommClause':([347,],[376,]),'CommCase':([347,],[377,]),'ConditionPlus':([349,],[380,]),'AssignmentExpressionListPlus':([362,],[392,]),'ElsePlus':([374,],[399,]),'SentStmtRecvStmtOr':([378,],[402,]),'RecvStmt':([378,],[404,]),'ExprCaseClauseStar':([395,],[415,]),'TypeCaseClauseStar':([396,],[416,]),'Nested_if_block':([400,],[418,]),'RecvExpr':([406,],[422,]),'PostStmtPlus':([409,],[425,]),'PostStmt':([409,],[426,]),'ExprCaseClause':([415,],[429,]),'ExprSwitchCase':([415,],[430,]),'TypeCaseClause':([416,],[434,]),'TypeSwitchCase':([416,],[435,]),'TypeList':([436,],[442,]),'CommaTypePlus':([443,],[447,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Type","S'",1,None,None,None),
  ('Type -> TypeName','Type',1,'p_type','parser.py',19),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',20),
  ('Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS','Type',3,'p_type','parser.py',21),
  ('TypeName -> IDENT','TypeName',1,'p_type_name','parser.py',27),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',28),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',34),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',35),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',36),
  ('TypeLit -> FunctionType','TypeLit',1,'p_type_lit','parser.py',37),
  ('TypeLit -> InterfaceType','TypeLit',1,'p_type_lit','parser.py',38),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',39),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',40),
  ('TypeLit -> ChannelType','TypeLit',1,'p_type_lit','parser.py',41),
  ('ArrayType -> LEFT_BRACKET ArrayLength RIGHT_BRACKET ElementType','ArrayType',4,'p_array_type','parser.py',44),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',47),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',50),
  ('SliceType -> LEFT_BRACKET RIGHT_BRACKET ElementType','SliceType',3,'p_slice_type','parser.py',53),
  ('StructType -> STRUCT LEFT_BRACE ManyFieldDecl RIGHT_BRACE','StructType',4,'p_struct_type','parser.py',56),
  ('ManyFieldDecl -> ManyFieldDecl FieldDecl SEMICOLON','ManyFieldDecl',3,'p_many_field_decl','parser.py',60),
  ('ManyFieldDecl -> <empty>','ManyFieldDecl',0,'p_many_field_decl','parser.py',61),
  ('FieldDecl -> IdentifierList Type TagPlus','FieldDecl',3,'p_field_decl','parser.py',67),
  ('FieldDecl -> EmbeddedField TagPlus','FieldDecl',2,'p_field_decl','parser.py',68),
  ('TagPlus -> Tag','TagPlus',1,'p_tag_plus','parser.py',74),
  ('TagPlus -> <empty>','TagPlus',0,'p_tag_plus','parser.py',75),
  ('EmbeddedField -> MULTIPLY TypeName','EmbeddedField',2,'p_embedded_field','parser.py',81),
  ('EmbeddedField -> TypeName','EmbeddedField',1,'p_embedded_field','parser.py',82),
  ('Tag -> STRING','Tag',1,'p_tag','parser.py',88),
  ('PointerType -> MULTIPLY BaseType','PointerType',2,'p_pointer_type','parser.py',91),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',94),
  ('FunctionType -> FUNCTION Signature','FunctionType',2,'p_function_type','parser.py',97),
  ('Signature -> Parameters ResultPlus','Signature',2,'p_signature','parser.py',100),
  ('ResultPlus -> Result','ResultPlus',1,'p_result_plus','parser.py',103),
  ('ResultPlus -> <empty>','ResultPlus',0,'p_result_plus','parser.py',104),
  ('Result -> Parameters','Result',1,'p_result','parser.py',110),
  ('Result -> Type','Result',1,'p_result','parser.py',111),
  ('Parameters -> LEFT_PARENTHESIS ParameterListPlus RIGHT_PARENTHESIS','Parameters',3,'p_parameters','parser.py',114),
  ('ParameterListPlus -> ParameterList COMMA','ParameterListPlus',2,'p_parameters_list_plus','parser.py',117),
  ('ParameterListPlus -> ParameterList','ParameterListPlus',1,'p_parameters_list_plus','parser.py',118),
  ('ParameterListPlus -> <empty>','ParameterListPlus',0,'p_parameters_list_plus','parser.py',119),
  ('ParameterList -> ParameterDecl','ParameterList',1,'p_parameter_list','parser.py',125),
  ('ParameterList -> ParameterDecl COMMA ParameterList','ParameterList',3,'p_parameter_list','parser.py',126),
  ('ParameterDecl -> IdentifierListPlus EllipsisPlus Type','ParameterDecl',3,'p_parameter_decl','parser.py',132),
  ('IdentifierListPlus -> IdentifierList','IdentifierListPlus',1,'p_identifier_list_plus','parser.py',135),
  ('IdentifierListPlus -> <empty>','IdentifierListPlus',0,'p_identifier_list_plus','parser.py',136),
  ('EllipsisPlus -> ELLIPSIS','EllipsisPlus',1,'p_ellipsis_plus','parser.py',142),
  ('EllipsisPlus -> <empty>','EllipsisPlus',0,'p_ellipsis_plus','parser.py',143),
  ('InterfaceType -> INTERFACE LEFT_BRACE InterfaceTypePlus RIGHT_BRACE','InterfaceType',4,'p_interface_type','parser.py',150),
  ('InterfaceTypePlus -> InterfaceTypePlus InterfaceTypeMethod SEMICOLON','InterfaceTypePlus',3,'p_interface_type_plus','parser.py',153),
  ('InterfaceTypePlus -> <empty>','InterfaceTypePlus',0,'p_interface_type_plus','parser.py',154),
  ('InterfaceTypeMethod -> MethodSpec','InterfaceTypeMethod',1,'p_interface_type_method','parser.py',160),
  ('InterfaceTypeMethod -> InterfaceTypeName','InterfaceTypeMethod',1,'p_interface_type_method','parser.py',161),
  ('MethodSpec -> MethodName Signature','MethodSpec',2,'p_method_spec','parser.py',164),
  ('MethodName -> IDENT','MethodName',1,'p_method_name','parser.py',167),
  ('InterfaceTypeName -> TypeName','InterfaceTypeName',1,'p_interface_type_name','parser.py',170),
  ('MapType -> MAP LEFT_BRACKET KeyType RIGHT_BRACKET ElementType','MapType',5,'p_map_type','parser.py',173),
  ('KeyType -> Type','KeyType',1,'p_key_type','parser.py',176),
  ('ChannelType -> ChannelTypeOr ElementType','ChannelType',2,'p_channel_type','parser.py',179),
  ('ChannelTypeOr -> CHAN','ChannelTypeOr',1,'p_channel_type_or','parser.py',182),
  ('ChannelTypeOr -> CHAN ARROW','ChannelTypeOr',2,'p_channel_type_or','parser.py',183),
  ('ChannelTypeOr -> ARROW CHAN','ChannelTypeOr',2,'p_channel_type_or','parser.py',184),
  ('Block -> LEFT_BRACE StatementList RIGHT_BRACE','Block',3,'p_block','parser.py',190),
  ('StatementList -> StatementList Statement SEMICOLON','StatementList',3,'p_statement_list','parser.py',193),
  ('StatementList -> <empty>','StatementList',0,'p_statement_list','parser.py',194),
  ('Declaration -> ConstDecl','Declaration',1,'p_declaration','parser.py',201),
  ('Declaration -> TypeDecl','Declaration',1,'p_declaration','parser.py',202),
  ('Declaration -> VarDecl','Declaration',1,'p_declaration','parser.py',203),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_top_level_decl','parser.py',206),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_top_level_decl','parser.py',207),
  ('TopLevelDecl -> MethodDecl','TopLevelDecl',1,'p_top_level_decl','parser.py',208),
  ('ConstDecl -> CONST ConstSpecOr','ConstDecl',2,'p_const_decl','parser.py',211),
  ('ConstSpecOr -> ConstSpec','ConstSpecOr',1,'p_const_spec_or','parser.py',214),
  ('ConstSpecOr -> LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS','ConstSpecOr',3,'p_const_spec_or','parser.py',215),
  ('ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON','ConstSpecStar',3,'p_const_spec_star','parser.py',221),
  ('ConstSpecStar -> <empty>','ConstSpecStar',0,'p_const_spec_star','parser.py',222),
  ('ConstSpec -> IdentifierList TypeAssignmentExpressionListPlus','ConstSpec',2,'p_const_spec','parser.py',228),
  ('TypeAssignmentExpressionListPlus -> TypePlus ASSIGNMENT ExpressionList','TypeAssignmentExpressionListPlus',3,'p_type_assignment_expression_list_plus','parser.py',231),
  ('TypeAssignmentExpressionListPlus -> <empty>','TypeAssignmentExpressionListPlus',0,'p_type_assignment_expression_list_plus','parser.py',232),
  ('TypePlus -> Type','TypePlus',1,'p_type_plus','parser.py',238),
  ('TypePlus -> <empty>','TypePlus',0,'p_type_plus','parser.py',239),
  ('IdentifierList -> IDENT IdentStar','IdentifierList',2,'p_identifier_list','parser.py',245),
  ('IdentStar -> COMMA IDENT IdentStar','IdentStar',3,'p_ident_star','parser.py',248),
  ('IdentStar -> <empty>','IdentStar',0,'p_ident_star','parser.py',249),
  ('ExpressionList -> Expression ExpressionStar','ExpressionList',2,'p_expression_list','parser.py',255),
  ('ExpressionStar -> COMMA Expression ExpressionStar','ExpressionStar',3,'p_expression_star','parser.py',258),
  ('ExpressionStar -> <empty>','ExpressionStar',0,'p_expression_star','parser.py',259),
  ('TypeDecl -> TYPE TypeSpecOr','TypeDecl',2,'p_type_decl','parser.py',265),
  ('TypeSpecOr -> TypeSpec','TypeSpecOr',1,'p_type_spec_or','parser.py',268),
  ('TypeSpecOr -> LEFT_PARENTHESIS TypeSpecStar RIGHT_PARENTHESIS','TypeSpecOr',3,'p_type_spec_or','parser.py',269),
  ('TypeSpecStar -> TypeSpecStar TypeSpec SEMICOLON','TypeSpecStar',3,'p_type_spec_star','parser.py',275),
  ('TypeSpecStar -> <empty>','TypeSpecStar',0,'p_type_spec_star','parser.py',276),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',282),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',283),
  ('AliasDecl -> IDENT ASSIGNMENT Type','AliasDecl',3,'p_alias_decl','parser.py',286),
  ('TypeDef -> IDENT Type','TypeDef',2,'p_type_def','parser.py',289),
  ('VarDecl -> VARIABLE VarSpec','VarDecl',2,'p_var_decl','parser.py',293),
  ('VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS','VarDecl',4,'p_var_decl','parser.py',294),
  ('VarSpecStar -> VarSpecStar VarSpec SEMICOLON','VarSpecStar',3,'p_var_spec_star','parser.py',300),
  ('VarSpecStar -> <empty>','VarSpecStar',0,'p_var_spec_star','parser.py',301),
  ('VarSpec -> IdentifierList TypeExpressionListOr','VarSpec',2,'p_var_spec','parser.py',307),
  ('TypeExpressionListOr -> Type AssignmentExpressionListPlus','TypeExpressionListOr',2,'p_type_expression_list_plus','parser.py',310),
  ('TypeExpressionListOr -> ASSIGNMENT ExpressionList','TypeExpressionListOr',2,'p_type_expression_list_plus','parser.py',311),
  ('AssignmentExpressionListPlus -> ASSIGNMENT Expression','AssignmentExpressionListPlus',2,'p_assignment_expression_list_plus','parser.py',319),
  ('AssignmentExpressionListPlus -> <empty>','AssignmentExpressionListPlus',0,'p_assignment_expression_list_plus','parser.py',320),
  ('ShortVarDecl -> IdentifierList DEFINE ExpressionList','ShortVarDecl',3,'p_short_var_decl','parser.py',326),
  ('FunctionDecl -> FUNCTION FunctionName Signature FunctionBodyPlus','FunctionDecl',4,'p_function_decl','parser.py',329),
  ('FunctionBodyPlus -> FunctionBody','FunctionBodyPlus',1,'p_function_body_plus','parser.py',332),
  ('FunctionBodyPlus -> <empty>','FunctionBodyPlus',0,'p_function_body_plus','parser.py',333),
  ('FunctionName -> IDENT','FunctionName',1,'p_function_name','parser.py',339),
  ('FunctionBody -> Block','FunctionBody',1,'p_function_body','parser.py',342),
  ('MethodDecl -> FUNCTION Receiver MethodName Signature FunctionBodyPlus','MethodDecl',5,'p_method_decl','parser.py',345),
  ('Receiver -> Parameters','Receiver',1,'p_receiver','parser.py',348),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',351),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',352),
  ('Operand -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS','Operand',3,'p_operand','parser.py',353),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',359),
  ('Literal -> CompositeLit','Literal',1,'p_literal','parser.py',360),
  ('Literal -> FunctionLit','Literal',1,'p_literal','parser.py',361),
  ('BasicLit -> INT','BasicLit',1,'p_basic_lit','parser.py',364),
  ('BasicLit -> FLOAT','BasicLit',1,'p_basic_lit','parser.py',365),
  ('BasicLit -> IMAGINARY','BasicLit',1,'p_basic_lit','parser.py',366),
  ('BasicLit -> RUNE','BasicLit',1,'p_basic_lit','parser.py',367),
  ('BasicLit -> STRING','BasicLit',1,'p_basic_lit','parser.py',368),
  ('OperandName -> IDENT','OperandName',1,'p_operand_name','parser.py',371),
  ('OperandName -> QualifiedIdent','OperandName',1,'p_operand_name','parser.py',372),
  ('QualifiedIdent -> PackageName PERIOD IDENT','QualifiedIdent',3,'p_qualified_ident','parser.py',379),
  ('CompositeLit -> LiteralType LiteralValue','CompositeLit',2,'p_composite_lit','parser.py',382),
  ('LiteralType -> StructType','LiteralType',1,'p_literal_type','parser.py',385),
  ('LiteralType -> ArrayType','LiteralType',1,'p_literal_type','parser.py',386),
  ('LiteralType -> LEFT_BRACKET ELLIPSIS RIGHT_BRACKET ElementType','LiteralType',4,'p_literal_type','parser.py',387),
  ('LiteralType -> SliceType','LiteralType',1,'p_literal_type','parser.py',388),
  ('LiteralType -> MapType','LiteralType',1,'p_literal_type','parser.py',389),
  ('LiteralType -> TypeName','LiteralType',1,'p_literal_type','parser.py',390),
  ('LiteralValue -> LEFT_BRACKET ElementListPlus RIGHT_BRACKET','LiteralValue',3,'p_literal_value','parser.py',396),
  ('ElementListPlus -> ElementList','ElementListPlus',1,'p_element_list_plus','parser.py',399),
  ('ElementListPlus -> ElementList COMMA','ElementListPlus',2,'p_element_list_plus','parser.py',400),
  ('ElementListPlus -> <empty>','ElementListPlus',0,'p_element_list_plus','parser.py',401),
  ('ElementList -> KeyedElement KeyedElementStar','ElementList',2,'p_element_list','parser.py',407),
  ('KeyedElementStar -> COMMA KeyedElement KeyedElementStar','KeyedElementStar',3,'p_keyed_element_star','parser.py',410),
  ('KeyedElementStar -> <empty>','KeyedElementStar',0,'p_keyed_element_star','parser.py',411),
  ('KeyedElement -> KeyPlus Element','KeyedElement',2,'p_keyed_element','parser.py',417),
  ('KeyPlus -> Key COLON','KeyPlus',2,'p_key_plus','parser.py',420),
  ('KeyPlus -> <empty>','KeyPlus',0,'p_key_plus','parser.py',421),
  ('Key -> FieldName','Key',1,'p_key','parser.py',427),
  ('Key -> Expression','Key',1,'p_key','parser.py',428),
  ('Key -> LiteralValue','Key',1,'p_key','parser.py',429),
  ('FieldName -> IDENT','FieldName',1,'p_field_name','parser.py',432),
  ('Element -> Expression','Element',1,'p_element','parser.py',435),
  ('Element -> LiteralValue','Element',1,'p_element','parser.py',436),
  ('FunctionLit -> FUNCTION Signature FunctionBody','FunctionLit',3,'p_function_lit','parser.py',439),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_primary_expr','parser.py',442),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_primary_expr','parser.py',443),
  ('PrimaryExpr -> MethodExpr','PrimaryExpr',1,'p_primary_expr','parser.py',444),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_primary_expr','parser.py',445),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_primary_expr','parser.py',446),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_primary_expr','parser.py',447),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_primary_expr','parser.py',448),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_primary_expr','parser.py',449),
  ('Selector -> PERIOD IDENT','Selector',2,'p_selector','parser.py',455),
  ('Index -> LEFT_BRACKET Expression RIGHT_BRACKET','Index',3,'p_index','parser.py',458),
  ('Slice -> LEFT_BRACKET ExpressionPlus COLON ExpressionPlus RIGHT_BRACKET','Slice',5,'p_slice','parser.py',461),
  ('Slice -> LEFT_BRACKET ExpressionPlus COLON Expression COLON Expression RIGHT_BRACKET','Slice',7,'p_slice','parser.py',462),
  ('TypeAssertion -> PERIOD LEFT_PARENTHESIS Type RIGHT_PARENTHESIS','TypeAssertion',4,'p_type_assertion','parser.py',468),
  ('Arguments -> LEFT_PARENTHESIS ArgumentsPlus RIGHT_PARENTHESIS','Arguments',3,'p_arguments','parser.py',471),
  ('ArgumentsPlus -> ArgumentsInOr','ArgumentsPlus',1,'p_arguments_plus','parser.py',474),
  ('ArgumentsPlus -> <empty>','ArgumentsPlus',0,'p_arguments_plus','parser.py',475),
  ('ArgumentsInOr -> ExpressionList','ArgumentsInOr',1,'p_arguments_in_or','parser.py',481),
  ('ArgumentsInOr -> Type CommaExpressionListPlus','ArgumentsInOr',2,'p_arguments_in_or','parser.py',482),
  ('CommaExpressionListPlus -> COMMA ExpressionList','CommaExpressionListPlus',2,'p_comma_expression_list_plus','parser.py',488),
  ('CommaExpressionListPlus -> ExpressionList','CommaExpressionListPlus',1,'p_comma_expression_list_plus','parser.py',489),
  ('CommaExpressionListPlus -> <empty>','CommaExpressionListPlus',0,'p_comma_expression_list_plus','parser.py',490),
  ('MethodExpr -> ReceiverType PERIOD MethodName','MethodExpr',3,'p_method_expr','parser.py',498),
  ('ReceiverType -> Type','ReceiverType',1,'p_receiver_type','parser.py',501),
  ('Expression -> UnaryExpr','Expression',1,'p_expression','parser.py',504),
  ('Expression -> Expression binary_op Expression','Expression',3,'p_expression','parser.py',505),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',511),
  ('UnaryExpr -> unary_op UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',512),
  ('binary_op -> LOGICAL_OR','binary_op',1,'p_binary_op','parser.py',518),
  ('binary_op -> LOGICAL_AND','binary_op',1,'p_binary_op','parser.py',519),
  ('binary_op -> rel_op','binary_op',1,'p_binary_op','parser.py',520),
  ('binary_op -> add_op','binary_op',1,'p_binary_op','parser.py',521),
  ('binary_op -> mul_op','binary_op',1,'p_binary_op','parser.py',522),
  ('rel_op -> EQUAL','rel_op',1,'p_rel_op','parser.py',528),
  ('rel_op -> NOT_EQUAL','rel_op',1,'p_rel_op','parser.py',529),
  ('rel_op -> LESS_THAN','rel_op',1,'p_rel_op','parser.py',530),
  ('rel_op -> LESS_THAN_EQUAL','rel_op',1,'p_rel_op','parser.py',531),
  ('rel_op -> GREATER_THAN','rel_op',1,'p_rel_op','parser.py',532),
  ('rel_op -> GREATER_THAN_EQUAL','rel_op',1,'p_rel_op','parser.py',533),
  ('add_op -> ADD','add_op',1,'p_add_op','parser.py',536),
  ('add_op -> SUBTRACT','add_op',1,'p_add_op','parser.py',537),
  ('add_op -> OR','add_op',1,'p_add_op','parser.py',538),
  ('add_op -> XOR','add_op',1,'p_add_op','parser.py',539),
  ('mul_op -> MULTIPLY','mul_op',1,'p_mul_op','parser.py',542),
  ('mul_op -> QUOTIENT','mul_op',1,'p_mul_op','parser.py',543),
  ('mul_op -> REMAINDER','mul_op',1,'p_mul_op','parser.py',544),
  ('mul_op -> SHIFT_LEFT','mul_op',1,'p_mul_op','parser.py',545),
  ('mul_op -> SHIFT_RIGHT','mul_op',1,'p_mul_op','parser.py',546),
  ('mul_op -> AND','mul_op',1,'p_mul_op','parser.py',547),
  ('mul_op -> AND_NOT','mul_op',1,'p_mul_op','parser.py',548),
  ('unary_op -> ADD','unary_op',1,'p_unary_op','parser.py',551),
  ('unary_op -> SUBTRACT','unary_op',1,'p_unary_op','parser.py',552),
  ('unary_op -> NOT','unary_op',1,'p_unary_op','parser.py',553),
  ('unary_op -> XOR','unary_op',1,'p_unary_op','parser.py',554),
  ('unary_op -> MULTIPLY','unary_op',1,'p_unary_op','parser.py',555),
  ('unary_op -> AND','unary_op',1,'p_unary_op','parser.py',556),
  ('unary_op -> ARROW','unary_op',1,'p_unary_op','parser.py',557),
  ('Conversion -> Type LEFT_PARENTHESIS Expression COMMA RIGHT_PARENTHESIS','Conversion',5,'p_conversion','parser.py',560),
  ('Conversion -> Type LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS','Conversion',4,'p_conversion','parser.py',561),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',566),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',567),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',568),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',569),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',570),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',571),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',572),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',573),
  ('Statement -> FallthroughStmt','Statement',1,'p_statement','parser.py',574),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',575),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',576),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',577),
  ('Statement -> SelectStmt','Statement',1,'p_statement','parser.py',578),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',579),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',580),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',583),
  ('SimpleStmt -> SendStmt','SimpleStmt',1,'p_simple_stmt','parser.py',584),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',585),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',586),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',587),
  ('SimpleStmt -> <empty>','SimpleStmt',0,'p_simple_stmt','parser.py',588),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_stmt','parser.py',595),
  ('Label -> IDENT','Label',1,'p_label','parser.py',598),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',601),
  ('SendStmt -> Channel ARROW Expression','SendStmt',3,'p_send_stmt','parser.py',604),
  ('Channel -> Expression','Channel',1,'p_channel','parser.py',607),
  ('IncDecStmt -> Expression IncDecOr','IncDecStmt',2,'p_inc_dec_stmt','parser.py',610),
  ('IncDecOr -> INCREMENT','IncDecOr',1,'p_inc_dec_or','parser.py',613),
  ('IncDecOr -> DECREMENT','IncDecOr',1,'p_inc_dec_or','parser.py',614),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',617),
  ('assign_op -> add_op_mul_op_or_plus ASSIGNMENT','assign_op',2,'p_assign_op','parser.py',620),
  ('add_op_mul_op_or_plus -> add_op_mul_op_or','add_op_mul_op_or_plus',1,'p_add_op_or_mul_op_plus','parser.py',623),
  ('add_op_mul_op_or_plus -> <empty>','add_op_mul_op_or_plus',0,'p_add_op_or_mul_op_plus','parser.py',624),
  ('add_op_mul_op_or -> add_op','add_op_mul_op_or',1,'p_add_op_mul_op_or','parser.py',630),
  ('add_op_mul_op_or -> mul_op','add_op_mul_op_or',1,'p_add_op_mul_op_or','parser.py',631),
  ('IfStmt -> IF SimpleStmtSemicolonPlus Expression Block ElsePlus','IfStmt',5,'p_if_stmt','parser.py',634),
  ('SimpleStmtSemicolonPlus -> SimpleStmt SEMICOLON','SimpleStmtSemicolonPlus',2,'p_simple_stmt_semicolon_plus','parser.py',636),
  ('SimpleStmtSemicolonPlus -> <empty>','SimpleStmtSemicolonPlus',0,'p_simple_stmt_semicolon_plus','parser.py',637),
  ('ElsePlus -> ELSE Nested_if_block','ElsePlus',2,'p_else_plus','parser.py',643),
  ('ElsePlus -> <empty>','ElsePlus',0,'p_else_plus','parser.py',644),
  ('Nested_if_block -> IfStmt','Nested_if_block',1,'p_nested_if_block','parser.py',650),
  ('Nested_if_block -> Block','Nested_if_block',1,'p_nested_if_block','parser.py',651),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_stmt','parser.py',654),
  ('SwitchStmt -> TypeSwitchStmt','SwitchStmt',1,'p_switch_stmt','parser.py',655),
  ('ExprSwitchStmt -> SWITCH SimpleStmtSemicolonPlus ExpressionPlus LEFT_BRACE ExprCaseClauseStar RIGHT_BRACE','ExprSwitchStmt',6,'p_expr_switch_stmt','parser.py',658),
  ('ExpressionPlus -> Expression','ExpressionPlus',1,'p_expression_plus','parser.py',661),
  ('ExpressionPlus -> <empty>','ExpressionPlus',0,'p_expression_plus','parser.py',662),
  ('ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause','ExprCaseClauseStar',2,'p_expr_case_clause_plus','parser.py',668),
  ('ExprCaseClauseStar -> <empty>','ExprCaseClauseStar',0,'p_expr_case_clause_plus','parser.py',669),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_expr_case_clause','parser.py',675),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_expr_switch_case','parser.py',678),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_expr_switch_case','parser.py',679),
  ('TypeSwitchStmt -> SWITCH SimpleStmtSemicolonPlus TypeSwitchGuard LEFT_BRACE TypeCaseClauseStar RIGHT_BRACE','TypeSwitchStmt',6,'p_type_switch_stmt','parser.py',685),
  ('TypeCaseClauseStar -> TypeCaseClauseStar TypeCaseClause','TypeCaseClauseStar',2,'p_type_case_clause_star','parser.py',688),
  ('TypeCaseClauseStar -> <empty>','TypeCaseClauseStar',0,'p_type_case_clause_star','parser.py',689),
  ('TypeSwitchGuard -> IdentDefinePlus PrimaryExpr PERIOD LEFT_PARENTHESIS TYPE RIGHT_PARENTHESIS','TypeSwitchGuard',6,'p_typeswitchguard','parser.py',695),
  ('IdentDefinePlus -> IDENT DEFINE','IdentDefinePlus',2,'p_ident_define_plus','parser.py',698),
  ('IdentDefinePlus -> <empty>','IdentDefinePlus',0,'p_ident_define_plus','parser.py',699),
  ('TypeCaseClause -> TypeSwitchCase COLON StatementList','TypeCaseClause',3,'p_type_case_clause','parser.py',705),
  ('TypeSwitchCase -> CASE TypeList','TypeSwitchCase',2,'p_type_switch_case','parser.py',708),
  ('TypeSwitchCase -> DEFAULT','TypeSwitchCase',1,'p_type_switch_case','parser.py',709),
  ('TypeList -> Type CommaTypePlus','TypeList',2,'p_type_list','parser.py',715),
  ('CommaTypePlus -> CommaTypePlus COMMA TYPE','CommaTypePlus',3,'p_comma_type_plus','parser.py',719),
  ('CommaTypePlus -> <empty>','CommaTypePlus',0,'p_comma_type_plus','parser.py',720),
  ('ForStmt -> FOR ForInternal Block','ForStmt',3,'p_for_stmt','parser.py',726),
  ('ForInternal -> Condition','ForInternal',1,'p_for_internal','parser.py',729),
  ('ForInternal -> ForClause','ForInternal',1,'p_for_internal','parser.py',730),
  ('ForInternal -> RangeClause','ForInternal',1,'p_for_internal','parser.py',731),
  ('ForInternal -> <empty>','ForInternal',0,'p_for_internal','parser.py',732),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',738),
  ('ForClause -> InitStmtPlus SEMICOLON ConditionPlus SEMICOLON PostStmtPlus','ForClause',5,'p_for_clause','parser.py',742),
  ('InitStmtPlus -> InitStmt','InitStmtPlus',1,'p_init_stmt_plus','parser.py',745),
  ('InitStmtPlus -> <empty>','InitStmtPlus',0,'p_init_stmt_plus','parser.py',746),
  ('ConditionPlus -> Condition','ConditionPlus',1,'p_condition_plus','parser.py',752),
  ('ConditionPlus -> <empty>','ConditionPlus',0,'p_condition_plus','parser.py',753),
  ('PostStmtPlus -> PostStmt','PostStmtPlus',1,'p_post_stmt_plus','parser.py',759),
  ('PostStmtPlus -> <empty>','PostStmtPlus',0,'p_post_stmt_plus','parser.py',760),
  ('InitStmt -> SimpleStmt','InitStmt',1,'p_init_stmt','parser.py',766),
  ('PostStmt -> SimpleStmt','PostStmt',1,'p_post_stmt','parser.py',769),
  ('RangeClause -> ExpListAssignIdListDefOrPlus RANGE Expression','RangeClause',3,'p_range_clause','parser.py',773),
  ('ExpListAssignIdListDefOrPlus -> ExpressionList ASSIGNMENT','ExpListAssignIdListDefOrPlus',2,'p_exp_list_assign_id_list_def_or_plus','parser.py',777),
  ('ExpListAssignIdListDefOrPlus -> IdentifierList DEFINE','ExpListAssignIdListDefOrPlus',2,'p_exp_list_assign_id_list_def_or_plus','parser.py',778),
  ('ExpListAssignIdListDefOrPlus -> <empty>','ExpListAssignIdListDefOrPlus',0,'p_exp_list_assign_id_list_def_or_plus','parser.py',779),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',785),
  ('SelectStmt -> SELECT LEFT_BRACE CommClausePlus RIGHT_BRACE','SelectStmt',4,'p_selectstmt','parser.py',789),
  ('CommClausePlus -> CommClausePlus CommClause','CommClausePlus',2,'p_comm_clause_plus','parser.py',793),
  ('CommClausePlus -> <empty>','CommClausePlus',0,'p_comm_clause_plus','parser.py',794),
  ('CommClause -> CommCase COLON StatementList','CommClause',3,'p_comm_clause','parser.py',800),
  ('CommCase -> CASE SentStmtRecvStmtOr','CommCase',2,'p_comm_case','parser.py',803),
  ('CommCase -> DEFAULT','CommCase',1,'p_comm_case','parser.py',804),
  ('SentStmtRecvStmtOr -> SendStmt','SentStmtRecvStmtOr',1,'p_sent_stmt_recv_stmt_or','parser.py',810),
  ('SentStmtRecvStmtOr -> RecvStmt','SentStmtRecvStmtOr',1,'p_sent_stmt_recv_stmt_or','parser.py',811),
  ('RecvStmt -> ExpListAssignIdListDefOrPlus RecvExpr','RecvStmt',2,'p_recv_stmt','parser.py',814),
  ('RecvExpr -> Expression','RecvExpr',1,'p_recv_expr','parser.py',817),
  ('ReturnStmt -> RETURN ExpressionListPlus','ReturnStmt',2,'p_returnstmt','parser.py',821),
  ('ExpressionListPlus -> ExpressionList','ExpressionListPlus',1,'p_expression_list_plus','parser.py',824),
  ('ExpressionListPlus -> <empty>','ExpressionListPlus',0,'p_expression_list_plus','parser.py',825),
  ('BreakStmt -> BREAK LabelPlus','BreakStmt',2,'p_break_stmt','parser.py',832),
  ('LabelPlus -> Label','LabelPlus',1,'p_label_plus','parser.py',837),
  ('LabelPlus -> <empty>','LabelPlus',0,'p_label_plus','parser.py',838),
  ('ContinueStmt -> CONTINUE LabelPlus','ContinueStmt',2,'p_continue_stmt','parser.py',845),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto_stmt','parser.py',848),
  ('FallthroughStmt -> FALLTHROUGH','FallthroughStmt',1,'p_fallthrough_stmt','parser.py',851),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',854),
  ('SourceFile -> PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar','SourceFile',4,'p_source_file','parser.py',859),
  ('ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON','ImportDeclStar',3,'p_import_decl_star','parser.py',862),
  ('ImportDeclStar -> <empty>','ImportDeclStar',0,'p_import_decl_star','parser.py',863),
  ('TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON','TopLevelDeclStar',3,'p_top_level_decl_star','parser.py',869),
  ('TopLevelDeclStar -> <empty>','TopLevelDeclStar',0,'p_top_level_decl_star','parser.py',870),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_packageclause','parser.py',876),
  ('PackageName -> IDENT','PackageName',1,'p_packagename','parser.py',879),
  ('ImportDecl -> IMPORT ImportSpecOr','ImportDecl',2,'p_importdecl','parser.py',882),
  ('ImportSpecOr -> ImportSpec','ImportSpecOr',1,'p_import_spec_or','parser.py',885),
  ('ImportSpecOr -> LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS','ImportSpecOr',3,'p_import_spec_or','parser.py',886),
  ('ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON','ImportSpecSemicolonStar',3,'p_import_spec_semicolon_star','parser.py',892),
  ('ImportSpecSemicolonStar -> <empty>','ImportSpecSemicolonStar',0,'p_import_spec_semicolon_star','parser.py',893),
  ('ImportSpec -> PeriodPackageNamePlus ImportPath','ImportSpec',2,'p_import_spec','parser.py',899),
  ('PeriodPackageNamePlus -> PeriodPackageNameOr','PeriodPackageNamePlus',1,'p_period_package_name_plus','parser.py',902),
  ('PeriodPackageNamePlus -> <empty>','PeriodPackageNamePlus',0,'p_period_package_name_plus','parser.py',903),
  ('PeriodPackageNameOr -> PERIOD','PeriodPackageNameOr',1,'p_period_package_name_or','parser.py',909),
  ('PeriodPackageNameOr -> PackageName','PeriodPackageNameOr',1,'p_period_package_name_or','parser.py',910),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',913),
]
