Created by PLY (http://www.dabeaz.com/ply)

Unused terminals:

    GOTO

Grammar

Rule 0     S' -> SourceFile
Rule 1     SourceFile -> PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar
Rule 2     OpenScope -> <empty>
Rule 3     CloseScope -> <empty>
Rule 4     OpenFor -> <empty>
Rule 5     CloseFor -> <empty>
Rule 6     OpenSwitch -> <empty>
Rule 7     CloseSwitch -> <empty>
Rule 8     OpenStruct -> <empty>
Rule 9     CloseStruct -> <empty>
Rule 10    ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON
Rule 11    ImportDeclStar -> <empty>
Rule 12    TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON
Rule 13    TopLevelDeclStar -> <empty>
Rule 14    TopLevelDecl -> Declaration
Rule 15    TopLevelDecl -> FunctionDecl
Rule 16    PackageClause -> PACKAGE IDENT
Rule 17    ImportDecl -> IMPORT ImportSpec
Rule 18    ImportDecl -> IMPORT LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS
Rule 19    ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON
Rule 20    ImportSpecSemicolonStar -> <empty>
Rule 21    ImportSpec -> PERIOD ImportPath
Rule 22    ImportSpec -> IDENT ImportPath
Rule 23    ImportSpec -> ImportPath
Rule 24    ImportPath -> STRING
Rule 25    Declaration -> ConstDecl
Rule 26    Declaration -> StructDecl
Rule 27    Declaration -> VarDecl
Rule 28    StructDecl -> TYPE StructName StructType
Rule 29    StructName -> IDENT
Rule 30    ConstDecl -> CONST ConstSpec
Rule 31    ConstDecl -> CONST LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS
Rule 32    ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON
Rule 33    ConstSpecStar -> <empty>
Rule 34    ConstSpec -> IdentifierList
Rule 35    ConstSpec -> IdentifierList ASSIGNMENT ExpressionList
Rule 36    ConstSpec -> IdentifierList IDENT ASSIGNMENT ExpressionList
Rule 37    IdentifierList -> IDENT
Rule 38    IdentifierList -> IDENT COMMA IdentifierList
Rule 39    ExpressionList -> Expression
Rule 40    ExpressionList -> ExpressionList COMMA Expression
Rule 41    ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
Rule 42    VarDecl -> VARIABLE VarSpec
Rule 43    VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
Rule 44    VarSpecStar -> VarSpec SEMICOLON VarSpecStar
Rule 45    VarSpecStar -> <empty>
Rule 46    VarSpec -> IdentifierList Type
Rule 47    VarSpec -> IdentifierList Type ASSIGNMENT Expression
Rule 48    VarSpec -> IdentifierList IDENT ASSIGNMENT ExpressionList
Rule 49    VarSpec -> IdentifierList IDENT
Rule 50    VarSpec -> IdentifierList ASSIGNMENT ExpressionList
Rule 51    ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 52    FunctionDecl -> FUNCTION FunctionName OpenScope Signature Block CloseScope
Rule 53    FunctionDecl -> FUNCTION FunctionName OpenScope Signature CloseScope
Rule 54    FunctionName -> IDENT
Rule 55    Type -> LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
Rule 56    Type -> TypeLit
Rule 57    Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
Rule 58    TypeLit -> ArrayType
Rule 59    TypeLit -> PointerType
Rule 60    ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET Type
Rule 61    ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET IDENT
Rule 62    StructType -> STRUCT OpenStruct LEFT_BRACE FieldDeclStar RIGHT_BRACE CloseStruct
Rule 63    FieldDeclStar -> FieldDeclStar FieldDecl SEMICOLON
Rule 64    FieldDeclStar -> <empty>
Rule 65    FieldDecl -> IDENT COMMA IdentifierList Type
Rule 66    FieldDecl -> IDENT COMMA IdentifierList IDENT
Rule 67    FieldDecl -> IDENT Type
Rule 68    FieldDecl -> IDENT IDENT
Rule 69    FieldDecl -> IDENT STRUCT MULTIPLY IDENT
Rule 70    FieldDecl -> IDENT COMMA IdentifierList STRUCT MULTIPLY IDENT
Rule 71    PointerType -> MULTIPLY Type
Rule 72    PointerType -> MULTIPLY IDENT
Rule 73    Signature -> Parameters Result
Rule 74    Result -> LEFT_PARENTHESIS TypeList RIGHT_PARENTHESIS
Rule 75    Result -> <empty>
Rule 76    TypeList -> TypeList COMMA IDENT
Rule 77    TypeList -> TypeList COMMA Type
Rule 78    TypeList -> IDENT
Rule 79    TypeList -> Type
Rule 80    Parameters -> LEFT_PARENTHESIS RIGHT_PARENTHESIS
Rule 81    Parameters -> LEFT_PARENTHESIS ParameterList RIGHT_PARENTHESIS
Rule 82    Parameters -> LEFT_PARENTHESIS ParameterList COMMA RIGHT_PARENTHESIS
Rule 83    ParameterList -> ParameterDecl
Rule 84    ParameterList -> ParameterList COMMA ParameterDecl
Rule 85    ParameterDecl -> ParaIdentList Type
Rule 86    ParameterDecl -> ParaIdentList IDENT
Rule 87    ParameterDecl -> IDENT IDENT
Rule 88    ParameterDecl -> IDENT Type
Rule 89    ParaIdentList -> IDENT COMMA IDENT
Rule 90    ParaIdentList -> ParaIdentList COMMA IDENT
Rule 91    Block -> LEFT_BRACE StatementList RIGHT_BRACE
Rule 92    StatementList -> StatementList Statement SEMICOLON
Rule 93    StatementList -> <empty>
Rule 94    Expression -> UnaryExpr
Rule 95    Expression -> Expression LOGICAL_OR Expression
Rule 96    Expression -> Expression LOGICAL_AND Expression
Rule 97    Expression -> Expression EQUAL Expression
Rule 98    Expression -> Expression NOT_EQUAL Expression
Rule 99    Expression -> Expression LESS_THAN Expression
Rule 100   Expression -> Expression LESS_THAN_EQUAL Expression
Rule 101   Expression -> Expression GREATER_THAN Expression
Rule 102   Expression -> Expression GREATER_THAN_EQUAL Expression
Rule 103   Expression -> Expression ADD Expression
Rule 104   Expression -> Expression SUBTRACT Expression
Rule 105   Expression -> Expression OR Expression
Rule 106   Expression -> Expression XOR Expression
Rule 107   Expression -> Expression MULTIPLY Expression
Rule 108   Expression -> Expression QUOTIENT Expression
Rule 109   Expression -> Expression REMAINDER Expression
Rule 110   Expression -> Expression SHIFT_LEFT Expression
Rule 111   Expression -> Expression SHIFT_RIGHT Expression
Rule 112   Expression -> Expression AND Expression
Rule 113   Expression -> Expression AND_NOT Expression
Rule 114   UnaryExpr -> PrimaryExpr
Rule 115   UnaryExpr -> unary_op UnaryExpr
Rule 116   unary_op -> ADD
Rule 117   unary_op -> SUBTRACT
Rule 118   unary_op -> NOT
Rule 119   unary_op -> XOR
Rule 120   unary_op -> MULTIPLY
Rule 121   unary_op -> AND
Rule 122   unary_op -> ARROW
Rule 123   PrimaryExpr -> IDENT
Rule 124   PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
Rule 125   PrimaryExpr -> Literal
Rule 126   PrimaryExpr -> PrimaryExpr Index
Rule 127   PrimaryExpr -> PrimaryExpr PERIOD IDENT
Rule 128   PrimaryExpr -> PrimaryExpr Arguments
Rule 129   Index -> LEFT_BRACKET Expression RIGHT_BRACKET
Rule 130   Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS
Rule 131   Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS
Rule 132   Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS
Rule 133   Literal -> BasicLit
Rule 134   BasicLit -> IntLit
Rule 135   BasicLit -> FloatLit
Rule 136   BasicLit -> RuneLit
Rule 137   BasicLit -> StringLit
Rule 138   BasicLit -> TrueFalseLit
Rule 139   BasicLit -> ImaginaryLit
Rule 140   ImaginaryLit -> IMAGINARY
Rule 141   TrueFalseLit -> TRUE
Rule 142   TrueFalseLit -> FALSE
Rule 143   IntLit -> INT
Rule 144   FloatLit -> FLOAT
Rule 145   RuneLit -> RUNE
Rule 146   StringLit -> STRING
Rule 147   Statement -> Declaration
Rule 148   Statement -> SimpleStmt
Rule 149   Statement -> ReturnStmt
Rule 150   Statement -> BreakStmt
Rule 151   Statement -> ContinueStmt
Rule 152   Statement -> OpenScope Block CloseScope
Rule 153   Statement -> IfStmt
Rule 154   Statement -> SwitchStmt
Rule 155   Statement -> ForStmt
Rule 156   SimpleStmt -> Expression
Rule 157   SimpleStmt -> IncDecStmt
Rule 158   SimpleStmt -> Assignment
Rule 159   SimpleStmt -> ShortVarDecl
Rule 160   SimpleStmt -> <empty>
Rule 161   IncDecStmt -> Expression INCREMENT
Rule 162   IncDecStmt -> Expression DECREMENT
Rule 163   Assignment -> ExpressionList assign_op ExpressionList
Rule 164   assign_op -> ADD_ASSIGNMENT
Rule 165   assign_op -> SUB_ASSIGNMENT
Rule 166   assign_op -> MUL_ASSIGNMENT
Rule 167   assign_op -> QUO_ASSIGNMENT
Rule 168   assign_op -> REM_ASSIGNMENT
Rule 169   assign_op -> AND_ASSIGNMENT
Rule 170   assign_op -> AND_NOT_ASSIGNMENT
Rule 171   assign_op -> OR_ASSIGNMENT
Rule 172   assign_op -> XOR_ASSIGNMENT
Rule 173   assign_op -> SHIFT_LEFT_ASSIGNMENT
Rule 174   assign_op -> SHIFT_RIGHT_ASSIGNMENT
Rule 175   assign_op -> ASSIGNMENT
Rule 176   IfStmt -> IF OpenScope Expression Block CloseScope
Rule 177   IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope
Rule 178   IfStmt -> IF OpenScope Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
Rule 179   IfStmt -> IF OpenScope Expression Block CloseScope ELSE OpenScope Block CloseScope
Rule 180   IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
Rule 181   IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope
Rule 182   SwitchStmt -> SWITCH LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
Rule 183   SwitchStmt -> SWITCH SimpleStmt SEMICOLON LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
Rule 184   SwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
Rule 185   SwitchStmt -> SWITCH ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
Rule 186   ExpressionName -> Expression
Rule 187   ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause
Rule 188   ExprCaseClauseStar -> ExprCaseClause
Rule 189   ExprCaseClause -> OpenScope CASE ExpressionList COLON StatementList CloseScope
Rule 190   ExprCaseClause -> DEFAULT COLON OpenScope StatementList CloseScope
Rule 191   ForStmt -> FOR OpenScope OpenFor ForClause Block CloseFor CloseScope
Rule 192   ForStmt -> FOR OpenScope OpenFor Expression Block CloseFor CloseScope
Rule 193   ForStmt -> FOR OpenScope OpenFor Block CloseFor CloseScope
Rule 194   ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt
Rule 195   ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt
Rule 196   ReturnStmt -> RETURN ExpressionList
Rule 197   ReturnStmt -> RETURN
Rule 198   BreakStmt -> BREAK IDENT
Rule 199   BreakStmt -> BREAK
Rule 200   ContinueStmt -> CONTINUE IDENT
Rule 201   ContinueStmt -> CONTINUE

Terminals, with rules where they appear

ADD                  : 103 116
ADD_ASSIGNMENT       : 164
AND                  : 112 121
AND_ASSIGNMENT       : 169
AND_NOT              : 113
AND_NOT_ASSIGNMENT   : 170
ARROW                : 122
ASSIGNMENT           : 35 36 47 48 50 175
BREAK                : 198 199
CASE                 : 189
COLON                : 189 190
COMMA                : 38 40 65 66 70 76 77 82 84 89 90 132
CONST                : 30 31
CONTINUE             : 200 201
DECREMENT            : 162
DEFAULT              : 190
DEFINE               : 51
ELSE                 : 178 179 180 181
EQUAL                : 97
FALSE                : 142
FLOAT                : 144
FOR                  : 191 192 193
FUNCTION             : 52 53
GOTO                 : 
GREATER_THAN         : 101
GREATER_THAN_EQUAL   : 102
IDENT                : 16 22 29 36 37 38 41 48 49 54 55 61 65 66 66 67 68 68 69 69 70 70 72 76 78 86 87 87 88 89 89 90 123 127 198 200
IF                   : 176 177 178 179 180 181
IMAGINARY            : 140
IMPORT               : 17 18
INCREMENT            : 161
INT                  : 60 61 143
LEFT_BRACE           : 41 62 91 182 183 184 185
LEFT_BRACKET         : 41 60 61 129
LEFT_PARENTHESIS     : 18 31 43 55 57 74 80 81 82 124 130 131 132
LESS_THAN            : 99
LESS_THAN_EQUAL      : 100
LOGICAL_AND          : 96
LOGICAL_OR           : 95
MULTIPLY             : 69 70 71 72 107 120
MUL_ASSIGNMENT       : 166
NOT                  : 118
NOT_EQUAL            : 98
OR                   : 105
OR_ASSIGNMENT        : 171
PACKAGE              : 16
PERIOD               : 21 127
QUOTIENT             : 108
QUO_ASSIGNMENT       : 167
REMAINDER            : 109
REM_ASSIGNMENT       : 168
RETURN               : 196 197
RIGHT_BRACE          : 41 62 91 182 183 184 185
RIGHT_BRACKET        : 41 60 61 129
RIGHT_PARENTHESIS    : 18 31 43 55 57 74 80 81 82 124 130 131 132
RUNE                 : 145
SEMICOLON            : 1 10 12 19 32 44 63 92 177 180 181 183 184 194 194 195 195
SHIFT_LEFT           : 110
SHIFT_LEFT_ASSIGNMENT : 173
SHIFT_RIGHT          : 111
SHIFT_RIGHT_ASSIGNMENT : 174
STRING               : 24 146
STRUCT               : 62 69 70
SUBTRACT             : 104 117
SUB_ASSIGNMENT       : 165
SWITCH               : 182 183 184 185
TRUE                 : 141
TYPE                 : 28
VARIABLE             : 42 43
XOR                  : 106 119
XOR_ASSIGNMENT       : 172
error                : 

Nonterminals, with rules where they appear

Arguments            : 128
ArrayType            : 58
Assignment           : 158
BasicLit             : 133
Block                : 52 152 176 177 178 179 179 180 181 181 191 192 193
BreakStmt            : 150
CloseFor             : 191 192 193
CloseScope           : 52 53 152 176 177 178 178 179 179 180 180 181 181 189 190 191 192 193
CloseStruct          : 62
CloseSwitch          : 182 183 184 185
ConstDecl            : 25
ConstSpec            : 30 32
ConstSpecStar        : 31 32
ContinueStmt         : 151
Declaration          : 14 147
ExprCaseClause       : 187 188
ExprCaseClauseStar   : 182 183 184 185 187
Expression           : 39 40 41 47 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113 113 124 129 156 161 162 176 177 178 179 180 181 186 192 194
ExpressionList       : 35 36 40 41 48 50 51 131 132 163 163 189 196
ExpressionName       : 184 185
FieldDecl            : 63
FieldDeclStar        : 62 63
FloatLit             : 135
ForClause            : 191
ForStmt              : 155
FunctionDecl         : 15
FunctionName         : 52 53
IdentifierList       : 34 35 36 38 46 47 48 49 50 51 65 66 70
IfStmt               : 153 178 180
ImaginaryLit         : 139
ImportDecl           : 10
ImportDeclStar       : 1 10
ImportPath           : 21 22 23
ImportSpec           : 17 19
ImportSpecSemicolonStar : 18 19
IncDecStmt           : 157
Index                : 126
IntLit               : 134
Literal              : 125
OpenFor              : 191 192 193
OpenScope            : 52 53 152 176 177 178 178 179 179 180 180 181 181 189 190 191 192 193
OpenStruct           : 62
OpenSwitch           : 182 183 184 185
PackageClause        : 1
ParaIdentList        : 85 86 90
ParameterDecl        : 83 84
ParameterList        : 81 82 84
Parameters           : 73
PointerType          : 59
PrimaryExpr          : 114 126 127 128
Result               : 73
ReturnStmt           : 149
RuneLit              : 136
ShortVarDecl         : 159
Signature            : 52 53
SimpleStmt           : 148 177 180 181 183 184 194 194 195 195
SourceFile           : 0
Statement            : 92
StatementList        : 91 92 189 190
StringLit            : 137
StructDecl           : 26
StructName           : 28
StructType           : 28
SwitchStmt           : 154
TopLevelDecl         : 12
TopLevelDeclStar     : 1 12
TrueFalseLit         : 138
Type                 : 46 47 57 60 65 67 71 77 79 85 88
TypeList             : 74 76 77
TypeLit              : 56
UnaryExpr            : 94 115
VarDecl              : 27
VarSpec              : 42 44
VarSpecStar          : 43 44
assign_op            : 163
unary_op             : 115


state 0

    (0) S' -> . SourceFile
    (1) SourceFile -> . PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar
    (16) PackageClause -> . PACKAGE IDENT

    PACKAGE         shift and go to state 3

    SourceFile                     shift and go to state 1
    PackageClause                  shift and go to state 2

state 1

    (0) S' -> SourceFile .



state 2

    (1) SourceFile -> PackageClause . SEMICOLON ImportDeclStar TopLevelDeclStar

    SEMICOLON       shift and go to state 4


state 3

    (16) PackageClause -> PACKAGE . IDENT

    IDENT           shift and go to state 5


state 4

    (1) SourceFile -> PackageClause SEMICOLON . ImportDeclStar TopLevelDeclStar
    (10) ImportDeclStar -> . ImportDeclStar ImportDecl SEMICOLON
    (11) ImportDeclStar -> .

    IMPORT          reduce using rule 11 (ImportDeclStar -> .)
    FUNCTION        reduce using rule 11 (ImportDeclStar -> .)
    CONST           reduce using rule 11 (ImportDeclStar -> .)
    TYPE            reduce using rule 11 (ImportDeclStar -> .)
    VARIABLE        reduce using rule 11 (ImportDeclStar -> .)
    $end            reduce using rule 11 (ImportDeclStar -> .)

    ImportDeclStar                 shift and go to state 6

state 5

    (16) PackageClause -> PACKAGE IDENT .

    SEMICOLON       reduce using rule 16 (PackageClause -> PACKAGE IDENT .)


state 6

    (1) SourceFile -> PackageClause SEMICOLON ImportDeclStar . TopLevelDeclStar
    (10) ImportDeclStar -> ImportDeclStar . ImportDecl SEMICOLON
    (12) TopLevelDeclStar -> . TopLevelDeclStar TopLevelDecl SEMICOLON
    (13) TopLevelDeclStar -> .
    (17) ImportDecl -> . IMPORT ImportSpec
    (18) ImportDecl -> . IMPORT LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS

    FUNCTION        reduce using rule 13 (TopLevelDeclStar -> .)
    CONST           reduce using rule 13 (TopLevelDeclStar -> .)
    TYPE            reduce using rule 13 (TopLevelDeclStar -> .)
    VARIABLE        reduce using rule 13 (TopLevelDeclStar -> .)
    $end            reduce using rule 13 (TopLevelDeclStar -> .)
    IMPORT          shift and go to state 9

    TopLevelDeclStar               shift and go to state 7
    ImportDecl                     shift and go to state 8

state 7

    (1) SourceFile -> PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar .
    (12) TopLevelDeclStar -> TopLevelDeclStar . TopLevelDecl SEMICOLON
    (14) TopLevelDecl -> . Declaration
    (15) TopLevelDecl -> . FunctionDecl
    (25) Declaration -> . ConstDecl
    (26) Declaration -> . StructDecl
    (27) Declaration -> . VarDecl
    (52) FunctionDecl -> . FUNCTION FunctionName OpenScope Signature Block CloseScope
    (53) FunctionDecl -> . FUNCTION FunctionName OpenScope Signature CloseScope
    (30) ConstDecl -> . CONST ConstSpec
    (31) ConstDecl -> . CONST LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS
    (28) StructDecl -> . TYPE StructName StructType
    (42) VarDecl -> . VARIABLE VarSpec
    (43) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS

    $end            reduce using rule 1 (SourceFile -> PackageClause SEMICOLON ImportDeclStar TopLevelDeclStar .)
    FUNCTION        shift and go to state 16
    CONST           shift and go to state 17
    TYPE            shift and go to state 18
    VARIABLE        shift and go to state 19

    TopLevelDecl                   shift and go to state 10
    Declaration                    shift and go to state 11
    FunctionDecl                   shift and go to state 12
    ConstDecl                      shift and go to state 13
    StructDecl                     shift and go to state 14
    VarDecl                        shift and go to state 15

state 8

    (10) ImportDeclStar -> ImportDeclStar ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 20


state 9

    (17) ImportDecl -> IMPORT . ImportSpec
    (18) ImportDecl -> IMPORT . LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS
    (21) ImportSpec -> . PERIOD ImportPath
    (22) ImportSpec -> . IDENT ImportPath
    (23) ImportSpec -> . ImportPath
    (24) ImportPath -> . STRING

    LEFT_PARENTHESIS shift and go to state 22
    PERIOD          shift and go to state 23
    IDENT           shift and go to state 25
    STRING          shift and go to state 26

    ImportSpec                     shift and go to state 21
    ImportPath                     shift and go to state 24

state 10

    (12) TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 27


state 11

    (14) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 14 (TopLevelDecl -> Declaration .)


state 12

    (15) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 15 (TopLevelDecl -> FunctionDecl .)


state 13

    (25) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 25 (Declaration -> ConstDecl .)


state 14

    (26) Declaration -> StructDecl .

    SEMICOLON       reduce using rule 26 (Declaration -> StructDecl .)


state 15

    (27) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 27 (Declaration -> VarDecl .)


state 16

    (52) FunctionDecl -> FUNCTION . FunctionName OpenScope Signature Block CloseScope
    (53) FunctionDecl -> FUNCTION . FunctionName OpenScope Signature CloseScope
    (54) FunctionName -> . IDENT

    IDENT           shift and go to state 29

    FunctionName                   shift and go to state 28

state 17

    (30) ConstDecl -> CONST . ConstSpec
    (31) ConstDecl -> CONST . LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS
    (34) ConstSpec -> . IdentifierList
    (35) ConstSpec -> . IdentifierList ASSIGNMENT ExpressionList
    (36) ConstSpec -> . IdentifierList IDENT ASSIGNMENT ExpressionList
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList

    LEFT_PARENTHESIS shift and go to state 31
    IDENT           shift and go to state 33

    ConstSpec                      shift and go to state 30
    IdentifierList                 shift and go to state 32

state 18

    (28) StructDecl -> TYPE . StructName StructType
    (29) StructName -> . IDENT

    IDENT           shift and go to state 35

    StructName                     shift and go to state 34

state 19

    (42) VarDecl -> VARIABLE . VarSpec
    (43) VarDecl -> VARIABLE . LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (46) VarSpec -> . IdentifierList Type
    (47) VarSpec -> . IdentifierList Type ASSIGNMENT Expression
    (48) VarSpec -> . IdentifierList IDENT ASSIGNMENT ExpressionList
    (49) VarSpec -> . IdentifierList IDENT
    (50) VarSpec -> . IdentifierList ASSIGNMENT ExpressionList
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList

    LEFT_PARENTHESIS shift and go to state 37
    IDENT           shift and go to state 33

    VarSpec                        shift and go to state 36
    IdentifierList                 shift and go to state 38

state 20

    (10) ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .

    IMPORT          reduce using rule 10 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)
    FUNCTION        reduce using rule 10 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)
    CONST           reduce using rule 10 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)
    TYPE            reduce using rule 10 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)
    VARIABLE        reduce using rule 10 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)
    $end            reduce using rule 10 (ImportDeclStar -> ImportDeclStar ImportDecl SEMICOLON .)


state 21

    (17) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 17 (ImportDecl -> IMPORT ImportSpec .)


state 22

    (18) ImportDecl -> IMPORT LEFT_PARENTHESIS . ImportSpecSemicolonStar RIGHT_PARENTHESIS
    (19) ImportSpecSemicolonStar -> . ImportSpecSemicolonStar ImportSpec SEMICOLON
    (20) ImportSpecSemicolonStar -> .

    RIGHT_PARENTHESIS reduce using rule 20 (ImportSpecSemicolonStar -> .)
    PERIOD          reduce using rule 20 (ImportSpecSemicolonStar -> .)
    IDENT           reduce using rule 20 (ImportSpecSemicolonStar -> .)
    STRING          reduce using rule 20 (ImportSpecSemicolonStar -> .)

    ImportSpecSemicolonStar        shift and go to state 39

state 23

    (21) ImportSpec -> PERIOD . ImportPath
    (24) ImportPath -> . STRING

    STRING          shift and go to state 26

    ImportPath                     shift and go to state 40

state 24

    (23) ImportSpec -> ImportPath .

    SEMICOLON       reduce using rule 23 (ImportSpec -> ImportPath .)


state 25

    (22) ImportSpec -> IDENT . ImportPath
    (24) ImportPath -> . STRING

    STRING          shift and go to state 26

    ImportPath                     shift and go to state 41

state 26

    (24) ImportPath -> STRING .

    SEMICOLON       reduce using rule 24 (ImportPath -> STRING .)


state 27

    (12) TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .

    FUNCTION        reduce using rule 12 (TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 12 (TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 12 (TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .)
    VARIABLE        reduce using rule 12 (TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .)
    $end            reduce using rule 12 (TopLevelDeclStar -> TopLevelDeclStar TopLevelDecl SEMICOLON .)


state 28

    (52) FunctionDecl -> FUNCTION FunctionName . OpenScope Signature Block CloseScope
    (53) FunctionDecl -> FUNCTION FunctionName . OpenScope Signature CloseScope
    (2) OpenScope -> .

    LEFT_PARENTHESIS reduce using rule 2 (OpenScope -> .)

    OpenScope                      shift and go to state 42

state 29

    (54) FunctionName -> IDENT .

    LEFT_PARENTHESIS reduce using rule 54 (FunctionName -> IDENT .)


state 30

    (30) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 30 (ConstDecl -> CONST ConstSpec .)


state 31

    (31) ConstDecl -> CONST LEFT_PARENTHESIS . ConstSpecStar RIGHT_PARENTHESIS
    (32) ConstSpecStar -> . ConstSpecStar ConstSpec SEMICOLON
    (33) ConstSpecStar -> .

    RIGHT_PARENTHESIS reduce using rule 33 (ConstSpecStar -> .)
    IDENT           reduce using rule 33 (ConstSpecStar -> .)

    ConstSpecStar                  shift and go to state 43

state 32

    (34) ConstSpec -> IdentifierList .
    (35) ConstSpec -> IdentifierList . ASSIGNMENT ExpressionList
    (36) ConstSpec -> IdentifierList . IDENT ASSIGNMENT ExpressionList

    SEMICOLON       reduce using rule 34 (ConstSpec -> IdentifierList .)
    ASSIGNMENT      shift and go to state 44
    IDENT           shift and go to state 45


state 33

    (37) IdentifierList -> IDENT .
    (38) IdentifierList -> IDENT . COMMA IdentifierList

    ASSIGNMENT      reduce using rule 37 (IdentifierList -> IDENT .)
    IDENT           reduce using rule 37 (IdentifierList -> IDENT .)
    SEMICOLON       reduce using rule 37 (IdentifierList -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 37 (IdentifierList -> IDENT .)
    LEFT_BRACKET    reduce using rule 37 (IdentifierList -> IDENT .)
    MULTIPLY        reduce using rule 37 (IdentifierList -> IDENT .)
    DEFINE          reduce using rule 37 (IdentifierList -> IDENT .)
    STRUCT          reduce using rule 37 (IdentifierList -> IDENT .)
    COMMA           shift and go to state 46


state 34

    (28) StructDecl -> TYPE StructName . StructType
    (62) StructType -> . STRUCT OpenStruct LEFT_BRACE FieldDeclStar RIGHT_BRACE CloseStruct

    STRUCT          shift and go to state 48

    StructType                     shift and go to state 47

state 35

    (29) StructName -> IDENT .

    STRUCT          reduce using rule 29 (StructName -> IDENT .)


state 36

    (42) VarDecl -> VARIABLE VarSpec .

    SEMICOLON       reduce using rule 42 (VarDecl -> VARIABLE VarSpec .)


state 37

    (43) VarDecl -> VARIABLE LEFT_PARENTHESIS . VarSpecStar RIGHT_PARENTHESIS
    (44) VarSpecStar -> . VarSpec SEMICOLON VarSpecStar
    (45) VarSpecStar -> .
    (46) VarSpec -> . IdentifierList Type
    (47) VarSpec -> . IdentifierList Type ASSIGNMENT Expression
    (48) VarSpec -> . IdentifierList IDENT ASSIGNMENT ExpressionList
    (49) VarSpec -> . IdentifierList IDENT
    (50) VarSpec -> . IdentifierList ASSIGNMENT ExpressionList
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList

    RIGHT_PARENTHESIS reduce using rule 45 (VarSpecStar -> .)
    IDENT           shift and go to state 33

    VarSpecStar                    shift and go to state 49
    VarSpec                        shift and go to state 50
    IdentifierList                 shift and go to state 38

state 38

    (46) VarSpec -> IdentifierList . Type
    (47) VarSpec -> IdentifierList . Type ASSIGNMENT Expression
    (48) VarSpec -> IdentifierList . IDENT ASSIGNMENT ExpressionList
    (49) VarSpec -> IdentifierList . IDENT
    (50) VarSpec -> IdentifierList . ASSIGNMENT ExpressionList
    (55) Type -> . LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
    (56) Type -> . TypeLit
    (57) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (58) TypeLit -> . ArrayType
    (59) TypeLit -> . PointerType
    (60) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET Type
    (61) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET IDENT
    (71) PointerType -> . MULTIPLY Type
    (72) PointerType -> . MULTIPLY IDENT

    IDENT           shift and go to state 53
    ASSIGNMENT      shift and go to state 52
    LEFT_PARENTHESIS shift and go to state 54
    LEFT_BRACKET    shift and go to state 58
    MULTIPLY        shift and go to state 59

    Type                           shift and go to state 51
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 56
    PointerType                    shift and go to state 57

state 39

    (18) ImportDecl -> IMPORT LEFT_PARENTHESIS ImportSpecSemicolonStar . RIGHT_PARENTHESIS
    (19) ImportSpecSemicolonStar -> ImportSpecSemicolonStar . ImportSpec SEMICOLON
    (21) ImportSpec -> . PERIOD ImportPath
    (22) ImportSpec -> . IDENT ImportPath
    (23) ImportSpec -> . ImportPath
    (24) ImportPath -> . STRING

    RIGHT_PARENTHESIS shift and go to state 60
    PERIOD          shift and go to state 23
    IDENT           shift and go to state 25
    STRING          shift and go to state 26

    ImportSpec                     shift and go to state 61
    ImportPath                     shift and go to state 24

state 40

    (21) ImportSpec -> PERIOD ImportPath .

    SEMICOLON       reduce using rule 21 (ImportSpec -> PERIOD ImportPath .)


state 41

    (22) ImportSpec -> IDENT ImportPath .

    SEMICOLON       reduce using rule 22 (ImportSpec -> IDENT ImportPath .)


state 42

    (52) FunctionDecl -> FUNCTION FunctionName OpenScope . Signature Block CloseScope
    (53) FunctionDecl -> FUNCTION FunctionName OpenScope . Signature CloseScope
    (73) Signature -> . Parameters Result
    (80) Parameters -> . LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (81) Parameters -> . LEFT_PARENTHESIS ParameterList RIGHT_PARENTHESIS
    (82) Parameters -> . LEFT_PARENTHESIS ParameterList COMMA RIGHT_PARENTHESIS

    LEFT_PARENTHESIS shift and go to state 64

    Signature                      shift and go to state 62
    Parameters                     shift and go to state 63

state 43

    (31) ConstDecl -> CONST LEFT_PARENTHESIS ConstSpecStar . RIGHT_PARENTHESIS
    (32) ConstSpecStar -> ConstSpecStar . ConstSpec SEMICOLON
    (34) ConstSpec -> . IdentifierList
    (35) ConstSpec -> . IdentifierList ASSIGNMENT ExpressionList
    (36) ConstSpec -> . IdentifierList IDENT ASSIGNMENT ExpressionList
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList

    RIGHT_PARENTHESIS shift and go to state 65
    IDENT           shift and go to state 33

    ConstSpec                      shift and go to state 66
    IdentifierList                 shift and go to state 32

state 44

    (35) ConstSpec -> IdentifierList ASSIGNMENT . ExpressionList
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ExpressionList                 shift and go to state 67
    Expression                     shift and go to state 68
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 45

    (36) ConstSpec -> IdentifierList IDENT . ASSIGNMENT ExpressionList

    ASSIGNMENT      shift and go to state 97


state 46

    (38) IdentifierList -> IDENT COMMA . IdentifierList
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList

    IDENT           shift and go to state 33

    IdentifierList                 shift and go to state 98

state 47

    (28) StructDecl -> TYPE StructName StructType .

    SEMICOLON       reduce using rule 28 (StructDecl -> TYPE StructName StructType .)


state 48

    (62) StructType -> STRUCT . OpenStruct LEFT_BRACE FieldDeclStar RIGHT_BRACE CloseStruct
    (8) OpenStruct -> .

    LEFT_BRACE      reduce using rule 8 (OpenStruct -> .)

    OpenStruct                     shift and go to state 99

state 49

    (43) VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 100


state 50

    (44) VarSpecStar -> VarSpec . SEMICOLON VarSpecStar

    SEMICOLON       shift and go to state 101


state 51

    (46) VarSpec -> IdentifierList Type .
    (47) VarSpec -> IdentifierList Type . ASSIGNMENT Expression

    SEMICOLON       reduce using rule 46 (VarSpec -> IdentifierList Type .)
    ASSIGNMENT      shift and go to state 102


state 52

    (50) VarSpec -> IdentifierList ASSIGNMENT . ExpressionList
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ExpressionList                 shift and go to state 103
    Expression                     shift and go to state 68
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 53

    (48) VarSpec -> IdentifierList IDENT . ASSIGNMENT ExpressionList
    (49) VarSpec -> IdentifierList IDENT .

    ASSIGNMENT      shift and go to state 104
    SEMICOLON       reduce using rule 49 (VarSpec -> IdentifierList IDENT .)


state 54

    (55) Type -> LEFT_PARENTHESIS . IDENT RIGHT_PARENTHESIS
    (57) Type -> LEFT_PARENTHESIS . Type RIGHT_PARENTHESIS
    (55) Type -> . LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
    (56) Type -> . TypeLit
    (57) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (58) TypeLit -> . ArrayType
    (59) TypeLit -> . PointerType
    (60) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET Type
    (61) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET IDENT
    (71) PointerType -> . MULTIPLY Type
    (72) PointerType -> . MULTIPLY IDENT

    IDENT           shift and go to state 105
    LEFT_PARENTHESIS shift and go to state 54
    LEFT_BRACKET    shift and go to state 58
    MULTIPLY        shift and go to state 59

    Type                           shift and go to state 106
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 56
    PointerType                    shift and go to state 57

state 55

    (56) Type -> TypeLit .

    ASSIGNMENT      reduce using rule 56 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 56 (Type -> TypeLit .)
    RIGHT_PARENTHESIS reduce using rule 56 (Type -> TypeLit .)
    COMMA           reduce using rule 56 (Type -> TypeLit .)


state 56

    (58) TypeLit -> ArrayType .

    ASSIGNMENT      reduce using rule 58 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 58 (TypeLit -> ArrayType .)
    RIGHT_PARENTHESIS reduce using rule 58 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 58 (TypeLit -> ArrayType .)


state 57

    (59) TypeLit -> PointerType .

    ASSIGNMENT      reduce using rule 59 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 59 (TypeLit -> PointerType .)
    RIGHT_PARENTHESIS reduce using rule 59 (TypeLit -> PointerType .)
    COMMA           reduce using rule 59 (TypeLit -> PointerType .)


state 58

    (60) ArrayType -> LEFT_BRACKET . INT RIGHT_BRACKET Type
    (61) ArrayType -> LEFT_BRACKET . INT RIGHT_BRACKET IDENT

    INT             shift and go to state 107


state 59

    (71) PointerType -> MULTIPLY . Type
    (72) PointerType -> MULTIPLY . IDENT
    (55) Type -> . LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
    (56) Type -> . TypeLit
    (57) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (58) TypeLit -> . ArrayType
    (59) TypeLit -> . PointerType
    (60) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET Type
    (61) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET IDENT
    (71) PointerType -> . MULTIPLY Type
    (72) PointerType -> . MULTIPLY IDENT

    IDENT           shift and go to state 109
    LEFT_PARENTHESIS shift and go to state 54
    LEFT_BRACKET    shift and go to state 58
    MULTIPLY        shift and go to state 59

    Type                           shift and go to state 108
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 56
    PointerType                    shift and go to state 57

state 60

    (18) ImportDecl -> IMPORT LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 18 (ImportDecl -> IMPORT LEFT_PARENTHESIS ImportSpecSemicolonStar RIGHT_PARENTHESIS .)


state 61

    (19) ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 110


state 62

    (52) FunctionDecl -> FUNCTION FunctionName OpenScope Signature . Block CloseScope
    (53) FunctionDecl -> FUNCTION FunctionName OpenScope Signature . CloseScope
    (91) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (3) CloseScope -> .

    LEFT_BRACE      shift and go to state 113
    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    Block                          shift and go to state 111
    CloseScope                     shift and go to state 112

state 63

    (73) Signature -> Parameters . Result
    (74) Result -> . LEFT_PARENTHESIS TypeList RIGHT_PARENTHESIS
    (75) Result -> .

    LEFT_PARENTHESIS shift and go to state 115
    LEFT_BRACE      reduce using rule 75 (Result -> .)
    SEMICOLON       reduce using rule 75 (Result -> .)

    Result                         shift and go to state 114

state 64

    (80) Parameters -> LEFT_PARENTHESIS . RIGHT_PARENTHESIS
    (81) Parameters -> LEFT_PARENTHESIS . ParameterList RIGHT_PARENTHESIS
    (82) Parameters -> LEFT_PARENTHESIS . ParameterList COMMA RIGHT_PARENTHESIS
    (83) ParameterList -> . ParameterDecl
    (84) ParameterList -> . ParameterList COMMA ParameterDecl
    (85) ParameterDecl -> . ParaIdentList Type
    (86) ParameterDecl -> . ParaIdentList IDENT
    (87) ParameterDecl -> . IDENT IDENT
    (88) ParameterDecl -> . IDENT Type
    (89) ParaIdentList -> . IDENT COMMA IDENT
    (90) ParaIdentList -> . ParaIdentList COMMA IDENT

    RIGHT_PARENTHESIS shift and go to state 116
    IDENT           shift and go to state 120

    ParameterList                  shift and go to state 117
    ParameterDecl                  shift and go to state 118
    ParaIdentList                  shift and go to state 119

state 65

    (31) ConstDecl -> CONST LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 31 (ConstDecl -> CONST LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS .)


state 66

    (32) ConstSpecStar -> ConstSpecStar ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 121


state 67

    (35) ConstSpec -> IdentifierList ASSIGNMENT ExpressionList .
    (40) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 35 (ConstSpec -> IdentifierList ASSIGNMENT ExpressionList .)
    COMMA           shift and go to state 122


state 68

    (39) ExpressionList -> Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    COMMA           reduce using rule 39 (ExpressionList -> Expression .)
    SEMICOLON       reduce using rule 39 (ExpressionList -> Expression .)
    RIGHT_PARENTHESIS reduce using rule 39 (ExpressionList -> Expression .)
    LEFT_BRACE      reduce using rule 39 (ExpressionList -> Expression .)
    RIGHT_BRACE     reduce using rule 39 (ExpressionList -> Expression .)
    COLON           reduce using rule 39 (ExpressionList -> Expression .)
    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141


state 69

    (41) ExpressionList -> LEFT_BRACKET . Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 142
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 70

    (123) PrimaryExpr -> IDENT .

    PERIOD          reduce using rule 123 (PrimaryExpr -> IDENT .)
    LEFT_BRACKET    reduce using rule 123 (PrimaryExpr -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 123 (PrimaryExpr -> IDENT .)
    LOGICAL_OR      reduce using rule 123 (PrimaryExpr -> IDENT .)
    LOGICAL_AND     reduce using rule 123 (PrimaryExpr -> IDENT .)
    EQUAL           reduce using rule 123 (PrimaryExpr -> IDENT .)
    NOT_EQUAL       reduce using rule 123 (PrimaryExpr -> IDENT .)
    LESS_THAN       reduce using rule 123 (PrimaryExpr -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 123 (PrimaryExpr -> IDENT .)
    GREATER_THAN    reduce using rule 123 (PrimaryExpr -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 123 (PrimaryExpr -> IDENT .)
    ADD             reduce using rule 123 (PrimaryExpr -> IDENT .)
    SUBTRACT        reduce using rule 123 (PrimaryExpr -> IDENT .)
    OR              reduce using rule 123 (PrimaryExpr -> IDENT .)
    XOR             reduce using rule 123 (PrimaryExpr -> IDENT .)
    MULTIPLY        reduce using rule 123 (PrimaryExpr -> IDENT .)
    QUOTIENT        reduce using rule 123 (PrimaryExpr -> IDENT .)
    REMAINDER       reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_LEFT      reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_RIGHT     reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND             reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> IDENT .)
    COMMA           reduce using rule 123 (PrimaryExpr -> IDENT .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> IDENT .)
    RIGHT_BRACKET   reduce using rule 123 (PrimaryExpr -> IDENT .)
    RIGHT_PARENTHESIS reduce using rule 123 (PrimaryExpr -> IDENT .)
    ADD_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    SUB_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    MUL_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    QUO_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    REM_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND_NOT_ASSIGNMENT reduce using rule 123 (PrimaryExpr -> IDENT .)
    OR_ASSIGNMENT   reduce using rule 123 (PrimaryExpr -> IDENT .)
    XOR_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 123 (PrimaryExpr -> IDENT .)
    ASSIGNMENT      reduce using rule 123 (PrimaryExpr -> IDENT .)
    LEFT_BRACE      reduce using rule 123 (PrimaryExpr -> IDENT .)
    RIGHT_BRACE     reduce using rule 123 (PrimaryExpr -> IDENT .)
    COLON           reduce using rule 123 (PrimaryExpr -> IDENT .)
    INCREMENT       reduce using rule 123 (PrimaryExpr -> IDENT .)
    DECREMENT       reduce using rule 123 (PrimaryExpr -> IDENT .)


state 71

    (94) Expression -> UnaryExpr .

    LOGICAL_OR      reduce using rule 94 (Expression -> UnaryExpr .)
    LOGICAL_AND     reduce using rule 94 (Expression -> UnaryExpr .)
    EQUAL           reduce using rule 94 (Expression -> UnaryExpr .)
    NOT_EQUAL       reduce using rule 94 (Expression -> UnaryExpr .)
    LESS_THAN       reduce using rule 94 (Expression -> UnaryExpr .)
    LESS_THAN_EQUAL reduce using rule 94 (Expression -> UnaryExpr .)
    GREATER_THAN    reduce using rule 94 (Expression -> UnaryExpr .)
    GREATER_THAN_EQUAL reduce using rule 94 (Expression -> UnaryExpr .)
    ADD             reduce using rule 94 (Expression -> UnaryExpr .)
    SUBTRACT        reduce using rule 94 (Expression -> UnaryExpr .)
    OR              reduce using rule 94 (Expression -> UnaryExpr .)
    XOR             reduce using rule 94 (Expression -> UnaryExpr .)
    MULTIPLY        reduce using rule 94 (Expression -> UnaryExpr .)
    QUOTIENT        reduce using rule 94 (Expression -> UnaryExpr .)
    REMAINDER       reduce using rule 94 (Expression -> UnaryExpr .)
    SHIFT_LEFT      reduce using rule 94 (Expression -> UnaryExpr .)
    SHIFT_RIGHT     reduce using rule 94 (Expression -> UnaryExpr .)
    AND             reduce using rule 94 (Expression -> UnaryExpr .)
    AND_NOT         reduce using rule 94 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 94 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 94 (Expression -> UnaryExpr .)
    RIGHT_BRACKET   reduce using rule 94 (Expression -> UnaryExpr .)
    RIGHT_PARENTHESIS reduce using rule 94 (Expression -> UnaryExpr .)
    ADD_ASSIGNMENT  reduce using rule 94 (Expression -> UnaryExpr .)
    SUB_ASSIGNMENT  reduce using rule 94 (Expression -> UnaryExpr .)
    MUL_ASSIGNMENT  reduce using rule 94 (Expression -> UnaryExpr .)
    QUO_ASSIGNMENT  reduce using rule 94 (Expression -> UnaryExpr .)
    REM_ASSIGNMENT  reduce using rule 94 (Expression -> UnaryExpr .)
    AND_ASSIGNMENT  reduce using rule 94 (Expression -> UnaryExpr .)
    AND_NOT_ASSIGNMENT reduce using rule 94 (Expression -> UnaryExpr .)
    OR_ASSIGNMENT   reduce using rule 94 (Expression -> UnaryExpr .)
    XOR_ASSIGNMENT  reduce using rule 94 (Expression -> UnaryExpr .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 94 (Expression -> UnaryExpr .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 94 (Expression -> UnaryExpr .)
    ASSIGNMENT      reduce using rule 94 (Expression -> UnaryExpr .)
    LEFT_BRACE      reduce using rule 94 (Expression -> UnaryExpr .)
    RIGHT_BRACE     reduce using rule 94 (Expression -> UnaryExpr .)
    COLON           reduce using rule 94 (Expression -> UnaryExpr .)
    INCREMENT       reduce using rule 94 (Expression -> UnaryExpr .)
    DECREMENT       reduce using rule 94 (Expression -> UnaryExpr .)


state 72

    (116) unary_op -> ADD .

    IDENT           reduce using rule 116 (unary_op -> ADD .)
    LEFT_PARENTHESIS reduce using rule 116 (unary_op -> ADD .)
    ADD             reduce using rule 116 (unary_op -> ADD .)
    SUBTRACT        reduce using rule 116 (unary_op -> ADD .)
    NOT             reduce using rule 116 (unary_op -> ADD .)
    XOR             reduce using rule 116 (unary_op -> ADD .)
    MULTIPLY        reduce using rule 116 (unary_op -> ADD .)
    AND             reduce using rule 116 (unary_op -> ADD .)
    ARROW           reduce using rule 116 (unary_op -> ADD .)
    INT             reduce using rule 116 (unary_op -> ADD .)
    FLOAT           reduce using rule 116 (unary_op -> ADD .)
    RUNE            reduce using rule 116 (unary_op -> ADD .)
    STRING          reduce using rule 116 (unary_op -> ADD .)
    TRUE            reduce using rule 116 (unary_op -> ADD .)
    FALSE           reduce using rule 116 (unary_op -> ADD .)
    IMAGINARY       reduce using rule 116 (unary_op -> ADD .)


state 73

    (117) unary_op -> SUBTRACT .

    IDENT           reduce using rule 117 (unary_op -> SUBTRACT .)
    LEFT_PARENTHESIS reduce using rule 117 (unary_op -> SUBTRACT .)
    ADD             reduce using rule 117 (unary_op -> SUBTRACT .)
    SUBTRACT        reduce using rule 117 (unary_op -> SUBTRACT .)
    NOT             reduce using rule 117 (unary_op -> SUBTRACT .)
    XOR             reduce using rule 117 (unary_op -> SUBTRACT .)
    MULTIPLY        reduce using rule 117 (unary_op -> SUBTRACT .)
    AND             reduce using rule 117 (unary_op -> SUBTRACT .)
    ARROW           reduce using rule 117 (unary_op -> SUBTRACT .)
    INT             reduce using rule 117 (unary_op -> SUBTRACT .)
    FLOAT           reduce using rule 117 (unary_op -> SUBTRACT .)
    RUNE            reduce using rule 117 (unary_op -> SUBTRACT .)
    STRING          reduce using rule 117 (unary_op -> SUBTRACT .)
    TRUE            reduce using rule 117 (unary_op -> SUBTRACT .)
    FALSE           reduce using rule 117 (unary_op -> SUBTRACT .)
    IMAGINARY       reduce using rule 117 (unary_op -> SUBTRACT .)


state 74

    (119) unary_op -> XOR .

    IDENT           reduce using rule 119 (unary_op -> XOR .)
    LEFT_PARENTHESIS reduce using rule 119 (unary_op -> XOR .)
    ADD             reduce using rule 119 (unary_op -> XOR .)
    SUBTRACT        reduce using rule 119 (unary_op -> XOR .)
    NOT             reduce using rule 119 (unary_op -> XOR .)
    XOR             reduce using rule 119 (unary_op -> XOR .)
    MULTIPLY        reduce using rule 119 (unary_op -> XOR .)
    AND             reduce using rule 119 (unary_op -> XOR .)
    ARROW           reduce using rule 119 (unary_op -> XOR .)
    INT             reduce using rule 119 (unary_op -> XOR .)
    FLOAT           reduce using rule 119 (unary_op -> XOR .)
    RUNE            reduce using rule 119 (unary_op -> XOR .)
    STRING          reduce using rule 119 (unary_op -> XOR .)
    TRUE            reduce using rule 119 (unary_op -> XOR .)
    FALSE           reduce using rule 119 (unary_op -> XOR .)
    IMAGINARY       reduce using rule 119 (unary_op -> XOR .)


state 75

    (120) unary_op -> MULTIPLY .

    IDENT           reduce using rule 120 (unary_op -> MULTIPLY .)
    LEFT_PARENTHESIS reduce using rule 120 (unary_op -> MULTIPLY .)
    ADD             reduce using rule 120 (unary_op -> MULTIPLY .)
    SUBTRACT        reduce using rule 120 (unary_op -> MULTIPLY .)
    NOT             reduce using rule 120 (unary_op -> MULTIPLY .)
    XOR             reduce using rule 120 (unary_op -> MULTIPLY .)
    MULTIPLY        reduce using rule 120 (unary_op -> MULTIPLY .)
    AND             reduce using rule 120 (unary_op -> MULTIPLY .)
    ARROW           reduce using rule 120 (unary_op -> MULTIPLY .)
    INT             reduce using rule 120 (unary_op -> MULTIPLY .)
    FLOAT           reduce using rule 120 (unary_op -> MULTIPLY .)
    RUNE            reduce using rule 120 (unary_op -> MULTIPLY .)
    STRING          reduce using rule 120 (unary_op -> MULTIPLY .)
    TRUE            reduce using rule 120 (unary_op -> MULTIPLY .)
    FALSE           reduce using rule 120 (unary_op -> MULTIPLY .)
    IMAGINARY       reduce using rule 120 (unary_op -> MULTIPLY .)


state 76

    (121) unary_op -> AND .

    IDENT           reduce using rule 121 (unary_op -> AND .)
    LEFT_PARENTHESIS reduce using rule 121 (unary_op -> AND .)
    ADD             reduce using rule 121 (unary_op -> AND .)
    SUBTRACT        reduce using rule 121 (unary_op -> AND .)
    NOT             reduce using rule 121 (unary_op -> AND .)
    XOR             reduce using rule 121 (unary_op -> AND .)
    MULTIPLY        reduce using rule 121 (unary_op -> AND .)
    AND             reduce using rule 121 (unary_op -> AND .)
    ARROW           reduce using rule 121 (unary_op -> AND .)
    INT             reduce using rule 121 (unary_op -> AND .)
    FLOAT           reduce using rule 121 (unary_op -> AND .)
    RUNE            reduce using rule 121 (unary_op -> AND .)
    STRING          reduce using rule 121 (unary_op -> AND .)
    TRUE            reduce using rule 121 (unary_op -> AND .)
    FALSE           reduce using rule 121 (unary_op -> AND .)
    IMAGINARY       reduce using rule 121 (unary_op -> AND .)


state 77

    (114) UnaryExpr -> PrimaryExpr .
    (126) PrimaryExpr -> PrimaryExpr . Index
    (127) PrimaryExpr -> PrimaryExpr . PERIOD IDENT
    (128) PrimaryExpr -> PrimaryExpr . Arguments
    (129) Index -> . LEFT_BRACKET Expression RIGHT_BRACKET
    (130) Arguments -> . LEFT_PARENTHESIS RIGHT_PARENTHESIS
    (131) Arguments -> . LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS
    (132) Arguments -> . LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS

    LOGICAL_OR      reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    LOGICAL_AND     reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    EQUAL           reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    NOT_EQUAL       reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    LESS_THAN       reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    LESS_THAN_EQUAL reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    GREATER_THAN    reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    GREATER_THAN_EQUAL reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    SUBTRACT        reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    MULTIPLY        reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    QUOTIENT        reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    REMAINDER       reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    SHIFT_LEFT      reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    SHIFT_RIGHT     reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    RIGHT_BRACKET   reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    RIGHT_PARENTHESIS reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGNMENT  reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGNMENT  reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGNMENT  reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    QUO_ASSIGNMENT  reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    REM_ASSIGNMENT  reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGNMENT  reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    AND_NOT_ASSIGNMENT reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGNMENT   reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGNMENT  reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    ASSIGNMENT      reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    LEFT_BRACE      reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    RIGHT_BRACE     reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    INCREMENT       reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    DECREMENT       reduce using rule 114 (UnaryExpr -> PrimaryExpr .)
    PERIOD          shift and go to state 144
    LEFT_BRACKET    shift and go to state 146
    LEFT_PARENTHESIS shift and go to state 147

    Index                          shift and go to state 143
    Arguments                      shift and go to state 145

state 78

    (115) UnaryExpr -> unary_op . UnaryExpr
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    unary_op                       shift and go to state 78
    UnaryExpr                      shift and go to state 148
    PrimaryExpr                    shift and go to state 77
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 79

    (124) PrimaryExpr -> LEFT_PARENTHESIS . Expression RIGHT_PARENTHESIS
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 149
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 80

    (125) PrimaryExpr -> Literal .

    PERIOD          reduce using rule 125 (PrimaryExpr -> Literal .)
    LEFT_BRACKET    reduce using rule 125 (PrimaryExpr -> Literal .)
    LEFT_PARENTHESIS reduce using rule 125 (PrimaryExpr -> Literal .)
    LOGICAL_OR      reduce using rule 125 (PrimaryExpr -> Literal .)
    LOGICAL_AND     reduce using rule 125 (PrimaryExpr -> Literal .)
    EQUAL           reduce using rule 125 (PrimaryExpr -> Literal .)
    NOT_EQUAL       reduce using rule 125 (PrimaryExpr -> Literal .)
    LESS_THAN       reduce using rule 125 (PrimaryExpr -> Literal .)
    LESS_THAN_EQUAL reduce using rule 125 (PrimaryExpr -> Literal .)
    GREATER_THAN    reduce using rule 125 (PrimaryExpr -> Literal .)
    GREATER_THAN_EQUAL reduce using rule 125 (PrimaryExpr -> Literal .)
    ADD             reduce using rule 125 (PrimaryExpr -> Literal .)
    SUBTRACT        reduce using rule 125 (PrimaryExpr -> Literal .)
    OR              reduce using rule 125 (PrimaryExpr -> Literal .)
    XOR             reduce using rule 125 (PrimaryExpr -> Literal .)
    MULTIPLY        reduce using rule 125 (PrimaryExpr -> Literal .)
    QUOTIENT        reduce using rule 125 (PrimaryExpr -> Literal .)
    REMAINDER       reduce using rule 125 (PrimaryExpr -> Literal .)
    SHIFT_LEFT      reduce using rule 125 (PrimaryExpr -> Literal .)
    SHIFT_RIGHT     reduce using rule 125 (PrimaryExpr -> Literal .)
    AND             reduce using rule 125 (PrimaryExpr -> Literal .)
    AND_NOT         reduce using rule 125 (PrimaryExpr -> Literal .)
    COMMA           reduce using rule 125 (PrimaryExpr -> Literal .)
    SEMICOLON       reduce using rule 125 (PrimaryExpr -> Literal .)
    RIGHT_BRACKET   reduce using rule 125 (PrimaryExpr -> Literal .)
    RIGHT_PARENTHESIS reduce using rule 125 (PrimaryExpr -> Literal .)
    ADD_ASSIGNMENT  reduce using rule 125 (PrimaryExpr -> Literal .)
    SUB_ASSIGNMENT  reduce using rule 125 (PrimaryExpr -> Literal .)
    MUL_ASSIGNMENT  reduce using rule 125 (PrimaryExpr -> Literal .)
    QUO_ASSIGNMENT  reduce using rule 125 (PrimaryExpr -> Literal .)
    REM_ASSIGNMENT  reduce using rule 125 (PrimaryExpr -> Literal .)
    AND_ASSIGNMENT  reduce using rule 125 (PrimaryExpr -> Literal .)
    AND_NOT_ASSIGNMENT reduce using rule 125 (PrimaryExpr -> Literal .)
    OR_ASSIGNMENT   reduce using rule 125 (PrimaryExpr -> Literal .)
    XOR_ASSIGNMENT  reduce using rule 125 (PrimaryExpr -> Literal .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 125 (PrimaryExpr -> Literal .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 125 (PrimaryExpr -> Literal .)
    ASSIGNMENT      reduce using rule 125 (PrimaryExpr -> Literal .)
    LEFT_BRACE      reduce using rule 125 (PrimaryExpr -> Literal .)
    RIGHT_BRACE     reduce using rule 125 (PrimaryExpr -> Literal .)
    COLON           reduce using rule 125 (PrimaryExpr -> Literal .)
    INCREMENT       reduce using rule 125 (PrimaryExpr -> Literal .)
    DECREMENT       reduce using rule 125 (PrimaryExpr -> Literal .)


state 81

    (118) unary_op -> NOT .

    IDENT           reduce using rule 118 (unary_op -> NOT .)
    LEFT_PARENTHESIS reduce using rule 118 (unary_op -> NOT .)
    ADD             reduce using rule 118 (unary_op -> NOT .)
    SUBTRACT        reduce using rule 118 (unary_op -> NOT .)
    NOT             reduce using rule 118 (unary_op -> NOT .)
    XOR             reduce using rule 118 (unary_op -> NOT .)
    MULTIPLY        reduce using rule 118 (unary_op -> NOT .)
    AND             reduce using rule 118 (unary_op -> NOT .)
    ARROW           reduce using rule 118 (unary_op -> NOT .)
    INT             reduce using rule 118 (unary_op -> NOT .)
    FLOAT           reduce using rule 118 (unary_op -> NOT .)
    RUNE            reduce using rule 118 (unary_op -> NOT .)
    STRING          reduce using rule 118 (unary_op -> NOT .)
    TRUE            reduce using rule 118 (unary_op -> NOT .)
    FALSE           reduce using rule 118 (unary_op -> NOT .)
    IMAGINARY       reduce using rule 118 (unary_op -> NOT .)


state 82

    (122) unary_op -> ARROW .

    IDENT           reduce using rule 122 (unary_op -> ARROW .)
    LEFT_PARENTHESIS reduce using rule 122 (unary_op -> ARROW .)
    ADD             reduce using rule 122 (unary_op -> ARROW .)
    SUBTRACT        reduce using rule 122 (unary_op -> ARROW .)
    NOT             reduce using rule 122 (unary_op -> ARROW .)
    XOR             reduce using rule 122 (unary_op -> ARROW .)
    MULTIPLY        reduce using rule 122 (unary_op -> ARROW .)
    AND             reduce using rule 122 (unary_op -> ARROW .)
    ARROW           reduce using rule 122 (unary_op -> ARROW .)
    INT             reduce using rule 122 (unary_op -> ARROW .)
    FLOAT           reduce using rule 122 (unary_op -> ARROW .)
    RUNE            reduce using rule 122 (unary_op -> ARROW .)
    STRING          reduce using rule 122 (unary_op -> ARROW .)
    TRUE            reduce using rule 122 (unary_op -> ARROW .)
    FALSE           reduce using rule 122 (unary_op -> ARROW .)
    IMAGINARY       reduce using rule 122 (unary_op -> ARROW .)


state 83

    (133) Literal -> BasicLit .

    PERIOD          reduce using rule 133 (Literal -> BasicLit .)
    LEFT_BRACKET    reduce using rule 133 (Literal -> BasicLit .)
    LEFT_PARENTHESIS reduce using rule 133 (Literal -> BasicLit .)
    LOGICAL_OR      reduce using rule 133 (Literal -> BasicLit .)
    LOGICAL_AND     reduce using rule 133 (Literal -> BasicLit .)
    EQUAL           reduce using rule 133 (Literal -> BasicLit .)
    NOT_EQUAL       reduce using rule 133 (Literal -> BasicLit .)
    LESS_THAN       reduce using rule 133 (Literal -> BasicLit .)
    LESS_THAN_EQUAL reduce using rule 133 (Literal -> BasicLit .)
    GREATER_THAN    reduce using rule 133 (Literal -> BasicLit .)
    GREATER_THAN_EQUAL reduce using rule 133 (Literal -> BasicLit .)
    ADD             reduce using rule 133 (Literal -> BasicLit .)
    SUBTRACT        reduce using rule 133 (Literal -> BasicLit .)
    OR              reduce using rule 133 (Literal -> BasicLit .)
    XOR             reduce using rule 133 (Literal -> BasicLit .)
    MULTIPLY        reduce using rule 133 (Literal -> BasicLit .)
    QUOTIENT        reduce using rule 133 (Literal -> BasicLit .)
    REMAINDER       reduce using rule 133 (Literal -> BasicLit .)
    SHIFT_LEFT      reduce using rule 133 (Literal -> BasicLit .)
    SHIFT_RIGHT     reduce using rule 133 (Literal -> BasicLit .)
    AND             reduce using rule 133 (Literal -> BasicLit .)
    AND_NOT         reduce using rule 133 (Literal -> BasicLit .)
    COMMA           reduce using rule 133 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 133 (Literal -> BasicLit .)
    RIGHT_BRACKET   reduce using rule 133 (Literal -> BasicLit .)
    RIGHT_PARENTHESIS reduce using rule 133 (Literal -> BasicLit .)
    ADD_ASSIGNMENT  reduce using rule 133 (Literal -> BasicLit .)
    SUB_ASSIGNMENT  reduce using rule 133 (Literal -> BasicLit .)
    MUL_ASSIGNMENT  reduce using rule 133 (Literal -> BasicLit .)
    QUO_ASSIGNMENT  reduce using rule 133 (Literal -> BasicLit .)
    REM_ASSIGNMENT  reduce using rule 133 (Literal -> BasicLit .)
    AND_ASSIGNMENT  reduce using rule 133 (Literal -> BasicLit .)
    AND_NOT_ASSIGNMENT reduce using rule 133 (Literal -> BasicLit .)
    OR_ASSIGNMENT   reduce using rule 133 (Literal -> BasicLit .)
    XOR_ASSIGNMENT  reduce using rule 133 (Literal -> BasicLit .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 133 (Literal -> BasicLit .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 133 (Literal -> BasicLit .)
    ASSIGNMENT      reduce using rule 133 (Literal -> BasicLit .)
    LEFT_BRACE      reduce using rule 133 (Literal -> BasicLit .)
    RIGHT_BRACE     reduce using rule 133 (Literal -> BasicLit .)
    COLON           reduce using rule 133 (Literal -> BasicLit .)
    INCREMENT       reduce using rule 133 (Literal -> BasicLit .)
    DECREMENT       reduce using rule 133 (Literal -> BasicLit .)


state 84

    (134) BasicLit -> IntLit .

    PERIOD          reduce using rule 134 (BasicLit -> IntLit .)
    LEFT_BRACKET    reduce using rule 134 (BasicLit -> IntLit .)
    LEFT_PARENTHESIS reduce using rule 134 (BasicLit -> IntLit .)
    LOGICAL_OR      reduce using rule 134 (BasicLit -> IntLit .)
    LOGICAL_AND     reduce using rule 134 (BasicLit -> IntLit .)
    EQUAL           reduce using rule 134 (BasicLit -> IntLit .)
    NOT_EQUAL       reduce using rule 134 (BasicLit -> IntLit .)
    LESS_THAN       reduce using rule 134 (BasicLit -> IntLit .)
    LESS_THAN_EQUAL reduce using rule 134 (BasicLit -> IntLit .)
    GREATER_THAN    reduce using rule 134 (BasicLit -> IntLit .)
    GREATER_THAN_EQUAL reduce using rule 134 (BasicLit -> IntLit .)
    ADD             reduce using rule 134 (BasicLit -> IntLit .)
    SUBTRACT        reduce using rule 134 (BasicLit -> IntLit .)
    OR              reduce using rule 134 (BasicLit -> IntLit .)
    XOR             reduce using rule 134 (BasicLit -> IntLit .)
    MULTIPLY        reduce using rule 134 (BasicLit -> IntLit .)
    QUOTIENT        reduce using rule 134 (BasicLit -> IntLit .)
    REMAINDER       reduce using rule 134 (BasicLit -> IntLit .)
    SHIFT_LEFT      reduce using rule 134 (BasicLit -> IntLit .)
    SHIFT_RIGHT     reduce using rule 134 (BasicLit -> IntLit .)
    AND             reduce using rule 134 (BasicLit -> IntLit .)
    AND_NOT         reduce using rule 134 (BasicLit -> IntLit .)
    COMMA           reduce using rule 134 (BasicLit -> IntLit .)
    SEMICOLON       reduce using rule 134 (BasicLit -> IntLit .)
    RIGHT_BRACKET   reduce using rule 134 (BasicLit -> IntLit .)
    RIGHT_PARENTHESIS reduce using rule 134 (BasicLit -> IntLit .)
    ADD_ASSIGNMENT  reduce using rule 134 (BasicLit -> IntLit .)
    SUB_ASSIGNMENT  reduce using rule 134 (BasicLit -> IntLit .)
    MUL_ASSIGNMENT  reduce using rule 134 (BasicLit -> IntLit .)
    QUO_ASSIGNMENT  reduce using rule 134 (BasicLit -> IntLit .)
    REM_ASSIGNMENT  reduce using rule 134 (BasicLit -> IntLit .)
    AND_ASSIGNMENT  reduce using rule 134 (BasicLit -> IntLit .)
    AND_NOT_ASSIGNMENT reduce using rule 134 (BasicLit -> IntLit .)
    OR_ASSIGNMENT   reduce using rule 134 (BasicLit -> IntLit .)
    XOR_ASSIGNMENT  reduce using rule 134 (BasicLit -> IntLit .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 134 (BasicLit -> IntLit .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 134 (BasicLit -> IntLit .)
    ASSIGNMENT      reduce using rule 134 (BasicLit -> IntLit .)
    LEFT_BRACE      reduce using rule 134 (BasicLit -> IntLit .)
    RIGHT_BRACE     reduce using rule 134 (BasicLit -> IntLit .)
    COLON           reduce using rule 134 (BasicLit -> IntLit .)
    INCREMENT       reduce using rule 134 (BasicLit -> IntLit .)
    DECREMENT       reduce using rule 134 (BasicLit -> IntLit .)


state 85

    (135) BasicLit -> FloatLit .

    PERIOD          reduce using rule 135 (BasicLit -> FloatLit .)
    LEFT_BRACKET    reduce using rule 135 (BasicLit -> FloatLit .)
    LEFT_PARENTHESIS reduce using rule 135 (BasicLit -> FloatLit .)
    LOGICAL_OR      reduce using rule 135 (BasicLit -> FloatLit .)
    LOGICAL_AND     reduce using rule 135 (BasicLit -> FloatLit .)
    EQUAL           reduce using rule 135 (BasicLit -> FloatLit .)
    NOT_EQUAL       reduce using rule 135 (BasicLit -> FloatLit .)
    LESS_THAN       reduce using rule 135 (BasicLit -> FloatLit .)
    LESS_THAN_EQUAL reduce using rule 135 (BasicLit -> FloatLit .)
    GREATER_THAN    reduce using rule 135 (BasicLit -> FloatLit .)
    GREATER_THAN_EQUAL reduce using rule 135 (BasicLit -> FloatLit .)
    ADD             reduce using rule 135 (BasicLit -> FloatLit .)
    SUBTRACT        reduce using rule 135 (BasicLit -> FloatLit .)
    OR              reduce using rule 135 (BasicLit -> FloatLit .)
    XOR             reduce using rule 135 (BasicLit -> FloatLit .)
    MULTIPLY        reduce using rule 135 (BasicLit -> FloatLit .)
    QUOTIENT        reduce using rule 135 (BasicLit -> FloatLit .)
    REMAINDER       reduce using rule 135 (BasicLit -> FloatLit .)
    SHIFT_LEFT      reduce using rule 135 (BasicLit -> FloatLit .)
    SHIFT_RIGHT     reduce using rule 135 (BasicLit -> FloatLit .)
    AND             reduce using rule 135 (BasicLit -> FloatLit .)
    AND_NOT         reduce using rule 135 (BasicLit -> FloatLit .)
    COMMA           reduce using rule 135 (BasicLit -> FloatLit .)
    SEMICOLON       reduce using rule 135 (BasicLit -> FloatLit .)
    RIGHT_BRACKET   reduce using rule 135 (BasicLit -> FloatLit .)
    RIGHT_PARENTHESIS reduce using rule 135 (BasicLit -> FloatLit .)
    ADD_ASSIGNMENT  reduce using rule 135 (BasicLit -> FloatLit .)
    SUB_ASSIGNMENT  reduce using rule 135 (BasicLit -> FloatLit .)
    MUL_ASSIGNMENT  reduce using rule 135 (BasicLit -> FloatLit .)
    QUO_ASSIGNMENT  reduce using rule 135 (BasicLit -> FloatLit .)
    REM_ASSIGNMENT  reduce using rule 135 (BasicLit -> FloatLit .)
    AND_ASSIGNMENT  reduce using rule 135 (BasicLit -> FloatLit .)
    AND_NOT_ASSIGNMENT reduce using rule 135 (BasicLit -> FloatLit .)
    OR_ASSIGNMENT   reduce using rule 135 (BasicLit -> FloatLit .)
    XOR_ASSIGNMENT  reduce using rule 135 (BasicLit -> FloatLit .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 135 (BasicLit -> FloatLit .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 135 (BasicLit -> FloatLit .)
    ASSIGNMENT      reduce using rule 135 (BasicLit -> FloatLit .)
    LEFT_BRACE      reduce using rule 135 (BasicLit -> FloatLit .)
    RIGHT_BRACE     reduce using rule 135 (BasicLit -> FloatLit .)
    COLON           reduce using rule 135 (BasicLit -> FloatLit .)
    INCREMENT       reduce using rule 135 (BasicLit -> FloatLit .)
    DECREMENT       reduce using rule 135 (BasicLit -> FloatLit .)


state 86

    (136) BasicLit -> RuneLit .

    PERIOD          reduce using rule 136 (BasicLit -> RuneLit .)
    LEFT_BRACKET    reduce using rule 136 (BasicLit -> RuneLit .)
    LEFT_PARENTHESIS reduce using rule 136 (BasicLit -> RuneLit .)
    LOGICAL_OR      reduce using rule 136 (BasicLit -> RuneLit .)
    LOGICAL_AND     reduce using rule 136 (BasicLit -> RuneLit .)
    EQUAL           reduce using rule 136 (BasicLit -> RuneLit .)
    NOT_EQUAL       reduce using rule 136 (BasicLit -> RuneLit .)
    LESS_THAN       reduce using rule 136 (BasicLit -> RuneLit .)
    LESS_THAN_EQUAL reduce using rule 136 (BasicLit -> RuneLit .)
    GREATER_THAN    reduce using rule 136 (BasicLit -> RuneLit .)
    GREATER_THAN_EQUAL reduce using rule 136 (BasicLit -> RuneLit .)
    ADD             reduce using rule 136 (BasicLit -> RuneLit .)
    SUBTRACT        reduce using rule 136 (BasicLit -> RuneLit .)
    OR              reduce using rule 136 (BasicLit -> RuneLit .)
    XOR             reduce using rule 136 (BasicLit -> RuneLit .)
    MULTIPLY        reduce using rule 136 (BasicLit -> RuneLit .)
    QUOTIENT        reduce using rule 136 (BasicLit -> RuneLit .)
    REMAINDER       reduce using rule 136 (BasicLit -> RuneLit .)
    SHIFT_LEFT      reduce using rule 136 (BasicLit -> RuneLit .)
    SHIFT_RIGHT     reduce using rule 136 (BasicLit -> RuneLit .)
    AND             reduce using rule 136 (BasicLit -> RuneLit .)
    AND_NOT         reduce using rule 136 (BasicLit -> RuneLit .)
    COMMA           reduce using rule 136 (BasicLit -> RuneLit .)
    SEMICOLON       reduce using rule 136 (BasicLit -> RuneLit .)
    RIGHT_BRACKET   reduce using rule 136 (BasicLit -> RuneLit .)
    RIGHT_PARENTHESIS reduce using rule 136 (BasicLit -> RuneLit .)
    ADD_ASSIGNMENT  reduce using rule 136 (BasicLit -> RuneLit .)
    SUB_ASSIGNMENT  reduce using rule 136 (BasicLit -> RuneLit .)
    MUL_ASSIGNMENT  reduce using rule 136 (BasicLit -> RuneLit .)
    QUO_ASSIGNMENT  reduce using rule 136 (BasicLit -> RuneLit .)
    REM_ASSIGNMENT  reduce using rule 136 (BasicLit -> RuneLit .)
    AND_ASSIGNMENT  reduce using rule 136 (BasicLit -> RuneLit .)
    AND_NOT_ASSIGNMENT reduce using rule 136 (BasicLit -> RuneLit .)
    OR_ASSIGNMENT   reduce using rule 136 (BasicLit -> RuneLit .)
    XOR_ASSIGNMENT  reduce using rule 136 (BasicLit -> RuneLit .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 136 (BasicLit -> RuneLit .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 136 (BasicLit -> RuneLit .)
    ASSIGNMENT      reduce using rule 136 (BasicLit -> RuneLit .)
    LEFT_BRACE      reduce using rule 136 (BasicLit -> RuneLit .)
    RIGHT_BRACE     reduce using rule 136 (BasicLit -> RuneLit .)
    COLON           reduce using rule 136 (BasicLit -> RuneLit .)
    INCREMENT       reduce using rule 136 (BasicLit -> RuneLit .)
    DECREMENT       reduce using rule 136 (BasicLit -> RuneLit .)


state 87

    (137) BasicLit -> StringLit .

    PERIOD          reduce using rule 137 (BasicLit -> StringLit .)
    LEFT_BRACKET    reduce using rule 137 (BasicLit -> StringLit .)
    LEFT_PARENTHESIS reduce using rule 137 (BasicLit -> StringLit .)
    LOGICAL_OR      reduce using rule 137 (BasicLit -> StringLit .)
    LOGICAL_AND     reduce using rule 137 (BasicLit -> StringLit .)
    EQUAL           reduce using rule 137 (BasicLit -> StringLit .)
    NOT_EQUAL       reduce using rule 137 (BasicLit -> StringLit .)
    LESS_THAN       reduce using rule 137 (BasicLit -> StringLit .)
    LESS_THAN_EQUAL reduce using rule 137 (BasicLit -> StringLit .)
    GREATER_THAN    reduce using rule 137 (BasicLit -> StringLit .)
    GREATER_THAN_EQUAL reduce using rule 137 (BasicLit -> StringLit .)
    ADD             reduce using rule 137 (BasicLit -> StringLit .)
    SUBTRACT        reduce using rule 137 (BasicLit -> StringLit .)
    OR              reduce using rule 137 (BasicLit -> StringLit .)
    XOR             reduce using rule 137 (BasicLit -> StringLit .)
    MULTIPLY        reduce using rule 137 (BasicLit -> StringLit .)
    QUOTIENT        reduce using rule 137 (BasicLit -> StringLit .)
    REMAINDER       reduce using rule 137 (BasicLit -> StringLit .)
    SHIFT_LEFT      reduce using rule 137 (BasicLit -> StringLit .)
    SHIFT_RIGHT     reduce using rule 137 (BasicLit -> StringLit .)
    AND             reduce using rule 137 (BasicLit -> StringLit .)
    AND_NOT         reduce using rule 137 (BasicLit -> StringLit .)
    COMMA           reduce using rule 137 (BasicLit -> StringLit .)
    SEMICOLON       reduce using rule 137 (BasicLit -> StringLit .)
    RIGHT_BRACKET   reduce using rule 137 (BasicLit -> StringLit .)
    RIGHT_PARENTHESIS reduce using rule 137 (BasicLit -> StringLit .)
    ADD_ASSIGNMENT  reduce using rule 137 (BasicLit -> StringLit .)
    SUB_ASSIGNMENT  reduce using rule 137 (BasicLit -> StringLit .)
    MUL_ASSIGNMENT  reduce using rule 137 (BasicLit -> StringLit .)
    QUO_ASSIGNMENT  reduce using rule 137 (BasicLit -> StringLit .)
    REM_ASSIGNMENT  reduce using rule 137 (BasicLit -> StringLit .)
    AND_ASSIGNMENT  reduce using rule 137 (BasicLit -> StringLit .)
    AND_NOT_ASSIGNMENT reduce using rule 137 (BasicLit -> StringLit .)
    OR_ASSIGNMENT   reduce using rule 137 (BasicLit -> StringLit .)
    XOR_ASSIGNMENT  reduce using rule 137 (BasicLit -> StringLit .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 137 (BasicLit -> StringLit .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 137 (BasicLit -> StringLit .)
    ASSIGNMENT      reduce using rule 137 (BasicLit -> StringLit .)
    LEFT_BRACE      reduce using rule 137 (BasicLit -> StringLit .)
    RIGHT_BRACE     reduce using rule 137 (BasicLit -> StringLit .)
    COLON           reduce using rule 137 (BasicLit -> StringLit .)
    INCREMENT       reduce using rule 137 (BasicLit -> StringLit .)
    DECREMENT       reduce using rule 137 (BasicLit -> StringLit .)


state 88

    (138) BasicLit -> TrueFalseLit .

    PERIOD          reduce using rule 138 (BasicLit -> TrueFalseLit .)
    LEFT_BRACKET    reduce using rule 138 (BasicLit -> TrueFalseLit .)
    LEFT_PARENTHESIS reduce using rule 138 (BasicLit -> TrueFalseLit .)
    LOGICAL_OR      reduce using rule 138 (BasicLit -> TrueFalseLit .)
    LOGICAL_AND     reduce using rule 138 (BasicLit -> TrueFalseLit .)
    EQUAL           reduce using rule 138 (BasicLit -> TrueFalseLit .)
    NOT_EQUAL       reduce using rule 138 (BasicLit -> TrueFalseLit .)
    LESS_THAN       reduce using rule 138 (BasicLit -> TrueFalseLit .)
    LESS_THAN_EQUAL reduce using rule 138 (BasicLit -> TrueFalseLit .)
    GREATER_THAN    reduce using rule 138 (BasicLit -> TrueFalseLit .)
    GREATER_THAN_EQUAL reduce using rule 138 (BasicLit -> TrueFalseLit .)
    ADD             reduce using rule 138 (BasicLit -> TrueFalseLit .)
    SUBTRACT        reduce using rule 138 (BasicLit -> TrueFalseLit .)
    OR              reduce using rule 138 (BasicLit -> TrueFalseLit .)
    XOR             reduce using rule 138 (BasicLit -> TrueFalseLit .)
    MULTIPLY        reduce using rule 138 (BasicLit -> TrueFalseLit .)
    QUOTIENT        reduce using rule 138 (BasicLit -> TrueFalseLit .)
    REMAINDER       reduce using rule 138 (BasicLit -> TrueFalseLit .)
    SHIFT_LEFT      reduce using rule 138 (BasicLit -> TrueFalseLit .)
    SHIFT_RIGHT     reduce using rule 138 (BasicLit -> TrueFalseLit .)
    AND             reduce using rule 138 (BasicLit -> TrueFalseLit .)
    AND_NOT         reduce using rule 138 (BasicLit -> TrueFalseLit .)
    COMMA           reduce using rule 138 (BasicLit -> TrueFalseLit .)
    SEMICOLON       reduce using rule 138 (BasicLit -> TrueFalseLit .)
    RIGHT_BRACKET   reduce using rule 138 (BasicLit -> TrueFalseLit .)
    RIGHT_PARENTHESIS reduce using rule 138 (BasicLit -> TrueFalseLit .)
    ADD_ASSIGNMENT  reduce using rule 138 (BasicLit -> TrueFalseLit .)
    SUB_ASSIGNMENT  reduce using rule 138 (BasicLit -> TrueFalseLit .)
    MUL_ASSIGNMENT  reduce using rule 138 (BasicLit -> TrueFalseLit .)
    QUO_ASSIGNMENT  reduce using rule 138 (BasicLit -> TrueFalseLit .)
    REM_ASSIGNMENT  reduce using rule 138 (BasicLit -> TrueFalseLit .)
    AND_ASSIGNMENT  reduce using rule 138 (BasicLit -> TrueFalseLit .)
    AND_NOT_ASSIGNMENT reduce using rule 138 (BasicLit -> TrueFalseLit .)
    OR_ASSIGNMENT   reduce using rule 138 (BasicLit -> TrueFalseLit .)
    XOR_ASSIGNMENT  reduce using rule 138 (BasicLit -> TrueFalseLit .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 138 (BasicLit -> TrueFalseLit .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 138 (BasicLit -> TrueFalseLit .)
    ASSIGNMENT      reduce using rule 138 (BasicLit -> TrueFalseLit .)
    LEFT_BRACE      reduce using rule 138 (BasicLit -> TrueFalseLit .)
    RIGHT_BRACE     reduce using rule 138 (BasicLit -> TrueFalseLit .)
    COLON           reduce using rule 138 (BasicLit -> TrueFalseLit .)
    INCREMENT       reduce using rule 138 (BasicLit -> TrueFalseLit .)
    DECREMENT       reduce using rule 138 (BasicLit -> TrueFalseLit .)


state 89

    (139) BasicLit -> ImaginaryLit .

    PERIOD          reduce using rule 139 (BasicLit -> ImaginaryLit .)
    LEFT_BRACKET    reduce using rule 139 (BasicLit -> ImaginaryLit .)
    LEFT_PARENTHESIS reduce using rule 139 (BasicLit -> ImaginaryLit .)
    LOGICAL_OR      reduce using rule 139 (BasicLit -> ImaginaryLit .)
    LOGICAL_AND     reduce using rule 139 (BasicLit -> ImaginaryLit .)
    EQUAL           reduce using rule 139 (BasicLit -> ImaginaryLit .)
    NOT_EQUAL       reduce using rule 139 (BasicLit -> ImaginaryLit .)
    LESS_THAN       reduce using rule 139 (BasicLit -> ImaginaryLit .)
    LESS_THAN_EQUAL reduce using rule 139 (BasicLit -> ImaginaryLit .)
    GREATER_THAN    reduce using rule 139 (BasicLit -> ImaginaryLit .)
    GREATER_THAN_EQUAL reduce using rule 139 (BasicLit -> ImaginaryLit .)
    ADD             reduce using rule 139 (BasicLit -> ImaginaryLit .)
    SUBTRACT        reduce using rule 139 (BasicLit -> ImaginaryLit .)
    OR              reduce using rule 139 (BasicLit -> ImaginaryLit .)
    XOR             reduce using rule 139 (BasicLit -> ImaginaryLit .)
    MULTIPLY        reduce using rule 139 (BasicLit -> ImaginaryLit .)
    QUOTIENT        reduce using rule 139 (BasicLit -> ImaginaryLit .)
    REMAINDER       reduce using rule 139 (BasicLit -> ImaginaryLit .)
    SHIFT_LEFT      reduce using rule 139 (BasicLit -> ImaginaryLit .)
    SHIFT_RIGHT     reduce using rule 139 (BasicLit -> ImaginaryLit .)
    AND             reduce using rule 139 (BasicLit -> ImaginaryLit .)
    AND_NOT         reduce using rule 139 (BasicLit -> ImaginaryLit .)
    COMMA           reduce using rule 139 (BasicLit -> ImaginaryLit .)
    SEMICOLON       reduce using rule 139 (BasicLit -> ImaginaryLit .)
    RIGHT_BRACKET   reduce using rule 139 (BasicLit -> ImaginaryLit .)
    RIGHT_PARENTHESIS reduce using rule 139 (BasicLit -> ImaginaryLit .)
    ADD_ASSIGNMENT  reduce using rule 139 (BasicLit -> ImaginaryLit .)
    SUB_ASSIGNMENT  reduce using rule 139 (BasicLit -> ImaginaryLit .)
    MUL_ASSIGNMENT  reduce using rule 139 (BasicLit -> ImaginaryLit .)
    QUO_ASSIGNMENT  reduce using rule 139 (BasicLit -> ImaginaryLit .)
    REM_ASSIGNMENT  reduce using rule 139 (BasicLit -> ImaginaryLit .)
    AND_ASSIGNMENT  reduce using rule 139 (BasicLit -> ImaginaryLit .)
    AND_NOT_ASSIGNMENT reduce using rule 139 (BasicLit -> ImaginaryLit .)
    OR_ASSIGNMENT   reduce using rule 139 (BasicLit -> ImaginaryLit .)
    XOR_ASSIGNMENT  reduce using rule 139 (BasicLit -> ImaginaryLit .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 139 (BasicLit -> ImaginaryLit .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 139 (BasicLit -> ImaginaryLit .)
    ASSIGNMENT      reduce using rule 139 (BasicLit -> ImaginaryLit .)
    LEFT_BRACE      reduce using rule 139 (BasicLit -> ImaginaryLit .)
    RIGHT_BRACE     reduce using rule 139 (BasicLit -> ImaginaryLit .)
    COLON           reduce using rule 139 (BasicLit -> ImaginaryLit .)
    INCREMENT       reduce using rule 139 (BasicLit -> ImaginaryLit .)
    DECREMENT       reduce using rule 139 (BasicLit -> ImaginaryLit .)


state 90

    (143) IntLit -> INT .

    PERIOD          reduce using rule 143 (IntLit -> INT .)
    LEFT_BRACKET    reduce using rule 143 (IntLit -> INT .)
    LEFT_PARENTHESIS reduce using rule 143 (IntLit -> INT .)
    LOGICAL_OR      reduce using rule 143 (IntLit -> INT .)
    LOGICAL_AND     reduce using rule 143 (IntLit -> INT .)
    EQUAL           reduce using rule 143 (IntLit -> INT .)
    NOT_EQUAL       reduce using rule 143 (IntLit -> INT .)
    LESS_THAN       reduce using rule 143 (IntLit -> INT .)
    LESS_THAN_EQUAL reduce using rule 143 (IntLit -> INT .)
    GREATER_THAN    reduce using rule 143 (IntLit -> INT .)
    GREATER_THAN_EQUAL reduce using rule 143 (IntLit -> INT .)
    ADD             reduce using rule 143 (IntLit -> INT .)
    SUBTRACT        reduce using rule 143 (IntLit -> INT .)
    OR              reduce using rule 143 (IntLit -> INT .)
    XOR             reduce using rule 143 (IntLit -> INT .)
    MULTIPLY        reduce using rule 143 (IntLit -> INT .)
    QUOTIENT        reduce using rule 143 (IntLit -> INT .)
    REMAINDER       reduce using rule 143 (IntLit -> INT .)
    SHIFT_LEFT      reduce using rule 143 (IntLit -> INT .)
    SHIFT_RIGHT     reduce using rule 143 (IntLit -> INT .)
    AND             reduce using rule 143 (IntLit -> INT .)
    AND_NOT         reduce using rule 143 (IntLit -> INT .)
    COMMA           reduce using rule 143 (IntLit -> INT .)
    SEMICOLON       reduce using rule 143 (IntLit -> INT .)
    RIGHT_BRACKET   reduce using rule 143 (IntLit -> INT .)
    RIGHT_PARENTHESIS reduce using rule 143 (IntLit -> INT .)
    ADD_ASSIGNMENT  reduce using rule 143 (IntLit -> INT .)
    SUB_ASSIGNMENT  reduce using rule 143 (IntLit -> INT .)
    MUL_ASSIGNMENT  reduce using rule 143 (IntLit -> INT .)
    QUO_ASSIGNMENT  reduce using rule 143 (IntLit -> INT .)
    REM_ASSIGNMENT  reduce using rule 143 (IntLit -> INT .)
    AND_ASSIGNMENT  reduce using rule 143 (IntLit -> INT .)
    AND_NOT_ASSIGNMENT reduce using rule 143 (IntLit -> INT .)
    OR_ASSIGNMENT   reduce using rule 143 (IntLit -> INT .)
    XOR_ASSIGNMENT  reduce using rule 143 (IntLit -> INT .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 143 (IntLit -> INT .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 143 (IntLit -> INT .)
    ASSIGNMENT      reduce using rule 143 (IntLit -> INT .)
    LEFT_BRACE      reduce using rule 143 (IntLit -> INT .)
    RIGHT_BRACE     reduce using rule 143 (IntLit -> INT .)
    COLON           reduce using rule 143 (IntLit -> INT .)
    INCREMENT       reduce using rule 143 (IntLit -> INT .)
    DECREMENT       reduce using rule 143 (IntLit -> INT .)


state 91

    (144) FloatLit -> FLOAT .

    PERIOD          reduce using rule 144 (FloatLit -> FLOAT .)
    LEFT_BRACKET    reduce using rule 144 (FloatLit -> FLOAT .)
    LEFT_PARENTHESIS reduce using rule 144 (FloatLit -> FLOAT .)
    LOGICAL_OR      reduce using rule 144 (FloatLit -> FLOAT .)
    LOGICAL_AND     reduce using rule 144 (FloatLit -> FLOAT .)
    EQUAL           reduce using rule 144 (FloatLit -> FLOAT .)
    NOT_EQUAL       reduce using rule 144 (FloatLit -> FLOAT .)
    LESS_THAN       reduce using rule 144 (FloatLit -> FLOAT .)
    LESS_THAN_EQUAL reduce using rule 144 (FloatLit -> FLOAT .)
    GREATER_THAN    reduce using rule 144 (FloatLit -> FLOAT .)
    GREATER_THAN_EQUAL reduce using rule 144 (FloatLit -> FLOAT .)
    ADD             reduce using rule 144 (FloatLit -> FLOAT .)
    SUBTRACT        reduce using rule 144 (FloatLit -> FLOAT .)
    OR              reduce using rule 144 (FloatLit -> FLOAT .)
    XOR             reduce using rule 144 (FloatLit -> FLOAT .)
    MULTIPLY        reduce using rule 144 (FloatLit -> FLOAT .)
    QUOTIENT        reduce using rule 144 (FloatLit -> FLOAT .)
    REMAINDER       reduce using rule 144 (FloatLit -> FLOAT .)
    SHIFT_LEFT      reduce using rule 144 (FloatLit -> FLOAT .)
    SHIFT_RIGHT     reduce using rule 144 (FloatLit -> FLOAT .)
    AND             reduce using rule 144 (FloatLit -> FLOAT .)
    AND_NOT         reduce using rule 144 (FloatLit -> FLOAT .)
    COMMA           reduce using rule 144 (FloatLit -> FLOAT .)
    SEMICOLON       reduce using rule 144 (FloatLit -> FLOAT .)
    RIGHT_BRACKET   reduce using rule 144 (FloatLit -> FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 144 (FloatLit -> FLOAT .)
    ADD_ASSIGNMENT  reduce using rule 144 (FloatLit -> FLOAT .)
    SUB_ASSIGNMENT  reduce using rule 144 (FloatLit -> FLOAT .)
    MUL_ASSIGNMENT  reduce using rule 144 (FloatLit -> FLOAT .)
    QUO_ASSIGNMENT  reduce using rule 144 (FloatLit -> FLOAT .)
    REM_ASSIGNMENT  reduce using rule 144 (FloatLit -> FLOAT .)
    AND_ASSIGNMENT  reduce using rule 144 (FloatLit -> FLOAT .)
    AND_NOT_ASSIGNMENT reduce using rule 144 (FloatLit -> FLOAT .)
    OR_ASSIGNMENT   reduce using rule 144 (FloatLit -> FLOAT .)
    XOR_ASSIGNMENT  reduce using rule 144 (FloatLit -> FLOAT .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 144 (FloatLit -> FLOAT .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 144 (FloatLit -> FLOAT .)
    ASSIGNMENT      reduce using rule 144 (FloatLit -> FLOAT .)
    LEFT_BRACE      reduce using rule 144 (FloatLit -> FLOAT .)
    RIGHT_BRACE     reduce using rule 144 (FloatLit -> FLOAT .)
    COLON           reduce using rule 144 (FloatLit -> FLOAT .)
    INCREMENT       reduce using rule 144 (FloatLit -> FLOAT .)
    DECREMENT       reduce using rule 144 (FloatLit -> FLOAT .)


state 92

    (145) RuneLit -> RUNE .

    PERIOD          reduce using rule 145 (RuneLit -> RUNE .)
    LEFT_BRACKET    reduce using rule 145 (RuneLit -> RUNE .)
    LEFT_PARENTHESIS reduce using rule 145 (RuneLit -> RUNE .)
    LOGICAL_OR      reduce using rule 145 (RuneLit -> RUNE .)
    LOGICAL_AND     reduce using rule 145 (RuneLit -> RUNE .)
    EQUAL           reduce using rule 145 (RuneLit -> RUNE .)
    NOT_EQUAL       reduce using rule 145 (RuneLit -> RUNE .)
    LESS_THAN       reduce using rule 145 (RuneLit -> RUNE .)
    LESS_THAN_EQUAL reduce using rule 145 (RuneLit -> RUNE .)
    GREATER_THAN    reduce using rule 145 (RuneLit -> RUNE .)
    GREATER_THAN_EQUAL reduce using rule 145 (RuneLit -> RUNE .)
    ADD             reduce using rule 145 (RuneLit -> RUNE .)
    SUBTRACT        reduce using rule 145 (RuneLit -> RUNE .)
    OR              reduce using rule 145 (RuneLit -> RUNE .)
    XOR             reduce using rule 145 (RuneLit -> RUNE .)
    MULTIPLY        reduce using rule 145 (RuneLit -> RUNE .)
    QUOTIENT        reduce using rule 145 (RuneLit -> RUNE .)
    REMAINDER       reduce using rule 145 (RuneLit -> RUNE .)
    SHIFT_LEFT      reduce using rule 145 (RuneLit -> RUNE .)
    SHIFT_RIGHT     reduce using rule 145 (RuneLit -> RUNE .)
    AND             reduce using rule 145 (RuneLit -> RUNE .)
    AND_NOT         reduce using rule 145 (RuneLit -> RUNE .)
    COMMA           reduce using rule 145 (RuneLit -> RUNE .)
    SEMICOLON       reduce using rule 145 (RuneLit -> RUNE .)
    RIGHT_BRACKET   reduce using rule 145 (RuneLit -> RUNE .)
    RIGHT_PARENTHESIS reduce using rule 145 (RuneLit -> RUNE .)
    ADD_ASSIGNMENT  reduce using rule 145 (RuneLit -> RUNE .)
    SUB_ASSIGNMENT  reduce using rule 145 (RuneLit -> RUNE .)
    MUL_ASSIGNMENT  reduce using rule 145 (RuneLit -> RUNE .)
    QUO_ASSIGNMENT  reduce using rule 145 (RuneLit -> RUNE .)
    REM_ASSIGNMENT  reduce using rule 145 (RuneLit -> RUNE .)
    AND_ASSIGNMENT  reduce using rule 145 (RuneLit -> RUNE .)
    AND_NOT_ASSIGNMENT reduce using rule 145 (RuneLit -> RUNE .)
    OR_ASSIGNMENT   reduce using rule 145 (RuneLit -> RUNE .)
    XOR_ASSIGNMENT  reduce using rule 145 (RuneLit -> RUNE .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 145 (RuneLit -> RUNE .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 145 (RuneLit -> RUNE .)
    ASSIGNMENT      reduce using rule 145 (RuneLit -> RUNE .)
    LEFT_BRACE      reduce using rule 145 (RuneLit -> RUNE .)
    RIGHT_BRACE     reduce using rule 145 (RuneLit -> RUNE .)
    COLON           reduce using rule 145 (RuneLit -> RUNE .)
    INCREMENT       reduce using rule 145 (RuneLit -> RUNE .)
    DECREMENT       reduce using rule 145 (RuneLit -> RUNE .)


state 93

    (146) StringLit -> STRING .

    PERIOD          reduce using rule 146 (StringLit -> STRING .)
    LEFT_BRACKET    reduce using rule 146 (StringLit -> STRING .)
    LEFT_PARENTHESIS reduce using rule 146 (StringLit -> STRING .)
    LOGICAL_OR      reduce using rule 146 (StringLit -> STRING .)
    LOGICAL_AND     reduce using rule 146 (StringLit -> STRING .)
    EQUAL           reduce using rule 146 (StringLit -> STRING .)
    NOT_EQUAL       reduce using rule 146 (StringLit -> STRING .)
    LESS_THAN       reduce using rule 146 (StringLit -> STRING .)
    LESS_THAN_EQUAL reduce using rule 146 (StringLit -> STRING .)
    GREATER_THAN    reduce using rule 146 (StringLit -> STRING .)
    GREATER_THAN_EQUAL reduce using rule 146 (StringLit -> STRING .)
    ADD             reduce using rule 146 (StringLit -> STRING .)
    SUBTRACT        reduce using rule 146 (StringLit -> STRING .)
    OR              reduce using rule 146 (StringLit -> STRING .)
    XOR             reduce using rule 146 (StringLit -> STRING .)
    MULTIPLY        reduce using rule 146 (StringLit -> STRING .)
    QUOTIENT        reduce using rule 146 (StringLit -> STRING .)
    REMAINDER       reduce using rule 146 (StringLit -> STRING .)
    SHIFT_LEFT      reduce using rule 146 (StringLit -> STRING .)
    SHIFT_RIGHT     reduce using rule 146 (StringLit -> STRING .)
    AND             reduce using rule 146 (StringLit -> STRING .)
    AND_NOT         reduce using rule 146 (StringLit -> STRING .)
    COMMA           reduce using rule 146 (StringLit -> STRING .)
    SEMICOLON       reduce using rule 146 (StringLit -> STRING .)
    RIGHT_BRACKET   reduce using rule 146 (StringLit -> STRING .)
    RIGHT_PARENTHESIS reduce using rule 146 (StringLit -> STRING .)
    ADD_ASSIGNMENT  reduce using rule 146 (StringLit -> STRING .)
    SUB_ASSIGNMENT  reduce using rule 146 (StringLit -> STRING .)
    MUL_ASSIGNMENT  reduce using rule 146 (StringLit -> STRING .)
    QUO_ASSIGNMENT  reduce using rule 146 (StringLit -> STRING .)
    REM_ASSIGNMENT  reduce using rule 146 (StringLit -> STRING .)
    AND_ASSIGNMENT  reduce using rule 146 (StringLit -> STRING .)
    AND_NOT_ASSIGNMENT reduce using rule 146 (StringLit -> STRING .)
    OR_ASSIGNMENT   reduce using rule 146 (StringLit -> STRING .)
    XOR_ASSIGNMENT  reduce using rule 146 (StringLit -> STRING .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 146 (StringLit -> STRING .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 146 (StringLit -> STRING .)
    ASSIGNMENT      reduce using rule 146 (StringLit -> STRING .)
    LEFT_BRACE      reduce using rule 146 (StringLit -> STRING .)
    RIGHT_BRACE     reduce using rule 146 (StringLit -> STRING .)
    COLON           reduce using rule 146 (StringLit -> STRING .)
    INCREMENT       reduce using rule 146 (StringLit -> STRING .)
    DECREMENT       reduce using rule 146 (StringLit -> STRING .)


state 94

    (141) TrueFalseLit -> TRUE .

    PERIOD          reduce using rule 141 (TrueFalseLit -> TRUE .)
    LEFT_BRACKET    reduce using rule 141 (TrueFalseLit -> TRUE .)
    LEFT_PARENTHESIS reduce using rule 141 (TrueFalseLit -> TRUE .)
    LOGICAL_OR      reduce using rule 141 (TrueFalseLit -> TRUE .)
    LOGICAL_AND     reduce using rule 141 (TrueFalseLit -> TRUE .)
    EQUAL           reduce using rule 141 (TrueFalseLit -> TRUE .)
    NOT_EQUAL       reduce using rule 141 (TrueFalseLit -> TRUE .)
    LESS_THAN       reduce using rule 141 (TrueFalseLit -> TRUE .)
    LESS_THAN_EQUAL reduce using rule 141 (TrueFalseLit -> TRUE .)
    GREATER_THAN    reduce using rule 141 (TrueFalseLit -> TRUE .)
    GREATER_THAN_EQUAL reduce using rule 141 (TrueFalseLit -> TRUE .)
    ADD             reduce using rule 141 (TrueFalseLit -> TRUE .)
    SUBTRACT        reduce using rule 141 (TrueFalseLit -> TRUE .)
    OR              reduce using rule 141 (TrueFalseLit -> TRUE .)
    XOR             reduce using rule 141 (TrueFalseLit -> TRUE .)
    MULTIPLY        reduce using rule 141 (TrueFalseLit -> TRUE .)
    QUOTIENT        reduce using rule 141 (TrueFalseLit -> TRUE .)
    REMAINDER       reduce using rule 141 (TrueFalseLit -> TRUE .)
    SHIFT_LEFT      reduce using rule 141 (TrueFalseLit -> TRUE .)
    SHIFT_RIGHT     reduce using rule 141 (TrueFalseLit -> TRUE .)
    AND             reduce using rule 141 (TrueFalseLit -> TRUE .)
    AND_NOT         reduce using rule 141 (TrueFalseLit -> TRUE .)
    COMMA           reduce using rule 141 (TrueFalseLit -> TRUE .)
    SEMICOLON       reduce using rule 141 (TrueFalseLit -> TRUE .)
    RIGHT_BRACKET   reduce using rule 141 (TrueFalseLit -> TRUE .)
    RIGHT_PARENTHESIS reduce using rule 141 (TrueFalseLit -> TRUE .)
    ADD_ASSIGNMENT  reduce using rule 141 (TrueFalseLit -> TRUE .)
    SUB_ASSIGNMENT  reduce using rule 141 (TrueFalseLit -> TRUE .)
    MUL_ASSIGNMENT  reduce using rule 141 (TrueFalseLit -> TRUE .)
    QUO_ASSIGNMENT  reduce using rule 141 (TrueFalseLit -> TRUE .)
    REM_ASSIGNMENT  reduce using rule 141 (TrueFalseLit -> TRUE .)
    AND_ASSIGNMENT  reduce using rule 141 (TrueFalseLit -> TRUE .)
    AND_NOT_ASSIGNMENT reduce using rule 141 (TrueFalseLit -> TRUE .)
    OR_ASSIGNMENT   reduce using rule 141 (TrueFalseLit -> TRUE .)
    XOR_ASSIGNMENT  reduce using rule 141 (TrueFalseLit -> TRUE .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 141 (TrueFalseLit -> TRUE .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 141 (TrueFalseLit -> TRUE .)
    ASSIGNMENT      reduce using rule 141 (TrueFalseLit -> TRUE .)
    LEFT_BRACE      reduce using rule 141 (TrueFalseLit -> TRUE .)
    RIGHT_BRACE     reduce using rule 141 (TrueFalseLit -> TRUE .)
    COLON           reduce using rule 141 (TrueFalseLit -> TRUE .)
    INCREMENT       reduce using rule 141 (TrueFalseLit -> TRUE .)
    DECREMENT       reduce using rule 141 (TrueFalseLit -> TRUE .)


state 95

    (142) TrueFalseLit -> FALSE .

    PERIOD          reduce using rule 142 (TrueFalseLit -> FALSE .)
    LEFT_BRACKET    reduce using rule 142 (TrueFalseLit -> FALSE .)
    LEFT_PARENTHESIS reduce using rule 142 (TrueFalseLit -> FALSE .)
    LOGICAL_OR      reduce using rule 142 (TrueFalseLit -> FALSE .)
    LOGICAL_AND     reduce using rule 142 (TrueFalseLit -> FALSE .)
    EQUAL           reduce using rule 142 (TrueFalseLit -> FALSE .)
    NOT_EQUAL       reduce using rule 142 (TrueFalseLit -> FALSE .)
    LESS_THAN       reduce using rule 142 (TrueFalseLit -> FALSE .)
    LESS_THAN_EQUAL reduce using rule 142 (TrueFalseLit -> FALSE .)
    GREATER_THAN    reduce using rule 142 (TrueFalseLit -> FALSE .)
    GREATER_THAN_EQUAL reduce using rule 142 (TrueFalseLit -> FALSE .)
    ADD             reduce using rule 142 (TrueFalseLit -> FALSE .)
    SUBTRACT        reduce using rule 142 (TrueFalseLit -> FALSE .)
    OR              reduce using rule 142 (TrueFalseLit -> FALSE .)
    XOR             reduce using rule 142 (TrueFalseLit -> FALSE .)
    MULTIPLY        reduce using rule 142 (TrueFalseLit -> FALSE .)
    QUOTIENT        reduce using rule 142 (TrueFalseLit -> FALSE .)
    REMAINDER       reduce using rule 142 (TrueFalseLit -> FALSE .)
    SHIFT_LEFT      reduce using rule 142 (TrueFalseLit -> FALSE .)
    SHIFT_RIGHT     reduce using rule 142 (TrueFalseLit -> FALSE .)
    AND             reduce using rule 142 (TrueFalseLit -> FALSE .)
    AND_NOT         reduce using rule 142 (TrueFalseLit -> FALSE .)
    COMMA           reduce using rule 142 (TrueFalseLit -> FALSE .)
    SEMICOLON       reduce using rule 142 (TrueFalseLit -> FALSE .)
    RIGHT_BRACKET   reduce using rule 142 (TrueFalseLit -> FALSE .)
    RIGHT_PARENTHESIS reduce using rule 142 (TrueFalseLit -> FALSE .)
    ADD_ASSIGNMENT  reduce using rule 142 (TrueFalseLit -> FALSE .)
    SUB_ASSIGNMENT  reduce using rule 142 (TrueFalseLit -> FALSE .)
    MUL_ASSIGNMENT  reduce using rule 142 (TrueFalseLit -> FALSE .)
    QUO_ASSIGNMENT  reduce using rule 142 (TrueFalseLit -> FALSE .)
    REM_ASSIGNMENT  reduce using rule 142 (TrueFalseLit -> FALSE .)
    AND_ASSIGNMENT  reduce using rule 142 (TrueFalseLit -> FALSE .)
    AND_NOT_ASSIGNMENT reduce using rule 142 (TrueFalseLit -> FALSE .)
    OR_ASSIGNMENT   reduce using rule 142 (TrueFalseLit -> FALSE .)
    XOR_ASSIGNMENT  reduce using rule 142 (TrueFalseLit -> FALSE .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 142 (TrueFalseLit -> FALSE .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 142 (TrueFalseLit -> FALSE .)
    ASSIGNMENT      reduce using rule 142 (TrueFalseLit -> FALSE .)
    LEFT_BRACE      reduce using rule 142 (TrueFalseLit -> FALSE .)
    RIGHT_BRACE     reduce using rule 142 (TrueFalseLit -> FALSE .)
    COLON           reduce using rule 142 (TrueFalseLit -> FALSE .)
    INCREMENT       reduce using rule 142 (TrueFalseLit -> FALSE .)
    DECREMENT       reduce using rule 142 (TrueFalseLit -> FALSE .)


state 96

    (140) ImaginaryLit -> IMAGINARY .

    PERIOD          reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    LEFT_BRACKET    reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    LEFT_PARENTHESIS reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    LOGICAL_OR      reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    LOGICAL_AND     reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    EQUAL           reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    NOT_EQUAL       reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    LESS_THAN       reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    LESS_THAN_EQUAL reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    GREATER_THAN    reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    GREATER_THAN_EQUAL reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    ADD             reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    SUBTRACT        reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    OR              reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    XOR             reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    MULTIPLY        reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    QUOTIENT        reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    REMAINDER       reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    SHIFT_LEFT      reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    SHIFT_RIGHT     reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    AND             reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    AND_NOT         reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    COMMA           reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    SEMICOLON       reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    RIGHT_BRACKET   reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    RIGHT_PARENTHESIS reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    ADD_ASSIGNMENT  reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    SUB_ASSIGNMENT  reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    MUL_ASSIGNMENT  reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    QUO_ASSIGNMENT  reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    REM_ASSIGNMENT  reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    AND_ASSIGNMENT  reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    AND_NOT_ASSIGNMENT reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    OR_ASSIGNMENT   reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    XOR_ASSIGNMENT  reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    ASSIGNMENT      reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    LEFT_BRACE      reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    RIGHT_BRACE     reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    COLON           reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    INCREMENT       reduce using rule 140 (ImaginaryLit -> IMAGINARY .)
    DECREMENT       reduce using rule 140 (ImaginaryLit -> IMAGINARY .)


state 97

    (36) ConstSpec -> IdentifierList IDENT ASSIGNMENT . ExpressionList
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ExpressionList                 shift and go to state 150
    Expression                     shift and go to state 68
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 98

    (38) IdentifierList -> IDENT COMMA IdentifierList .

    ASSIGNMENT      reduce using rule 38 (IdentifierList -> IDENT COMMA IdentifierList .)
    IDENT           reduce using rule 38 (IdentifierList -> IDENT COMMA IdentifierList .)
    SEMICOLON       reduce using rule 38 (IdentifierList -> IDENT COMMA IdentifierList .)
    LEFT_PARENTHESIS reduce using rule 38 (IdentifierList -> IDENT COMMA IdentifierList .)
    LEFT_BRACKET    reduce using rule 38 (IdentifierList -> IDENT COMMA IdentifierList .)
    MULTIPLY        reduce using rule 38 (IdentifierList -> IDENT COMMA IdentifierList .)
    DEFINE          reduce using rule 38 (IdentifierList -> IDENT COMMA IdentifierList .)
    STRUCT          reduce using rule 38 (IdentifierList -> IDENT COMMA IdentifierList .)


state 99

    (62) StructType -> STRUCT OpenStruct . LEFT_BRACE FieldDeclStar RIGHT_BRACE CloseStruct

    LEFT_BRACE      shift and go to state 151


state 100

    (43) VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS .

    SEMICOLON       reduce using rule 43 (VarDecl -> VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS .)


state 101

    (44) VarSpecStar -> VarSpec SEMICOLON . VarSpecStar
    (44) VarSpecStar -> . VarSpec SEMICOLON VarSpecStar
    (45) VarSpecStar -> .
    (46) VarSpec -> . IdentifierList Type
    (47) VarSpec -> . IdentifierList Type ASSIGNMENT Expression
    (48) VarSpec -> . IdentifierList IDENT ASSIGNMENT ExpressionList
    (49) VarSpec -> . IdentifierList IDENT
    (50) VarSpec -> . IdentifierList ASSIGNMENT ExpressionList
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList

    RIGHT_PARENTHESIS reduce using rule 45 (VarSpecStar -> .)
    IDENT           shift and go to state 33

    VarSpec                        shift and go to state 50
    VarSpecStar                    shift and go to state 152
    IdentifierList                 shift and go to state 38

state 102

    (47) VarSpec -> IdentifierList Type ASSIGNMENT . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 153
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 103

    (50) VarSpec -> IdentifierList ASSIGNMENT ExpressionList .
    (40) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 50 (VarSpec -> IdentifierList ASSIGNMENT ExpressionList .)
    COMMA           shift and go to state 122


state 104

    (48) VarSpec -> IdentifierList IDENT ASSIGNMENT . ExpressionList
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ExpressionList                 shift and go to state 154
    Expression                     shift and go to state 68
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 105

    (55) Type -> LEFT_PARENTHESIS IDENT . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 155


state 106

    (57) Type -> LEFT_PARENTHESIS Type . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 156


state 107

    (60) ArrayType -> LEFT_BRACKET INT . RIGHT_BRACKET Type
    (61) ArrayType -> LEFT_BRACKET INT . RIGHT_BRACKET IDENT

    RIGHT_BRACKET   shift and go to state 157


state 108

    (71) PointerType -> MULTIPLY Type .

    ASSIGNMENT      reduce using rule 71 (PointerType -> MULTIPLY Type .)
    SEMICOLON       reduce using rule 71 (PointerType -> MULTIPLY Type .)
    RIGHT_PARENTHESIS reduce using rule 71 (PointerType -> MULTIPLY Type .)
    COMMA           reduce using rule 71 (PointerType -> MULTIPLY Type .)


state 109

    (72) PointerType -> MULTIPLY IDENT .

    ASSIGNMENT      reduce using rule 72 (PointerType -> MULTIPLY IDENT .)
    SEMICOLON       reduce using rule 72 (PointerType -> MULTIPLY IDENT .)
    RIGHT_PARENTHESIS reduce using rule 72 (PointerType -> MULTIPLY IDENT .)
    COMMA           reduce using rule 72 (PointerType -> MULTIPLY IDENT .)


state 110

    (19) ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON .

    RIGHT_PARENTHESIS reduce using rule 19 (ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON .)
    PERIOD          reduce using rule 19 (ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON .)
    IDENT           reduce using rule 19 (ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON .)
    STRING          reduce using rule 19 (ImportSpecSemicolonStar -> ImportSpecSemicolonStar ImportSpec SEMICOLON .)


state 111

    (52) FunctionDecl -> FUNCTION FunctionName OpenScope Signature Block . CloseScope
    (3) CloseScope -> .

    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 158

state 112

    (53) FunctionDecl -> FUNCTION FunctionName OpenScope Signature CloseScope .

    SEMICOLON       reduce using rule 53 (FunctionDecl -> FUNCTION FunctionName OpenScope Signature CloseScope .)


state 113

    (91) Block -> LEFT_BRACE . StatementList RIGHT_BRACE
    (92) StatementList -> . StatementList Statement SEMICOLON
    (93) StatementList -> .

    RIGHT_BRACE     reduce using rule 93 (StatementList -> .)
    RETURN          reduce using rule 93 (StatementList -> .)
    BREAK           reduce using rule 93 (StatementList -> .)
    CONTINUE        reduce using rule 93 (StatementList -> .)
    IF              reduce using rule 93 (StatementList -> .)
    SWITCH          reduce using rule 93 (StatementList -> .)
    FOR             reduce using rule 93 (StatementList -> .)
    CONST           reduce using rule 93 (StatementList -> .)
    TYPE            reduce using rule 93 (StatementList -> .)
    VARIABLE        reduce using rule 93 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 93 (StatementList -> .)
    IDENT           reduce using rule 93 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 93 (StatementList -> .)
    ADD             reduce using rule 93 (StatementList -> .)
    SUBTRACT        reduce using rule 93 (StatementList -> .)
    NOT             reduce using rule 93 (StatementList -> .)
    XOR             reduce using rule 93 (StatementList -> .)
    MULTIPLY        reduce using rule 93 (StatementList -> .)
    AND             reduce using rule 93 (StatementList -> .)
    ARROW           reduce using rule 93 (StatementList -> .)
    INT             reduce using rule 93 (StatementList -> .)
    FLOAT           reduce using rule 93 (StatementList -> .)
    RUNE            reduce using rule 93 (StatementList -> .)
    STRING          reduce using rule 93 (StatementList -> .)
    TRUE            reduce using rule 93 (StatementList -> .)
    FALSE           reduce using rule 93 (StatementList -> .)
    IMAGINARY       reduce using rule 93 (StatementList -> .)
    SEMICOLON       reduce using rule 93 (StatementList -> .)
    LEFT_BRACE      reduce using rule 93 (StatementList -> .)

    StatementList                  shift and go to state 159

state 114

    (73) Signature -> Parameters Result .

    LEFT_BRACE      reduce using rule 73 (Signature -> Parameters Result .)
    SEMICOLON       reduce using rule 73 (Signature -> Parameters Result .)


state 115

    (74) Result -> LEFT_PARENTHESIS . TypeList RIGHT_PARENTHESIS
    (76) TypeList -> . TypeList COMMA IDENT
    (77) TypeList -> . TypeList COMMA Type
    (78) TypeList -> . IDENT
    (79) TypeList -> . Type
    (55) Type -> . LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
    (56) Type -> . TypeLit
    (57) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (58) TypeLit -> . ArrayType
    (59) TypeLit -> . PointerType
    (60) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET Type
    (61) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET IDENT
    (71) PointerType -> . MULTIPLY Type
    (72) PointerType -> . MULTIPLY IDENT

    IDENT           shift and go to state 161
    LEFT_PARENTHESIS shift and go to state 54
    LEFT_BRACKET    shift and go to state 58
    MULTIPLY        shift and go to state 59

    TypeList                       shift and go to state 160
    Type                           shift and go to state 162
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 56
    PointerType                    shift and go to state 57

state 116

    (80) Parameters -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    LEFT_PARENTHESIS reduce using rule 80 (Parameters -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 80 (Parameters -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 80 (Parameters -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)


state 117

    (81) Parameters -> LEFT_PARENTHESIS ParameterList . RIGHT_PARENTHESIS
    (82) Parameters -> LEFT_PARENTHESIS ParameterList . COMMA RIGHT_PARENTHESIS
    (84) ParameterList -> ParameterList . COMMA ParameterDecl

    RIGHT_PARENTHESIS shift and go to state 163
    COMMA           shift and go to state 164


state 118

    (83) ParameterList -> ParameterDecl .

    RIGHT_PARENTHESIS reduce using rule 83 (ParameterList -> ParameterDecl .)
    COMMA           reduce using rule 83 (ParameterList -> ParameterDecl .)


state 119

    (85) ParameterDecl -> ParaIdentList . Type
    (86) ParameterDecl -> ParaIdentList . IDENT
    (90) ParaIdentList -> ParaIdentList . COMMA IDENT
    (55) Type -> . LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
    (56) Type -> . TypeLit
    (57) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (58) TypeLit -> . ArrayType
    (59) TypeLit -> . PointerType
    (60) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET Type
    (61) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET IDENT
    (71) PointerType -> . MULTIPLY Type
    (72) PointerType -> . MULTIPLY IDENT

    IDENT           shift and go to state 166
    COMMA           shift and go to state 167
    LEFT_PARENTHESIS shift and go to state 54
    LEFT_BRACKET    shift and go to state 58
    MULTIPLY        shift and go to state 59

    Type                           shift and go to state 165
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 56
    PointerType                    shift and go to state 57

state 120

    (87) ParameterDecl -> IDENT . IDENT
    (88) ParameterDecl -> IDENT . Type
    (89) ParaIdentList -> IDENT . COMMA IDENT
    (55) Type -> . LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
    (56) Type -> . TypeLit
    (57) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (58) TypeLit -> . ArrayType
    (59) TypeLit -> . PointerType
    (60) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET Type
    (61) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET IDENT
    (71) PointerType -> . MULTIPLY Type
    (72) PointerType -> . MULTIPLY IDENT

    IDENT           shift and go to state 168
    COMMA           shift and go to state 170
    LEFT_PARENTHESIS shift and go to state 54
    LEFT_BRACKET    shift and go to state 58
    MULTIPLY        shift and go to state 59

    Type                           shift and go to state 169
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 56
    PointerType                    shift and go to state 57

state 121

    (32) ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON .

    RIGHT_PARENTHESIS reduce using rule 32 (ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON .)
    IDENT           reduce using rule 32 (ConstSpecStar -> ConstSpecStar ConstSpec SEMICOLON .)


state 122

    (40) ExpressionList -> ExpressionList COMMA . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 171
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 123

    (95) Expression -> Expression LOGICAL_OR . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 172
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 124

    (96) Expression -> Expression LOGICAL_AND . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 173
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 125

    (97) Expression -> Expression EQUAL . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 174
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 126

    (98) Expression -> Expression NOT_EQUAL . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 175
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 127

    (99) Expression -> Expression LESS_THAN . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 176
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 128

    (100) Expression -> Expression LESS_THAN_EQUAL . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 177
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 129

    (101) Expression -> Expression GREATER_THAN . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 178
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 130

    (102) Expression -> Expression GREATER_THAN_EQUAL . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 179
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 131

    (103) Expression -> Expression ADD . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 180
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 132

    (104) Expression -> Expression SUBTRACT . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 181
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 133

    (105) Expression -> Expression OR . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 182
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 134

    (106) Expression -> Expression XOR . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 183
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 135

    (107) Expression -> Expression MULTIPLY . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 184
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 136

    (108) Expression -> Expression QUOTIENT . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 185
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 137

    (109) Expression -> Expression REMAINDER . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 186
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 138

    (110) Expression -> Expression SHIFT_LEFT . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 187
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 139

    (111) Expression -> Expression SHIFT_RIGHT . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 188
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 140

    (112) Expression -> Expression AND . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 189
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 141

    (113) Expression -> Expression AND_NOT . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 190
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 142

    (41) ExpressionList -> LEFT_BRACKET Expression . RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    RIGHT_BRACKET   shift and go to state 191
    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141


state 143

    (126) PrimaryExpr -> PrimaryExpr Index .

    PERIOD          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LEFT_BRACKET    reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LEFT_PARENTHESIS reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LOGICAL_OR      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LOGICAL_AND     reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    EQUAL           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    NOT_EQUAL       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LESS_THAN       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LESS_THAN_EQUAL reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    GREATER_THAN    reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    GREATER_THAN_EQUAL reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SUBTRACT        reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    MULTIPLY        reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    QUOTIENT        reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    REMAINDER       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SHIFT_LEFT      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SHIFT_RIGHT     reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    RIGHT_BRACKET   reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    RIGHT_PARENTHESIS reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    ADD_ASSIGNMENT  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SUB_ASSIGNMENT  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    MUL_ASSIGNMENT  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    QUO_ASSIGNMENT  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    REM_ASSIGNMENT  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    AND_ASSIGNMENT  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT_ASSIGNMENT reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    OR_ASSIGNMENT   reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    XOR_ASSIGNMENT  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGNMENT      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    LEFT_BRACE      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    RIGHT_BRACE     reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    INCREMENT       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)
    DECREMENT       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Index .)


state 144

    (127) PrimaryExpr -> PrimaryExpr PERIOD . IDENT

    IDENT           shift and go to state 192


state 145

    (128) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEFT_BRACKET    reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEFT_PARENTHESIS reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOGICAL_OR      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOGICAL_AND     reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUAL           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    NOT_EQUAL       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS_THAN       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESS_THAN_EQUAL reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREATER_THAN    reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREATER_THAN_EQUAL reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUBTRACT        reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MULTIPLY        reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUOTIENT        reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    REMAINDER       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHIFT_LEFT      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHIFT_RIGHT     reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    RIGHT_BRACKET   reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    RIGHT_PARENTHESIS reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD_ASSIGNMENT  reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB_ASSIGNMENT  reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL_ASSIGNMENT  reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO_ASSIGNMENT  reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM_ASSIGNMENT  reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_ASSIGNMENT  reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT_ASSIGNMENT reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGNMENT   reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGNMENT  reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGNMENT      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEFT_BRACE      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    RIGHT_BRACE     reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    INCREMENT       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)
    DECREMENT       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Arguments .)


state 146

    (129) Index -> LEFT_BRACKET . Expression RIGHT_BRACKET
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 193
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 147

    (130) Arguments -> LEFT_PARENTHESIS . RIGHT_PARENTHESIS
    (131) Arguments -> LEFT_PARENTHESIS . ExpressionList RIGHT_PARENTHESIS
    (132) Arguments -> LEFT_PARENTHESIS . ExpressionList COMMA RIGHT_PARENTHESIS
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    RIGHT_PARENTHESIS shift and go to state 194
    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ExpressionList                 shift and go to state 195
    Expression                     shift and go to state 68
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 148

    (115) UnaryExpr -> unary_op UnaryExpr .

    LOGICAL_OR      reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    LOGICAL_AND     reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    EQUAL           reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    NOT_EQUAL       reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    LESS_THAN       reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    LESS_THAN_EQUAL reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    GREATER_THAN    reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    GREATER_THAN_EQUAL reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    ADD             reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    SUBTRACT        reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    OR              reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    XOR             reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    MULTIPLY        reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    QUOTIENT        reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    REMAINDER       reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    SHIFT_LEFT      reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    SHIFT_RIGHT     reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    AND             reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    AND_NOT         reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    COMMA           reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    SEMICOLON       reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    RIGHT_BRACKET   reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    RIGHT_PARENTHESIS reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    ADD_ASSIGNMENT  reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    SUB_ASSIGNMENT  reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    MUL_ASSIGNMENT  reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    QUO_ASSIGNMENT  reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    REM_ASSIGNMENT  reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    AND_ASSIGNMENT  reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    AND_NOT_ASSIGNMENT reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    OR_ASSIGNMENT   reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    XOR_ASSIGNMENT  reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    ASSIGNMENT      reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    LEFT_BRACE      reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    RIGHT_BRACE     reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    COLON           reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    INCREMENT       reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)
    DECREMENT       reduce using rule 115 (UnaryExpr -> unary_op UnaryExpr .)


state 149

    (124) PrimaryExpr -> LEFT_PARENTHESIS Expression . RIGHT_PARENTHESIS
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    RIGHT_PARENTHESIS shift and go to state 196
    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141


state 150

    (36) ConstSpec -> IdentifierList IDENT ASSIGNMENT ExpressionList .
    (40) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 36 (ConstSpec -> IdentifierList IDENT ASSIGNMENT ExpressionList .)
    COMMA           shift and go to state 122


state 151

    (62) StructType -> STRUCT OpenStruct LEFT_BRACE . FieldDeclStar RIGHT_BRACE CloseStruct
    (63) FieldDeclStar -> . FieldDeclStar FieldDecl SEMICOLON
    (64) FieldDeclStar -> .

    RIGHT_BRACE     reduce using rule 64 (FieldDeclStar -> .)
    IDENT           reduce using rule 64 (FieldDeclStar -> .)

    FieldDeclStar                  shift and go to state 197

state 152

    (44) VarSpecStar -> VarSpec SEMICOLON VarSpecStar .

    RIGHT_PARENTHESIS reduce using rule 44 (VarSpecStar -> VarSpec SEMICOLON VarSpecStar .)


state 153

    (47) VarSpec -> IdentifierList Type ASSIGNMENT Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    SEMICOLON       reduce using rule 47 (VarSpec -> IdentifierList Type ASSIGNMENT Expression .)
    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141


state 154

    (48) VarSpec -> IdentifierList IDENT ASSIGNMENT ExpressionList .
    (40) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 48 (VarSpec -> IdentifierList IDENT ASSIGNMENT ExpressionList .)
    COMMA           shift and go to state 122


state 155

    (55) Type -> LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS .

    ASSIGNMENT      reduce using rule 55 (Type -> LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 55 (Type -> LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 55 (Type -> LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 55 (Type -> LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS .)


state 156

    (57) Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .

    ASSIGNMENT      reduce using rule 57 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 57 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 57 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 57 (Type -> LEFT_PARENTHESIS Type RIGHT_PARENTHESIS .)


state 157

    (60) ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET . Type
    (61) ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET . IDENT
    (55) Type -> . LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
    (56) Type -> . TypeLit
    (57) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (58) TypeLit -> . ArrayType
    (59) TypeLit -> . PointerType
    (60) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET Type
    (61) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET IDENT
    (71) PointerType -> . MULTIPLY Type
    (72) PointerType -> . MULTIPLY IDENT

    IDENT           shift and go to state 199
    LEFT_PARENTHESIS shift and go to state 54
    LEFT_BRACKET    shift and go to state 58
    MULTIPLY        shift and go to state 59

    Type                           shift and go to state 198
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 56
    PointerType                    shift and go to state 57

state 158

    (52) FunctionDecl -> FUNCTION FunctionName OpenScope Signature Block CloseScope .

    SEMICOLON       reduce using rule 52 (FunctionDecl -> FUNCTION FunctionName OpenScope Signature Block CloseScope .)


state 159

    (91) Block -> LEFT_BRACE StatementList . RIGHT_BRACE
    (92) StatementList -> StatementList . Statement SEMICOLON
    (147) Statement -> . Declaration
    (148) Statement -> . SimpleStmt
    (149) Statement -> . ReturnStmt
    (150) Statement -> . BreakStmt
    (151) Statement -> . ContinueStmt
    (152) Statement -> . OpenScope Block CloseScope
    (153) Statement -> . IfStmt
    (154) Statement -> . SwitchStmt
    (155) Statement -> . ForStmt
    (25) Declaration -> . ConstDecl
    (26) Declaration -> . StructDecl
    (27) Declaration -> . VarDecl
    (156) SimpleStmt -> . Expression
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (160) SimpleStmt -> .
    (196) ReturnStmt -> . RETURN ExpressionList
    (197) ReturnStmt -> . RETURN
    (198) BreakStmt -> . BREAK IDENT
    (199) BreakStmt -> . BREAK
    (200) ContinueStmt -> . CONTINUE IDENT
    (201) ContinueStmt -> . CONTINUE
    (2) OpenScope -> .
    (176) IfStmt -> . IF OpenScope Expression Block CloseScope
    (177) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope
    (178) IfStmt -> . IF OpenScope Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (179) IfStmt -> . IF OpenScope Expression Block CloseScope ELSE OpenScope Block CloseScope
    (180) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope
    (182) SwitchStmt -> . SWITCH LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (183) SwitchStmt -> . SWITCH SimpleStmt SEMICOLON LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (184) SwitchStmt -> . SWITCH SimpleStmt SEMICOLON ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (185) SwitchStmt -> . SWITCH ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (191) ForStmt -> . FOR OpenScope OpenFor ForClause Block CloseFor CloseScope
    (192) ForStmt -> . FOR OpenScope OpenFor Expression Block CloseFor CloseScope
    (193) ForStmt -> . FOR OpenScope OpenFor Block CloseFor CloseScope
    (30) ConstDecl -> . CONST ConstSpec
    (31) ConstDecl -> . CONST LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS
    (28) StructDecl -> . TYPE StructName StructType
    (42) VarDecl -> . VARIABLE VarSpec
    (43) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (161) IncDecStmt -> . Expression INCREMENT
    (162) IncDecStmt -> . Expression DECREMENT
    (163) Assignment -> . ExpressionList assign_op ExpressionList
    (51) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    RIGHT_BRACE     shift and go to state 200
    SEMICOLON       reduce using rule 160 (SimpleStmt -> .)
    RETURN          shift and go to state 215
    BREAK           shift and go to state 217
    CONTINUE        shift and go to state 219
    LEFT_BRACE      reduce using rule 2 (OpenScope -> .)
    IF              shift and go to state 220
    SWITCH          shift and go to state 221
    FOR             shift and go to state 222
    CONST           shift and go to state 17
    TYPE            shift and go to state 18
    VARIABLE        shift and go to state 19
    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 218
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Statement                      shift and go to state 201
    Declaration                    shift and go to state 202
    SimpleStmt                     shift and go to state 203
    ReturnStmt                     shift and go to state 204
    BreakStmt                      shift and go to state 205
    ContinueStmt                   shift and go to state 206
    OpenScope                      shift and go to state 207
    IfStmt                         shift and go to state 208
    SwitchStmt                     shift and go to state 209
    ForStmt                        shift and go to state 210
    ConstDecl                      shift and go to state 13
    StructDecl                     shift and go to state 14
    VarDecl                        shift and go to state 15
    Expression                     shift and go to state 211
    IncDecStmt                     shift and go to state 212
    Assignment                     shift and go to state 213
    ShortVarDecl                   shift and go to state 214
    ExpressionList                 shift and go to state 216
    UnaryExpr                      shift and go to state 71
    IdentifierList                 shift and go to state 223
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 160

    (74) Result -> LEFT_PARENTHESIS TypeList . RIGHT_PARENTHESIS
    (76) TypeList -> TypeList . COMMA IDENT
    (77) TypeList -> TypeList . COMMA Type

    RIGHT_PARENTHESIS shift and go to state 224
    COMMA           shift and go to state 225


state 161

    (78) TypeList -> IDENT .

    RIGHT_PARENTHESIS reduce using rule 78 (TypeList -> IDENT .)
    COMMA           reduce using rule 78 (TypeList -> IDENT .)


state 162

    (79) TypeList -> Type .

    RIGHT_PARENTHESIS reduce using rule 79 (TypeList -> Type .)
    COMMA           reduce using rule 79 (TypeList -> Type .)


state 163

    (81) Parameters -> LEFT_PARENTHESIS ParameterList RIGHT_PARENTHESIS .

    LEFT_PARENTHESIS reduce using rule 81 (Parameters -> LEFT_PARENTHESIS ParameterList RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 81 (Parameters -> LEFT_PARENTHESIS ParameterList RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 81 (Parameters -> LEFT_PARENTHESIS ParameterList RIGHT_PARENTHESIS .)


state 164

    (82) Parameters -> LEFT_PARENTHESIS ParameterList COMMA . RIGHT_PARENTHESIS
    (84) ParameterList -> ParameterList COMMA . ParameterDecl
    (85) ParameterDecl -> . ParaIdentList Type
    (86) ParameterDecl -> . ParaIdentList IDENT
    (87) ParameterDecl -> . IDENT IDENT
    (88) ParameterDecl -> . IDENT Type
    (89) ParaIdentList -> . IDENT COMMA IDENT
    (90) ParaIdentList -> . ParaIdentList COMMA IDENT

    RIGHT_PARENTHESIS shift and go to state 226
    IDENT           shift and go to state 120

    ParameterDecl                  shift and go to state 227
    ParaIdentList                  shift and go to state 119

state 165

    (85) ParameterDecl -> ParaIdentList Type .

    RIGHT_PARENTHESIS reduce using rule 85 (ParameterDecl -> ParaIdentList Type .)
    COMMA           reduce using rule 85 (ParameterDecl -> ParaIdentList Type .)


state 166

    (86) ParameterDecl -> ParaIdentList IDENT .

    RIGHT_PARENTHESIS reduce using rule 86 (ParameterDecl -> ParaIdentList IDENT .)
    COMMA           reduce using rule 86 (ParameterDecl -> ParaIdentList IDENT .)


state 167

    (90) ParaIdentList -> ParaIdentList COMMA . IDENT

    IDENT           shift and go to state 228


state 168

    (87) ParameterDecl -> IDENT IDENT .

    RIGHT_PARENTHESIS reduce using rule 87 (ParameterDecl -> IDENT IDENT .)
    COMMA           reduce using rule 87 (ParameterDecl -> IDENT IDENT .)


state 169

    (88) ParameterDecl -> IDENT Type .

    RIGHT_PARENTHESIS reduce using rule 88 (ParameterDecl -> IDENT Type .)
    COMMA           reduce using rule 88 (ParameterDecl -> IDENT Type .)


state 170

    (89) ParaIdentList -> IDENT COMMA . IDENT

    IDENT           shift and go to state 229


state 171

    (40) ExpressionList -> ExpressionList COMMA Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    COMMA           reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    SEMICOLON       reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    RIGHT_PARENTHESIS reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    ADD_ASSIGNMENT  reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    SUB_ASSIGNMENT  reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    MUL_ASSIGNMENT  reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    QUO_ASSIGNMENT  reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    REM_ASSIGNMENT  reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    AND_ASSIGNMENT  reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    OR_ASSIGNMENT   reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    XOR_ASSIGNMENT  reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    ASSIGNMENT      reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    LEFT_BRACE      reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    RIGHT_BRACE     reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    COLON           reduce using rule 40 (ExpressionList -> ExpressionList COMMA Expression .)
    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141


state 172

    (95) Expression -> Expression LOGICAL_OR Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    COMMA           reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    SEMICOLON       reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    RIGHT_BRACKET   reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    RIGHT_PARENTHESIS reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    ADD_ASSIGNMENT  reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    SUB_ASSIGNMENT  reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    MUL_ASSIGNMENT  reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    QUO_ASSIGNMENT  reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    REM_ASSIGNMENT  reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    AND_ASSIGNMENT  reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    OR_ASSIGNMENT   reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    XOR_ASSIGNMENT  reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    ASSIGNMENT      reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    LEFT_BRACE      reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    RIGHT_BRACE     reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    COLON           reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    INCREMENT       reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    DECREMENT       reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .)
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! LOGICAL_AND     [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! EQUAL           [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! NOT_EQUAL       [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LESS_THAN       [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! GREATER_THAN    [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! ADD             [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! SUBTRACT        [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! OR              [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! XOR             [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! MULTIPLY        [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! QUOTIENT        [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! REMAINDER       [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! AND             [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! AND_NOT         [ reduce using rule 95 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]


state 173

    (96) Expression -> Expression LOGICAL_AND Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    LOGICAL_AND     reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    COMMA           reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    SEMICOLON       reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    RIGHT_BRACKET   reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    RIGHT_PARENTHESIS reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    ADD_ASSIGNMENT  reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    SUB_ASSIGNMENT  reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    MUL_ASSIGNMENT  reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    QUO_ASSIGNMENT  reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    REM_ASSIGNMENT  reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    AND_ASSIGNMENT  reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    OR_ASSIGNMENT   reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    XOR_ASSIGNMENT  reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    ASSIGNMENT      reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    LEFT_BRACE      reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    RIGHT_BRACE     reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    COLON           reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    INCREMENT       reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    DECREMENT       reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .)
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! EQUAL           [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! NOT_EQUAL       [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LESS_THAN       [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LESS_THAN_EQUAL [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! GREATER_THAN    [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! GREATER_THAN_EQUAL [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! ADD             [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! SUBTRACT        [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! OR              [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! XOR             [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! MULTIPLY        [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! QUOTIENT        [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! REMAINDER       [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! AND             [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! AND_NOT         [ reduce using rule 96 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]


state 174

    (97) Expression -> Expression EQUAL Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    LOGICAL_AND     reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    EQUAL           reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    NOT_EQUAL       reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    LESS_THAN       reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    LESS_THAN_EQUAL reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    GREATER_THAN    reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    GREATER_THAN_EQUAL reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    COMMA           reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    SEMICOLON       reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    RIGHT_BRACKET   reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    RIGHT_PARENTHESIS reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    ADD_ASSIGNMENT  reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    SUB_ASSIGNMENT  reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    MUL_ASSIGNMENT  reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    QUO_ASSIGNMENT  reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    REM_ASSIGNMENT  reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    AND_ASSIGNMENT  reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    OR_ASSIGNMENT   reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    XOR_ASSIGNMENT  reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    ASSIGNMENT      reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    LEFT_BRACE      reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    RIGHT_BRACE     reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    COLON           reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    INCREMENT       reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    DECREMENT       reduce using rule 97 (Expression -> Expression EQUAL Expression .)
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! ADD             [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! SUBTRACT        [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! OR              [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! XOR             [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! MULTIPLY        [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! QUOTIENT        [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! REMAINDER       [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! AND             [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! AND_NOT         [ reduce using rule 97 (Expression -> Expression EQUAL Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]


state 175

    (98) Expression -> Expression NOT_EQUAL Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    LOGICAL_AND     reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    EQUAL           reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    NOT_EQUAL       reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    LESS_THAN       reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    LESS_THAN_EQUAL reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    GREATER_THAN    reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    GREATER_THAN_EQUAL reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    COMMA           reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    SEMICOLON       reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    RIGHT_BRACKET   reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    RIGHT_PARENTHESIS reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    ADD_ASSIGNMENT  reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    SUB_ASSIGNMENT  reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    MUL_ASSIGNMENT  reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    QUO_ASSIGNMENT  reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    REM_ASSIGNMENT  reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    AND_ASSIGNMENT  reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    OR_ASSIGNMENT   reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    XOR_ASSIGNMENT  reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    ASSIGNMENT      reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    LEFT_BRACE      reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    RIGHT_BRACE     reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    COLON           reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    INCREMENT       reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    DECREMENT       reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .)
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! ADD             [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! SUBTRACT        [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! OR              [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! XOR             [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! MULTIPLY        [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! QUOTIENT        [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! REMAINDER       [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! AND             [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! AND_NOT         [ reduce using rule 98 (Expression -> Expression NOT_EQUAL Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]


state 176

    (99) Expression -> Expression LESS_THAN Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    LOGICAL_AND     reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    EQUAL           reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    NOT_EQUAL       reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    LESS_THAN       reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    LESS_THAN_EQUAL reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    GREATER_THAN    reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    GREATER_THAN_EQUAL reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    COMMA           reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    SEMICOLON       reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    RIGHT_BRACKET   reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    RIGHT_PARENTHESIS reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    ADD_ASSIGNMENT  reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    SUB_ASSIGNMENT  reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    MUL_ASSIGNMENT  reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    QUO_ASSIGNMENT  reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    REM_ASSIGNMENT  reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    AND_ASSIGNMENT  reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    OR_ASSIGNMENT   reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    XOR_ASSIGNMENT  reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    ASSIGNMENT      reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    LEFT_BRACE      reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    RIGHT_BRACE     reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    COLON           reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    INCREMENT       reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    DECREMENT       reduce using rule 99 (Expression -> Expression LESS_THAN Expression .)
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! ADD             [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! SUBTRACT        [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! OR              [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! XOR             [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! MULTIPLY        [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! QUOTIENT        [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! REMAINDER       [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! AND             [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! AND_NOT         [ reduce using rule 99 (Expression -> Expression LESS_THAN Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]


state 177

    (100) Expression -> Expression LESS_THAN_EQUAL Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    LOGICAL_AND     reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    EQUAL           reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    NOT_EQUAL       reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    LESS_THAN       reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    LESS_THAN_EQUAL reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    GREATER_THAN    reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    GREATER_THAN_EQUAL reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    COMMA           reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    SEMICOLON       reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    RIGHT_BRACKET   reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    RIGHT_PARENTHESIS reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    ADD_ASSIGNMENT  reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    SUB_ASSIGNMENT  reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    MUL_ASSIGNMENT  reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    QUO_ASSIGNMENT  reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    REM_ASSIGNMENT  reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    AND_ASSIGNMENT  reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    OR_ASSIGNMENT   reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    XOR_ASSIGNMENT  reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    ASSIGNMENT      reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    LEFT_BRACE      reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    RIGHT_BRACE     reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    COLON           reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    INCREMENT       reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    DECREMENT       reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .)
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! ADD             [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! SUBTRACT        [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! OR              [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! XOR             [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! MULTIPLY        [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! QUOTIENT        [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! REMAINDER       [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! AND             [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! AND_NOT         [ reduce using rule 100 (Expression -> Expression LESS_THAN_EQUAL Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]


state 178

    (101) Expression -> Expression GREATER_THAN Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    LOGICAL_AND     reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    EQUAL           reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    NOT_EQUAL       reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    LESS_THAN       reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    LESS_THAN_EQUAL reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    GREATER_THAN    reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    GREATER_THAN_EQUAL reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    COMMA           reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    SEMICOLON       reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    RIGHT_BRACKET   reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    RIGHT_PARENTHESIS reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    ADD_ASSIGNMENT  reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    SUB_ASSIGNMENT  reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    MUL_ASSIGNMENT  reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    QUO_ASSIGNMENT  reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    REM_ASSIGNMENT  reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    AND_ASSIGNMENT  reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    OR_ASSIGNMENT   reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    XOR_ASSIGNMENT  reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    ASSIGNMENT      reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    LEFT_BRACE      reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    RIGHT_BRACE     reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    COLON           reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    INCREMENT       reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    DECREMENT       reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .)
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! ADD             [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! SUBTRACT        [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! OR              [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! XOR             [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! MULTIPLY        [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! QUOTIENT        [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! REMAINDER       [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! AND             [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! AND_NOT         [ reduce using rule 101 (Expression -> Expression GREATER_THAN Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]


state 179

    (102) Expression -> Expression GREATER_THAN_EQUAL Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    LOGICAL_AND     reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    EQUAL           reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    NOT_EQUAL       reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    LESS_THAN       reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    LESS_THAN_EQUAL reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    GREATER_THAN    reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    GREATER_THAN_EQUAL reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    COMMA           reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    SEMICOLON       reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    RIGHT_BRACKET   reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    RIGHT_PARENTHESIS reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    ADD_ASSIGNMENT  reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    SUB_ASSIGNMENT  reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    MUL_ASSIGNMENT  reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    QUO_ASSIGNMENT  reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    REM_ASSIGNMENT  reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    AND_ASSIGNMENT  reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    OR_ASSIGNMENT   reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    XOR_ASSIGNMENT  reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    ASSIGNMENT      reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    LEFT_BRACE      reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    RIGHT_BRACE     reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    COLON           reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    INCREMENT       reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    DECREMENT       reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .)
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! ADD             [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! SUBTRACT        [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! OR              [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! XOR             [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! MULTIPLY        [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! QUOTIENT        [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! REMAINDER       [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! AND             [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! AND_NOT         [ reduce using rule 102 (Expression -> Expression GREATER_THAN_EQUAL Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]


state 180

    (103) Expression -> Expression ADD Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 103 (Expression -> Expression ADD Expression .)
    LOGICAL_AND     reduce using rule 103 (Expression -> Expression ADD Expression .)
    EQUAL           reduce using rule 103 (Expression -> Expression ADD Expression .)
    NOT_EQUAL       reduce using rule 103 (Expression -> Expression ADD Expression .)
    LESS_THAN       reduce using rule 103 (Expression -> Expression ADD Expression .)
    LESS_THAN_EQUAL reduce using rule 103 (Expression -> Expression ADD Expression .)
    GREATER_THAN    reduce using rule 103 (Expression -> Expression ADD Expression .)
    GREATER_THAN_EQUAL reduce using rule 103 (Expression -> Expression ADD Expression .)
    ADD             reduce using rule 103 (Expression -> Expression ADD Expression .)
    SUBTRACT        reduce using rule 103 (Expression -> Expression ADD Expression .)
    OR              reduce using rule 103 (Expression -> Expression ADD Expression .)
    XOR             reduce using rule 103 (Expression -> Expression ADD Expression .)
    COMMA           reduce using rule 103 (Expression -> Expression ADD Expression .)
    SEMICOLON       reduce using rule 103 (Expression -> Expression ADD Expression .)
    RIGHT_BRACKET   reduce using rule 103 (Expression -> Expression ADD Expression .)
    RIGHT_PARENTHESIS reduce using rule 103 (Expression -> Expression ADD Expression .)
    ADD_ASSIGNMENT  reduce using rule 103 (Expression -> Expression ADD Expression .)
    SUB_ASSIGNMENT  reduce using rule 103 (Expression -> Expression ADD Expression .)
    MUL_ASSIGNMENT  reduce using rule 103 (Expression -> Expression ADD Expression .)
    QUO_ASSIGNMENT  reduce using rule 103 (Expression -> Expression ADD Expression .)
    REM_ASSIGNMENT  reduce using rule 103 (Expression -> Expression ADD Expression .)
    AND_ASSIGNMENT  reduce using rule 103 (Expression -> Expression ADD Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 103 (Expression -> Expression ADD Expression .)
    OR_ASSIGNMENT   reduce using rule 103 (Expression -> Expression ADD Expression .)
    XOR_ASSIGNMENT  reduce using rule 103 (Expression -> Expression ADD Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 103 (Expression -> Expression ADD Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 103 (Expression -> Expression ADD Expression .)
    ASSIGNMENT      reduce using rule 103 (Expression -> Expression ADD Expression .)
    LEFT_BRACE      reduce using rule 103 (Expression -> Expression ADD Expression .)
    RIGHT_BRACE     reduce using rule 103 (Expression -> Expression ADD Expression .)
    COLON           reduce using rule 103 (Expression -> Expression ADD Expression .)
    INCREMENT       reduce using rule 103 (Expression -> Expression ADD Expression .)
    DECREMENT       reduce using rule 103 (Expression -> Expression ADD Expression .)
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! MULTIPLY        [ reduce using rule 103 (Expression -> Expression ADD Expression .) ]
  ! QUOTIENT        [ reduce using rule 103 (Expression -> Expression ADD Expression .) ]
  ! REMAINDER       [ reduce using rule 103 (Expression -> Expression ADD Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 103 (Expression -> Expression ADD Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 103 (Expression -> Expression ADD Expression .) ]
  ! AND             [ reduce using rule 103 (Expression -> Expression ADD Expression .) ]
  ! AND_NOT         [ reduce using rule 103 (Expression -> Expression ADD Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]


state 181

    (104) Expression -> Expression SUBTRACT Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    LOGICAL_AND     reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    EQUAL           reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    NOT_EQUAL       reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    LESS_THAN       reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    LESS_THAN_EQUAL reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    GREATER_THAN    reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    GREATER_THAN_EQUAL reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    ADD             reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    SUBTRACT        reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    OR              reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    XOR             reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    COMMA           reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    SEMICOLON       reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    RIGHT_BRACKET   reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    RIGHT_PARENTHESIS reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    ADD_ASSIGNMENT  reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    SUB_ASSIGNMENT  reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    MUL_ASSIGNMENT  reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    QUO_ASSIGNMENT  reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    REM_ASSIGNMENT  reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    AND_ASSIGNMENT  reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    OR_ASSIGNMENT   reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    XOR_ASSIGNMENT  reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    ASSIGNMENT      reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    LEFT_BRACE      reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    RIGHT_BRACE     reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    COLON           reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    INCREMENT       reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    DECREMENT       reduce using rule 104 (Expression -> Expression SUBTRACT Expression .)
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! MULTIPLY        [ reduce using rule 104 (Expression -> Expression SUBTRACT Expression .) ]
  ! QUOTIENT        [ reduce using rule 104 (Expression -> Expression SUBTRACT Expression .) ]
  ! REMAINDER       [ reduce using rule 104 (Expression -> Expression SUBTRACT Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 104 (Expression -> Expression SUBTRACT Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 104 (Expression -> Expression SUBTRACT Expression .) ]
  ! AND             [ reduce using rule 104 (Expression -> Expression SUBTRACT Expression .) ]
  ! AND_NOT         [ reduce using rule 104 (Expression -> Expression SUBTRACT Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]


state 182

    (105) Expression -> Expression OR Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 105 (Expression -> Expression OR Expression .)
    LOGICAL_AND     reduce using rule 105 (Expression -> Expression OR Expression .)
    EQUAL           reduce using rule 105 (Expression -> Expression OR Expression .)
    NOT_EQUAL       reduce using rule 105 (Expression -> Expression OR Expression .)
    LESS_THAN       reduce using rule 105 (Expression -> Expression OR Expression .)
    LESS_THAN_EQUAL reduce using rule 105 (Expression -> Expression OR Expression .)
    GREATER_THAN    reduce using rule 105 (Expression -> Expression OR Expression .)
    GREATER_THAN_EQUAL reduce using rule 105 (Expression -> Expression OR Expression .)
    ADD             reduce using rule 105 (Expression -> Expression OR Expression .)
    SUBTRACT        reduce using rule 105 (Expression -> Expression OR Expression .)
    OR              reduce using rule 105 (Expression -> Expression OR Expression .)
    XOR             reduce using rule 105 (Expression -> Expression OR Expression .)
    COMMA           reduce using rule 105 (Expression -> Expression OR Expression .)
    SEMICOLON       reduce using rule 105 (Expression -> Expression OR Expression .)
    RIGHT_BRACKET   reduce using rule 105 (Expression -> Expression OR Expression .)
    RIGHT_PARENTHESIS reduce using rule 105 (Expression -> Expression OR Expression .)
    ADD_ASSIGNMENT  reduce using rule 105 (Expression -> Expression OR Expression .)
    SUB_ASSIGNMENT  reduce using rule 105 (Expression -> Expression OR Expression .)
    MUL_ASSIGNMENT  reduce using rule 105 (Expression -> Expression OR Expression .)
    QUO_ASSIGNMENT  reduce using rule 105 (Expression -> Expression OR Expression .)
    REM_ASSIGNMENT  reduce using rule 105 (Expression -> Expression OR Expression .)
    AND_ASSIGNMENT  reduce using rule 105 (Expression -> Expression OR Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 105 (Expression -> Expression OR Expression .)
    OR_ASSIGNMENT   reduce using rule 105 (Expression -> Expression OR Expression .)
    XOR_ASSIGNMENT  reduce using rule 105 (Expression -> Expression OR Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 105 (Expression -> Expression OR Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 105 (Expression -> Expression OR Expression .)
    ASSIGNMENT      reduce using rule 105 (Expression -> Expression OR Expression .)
    LEFT_BRACE      reduce using rule 105 (Expression -> Expression OR Expression .)
    RIGHT_BRACE     reduce using rule 105 (Expression -> Expression OR Expression .)
    COLON           reduce using rule 105 (Expression -> Expression OR Expression .)
    INCREMENT       reduce using rule 105 (Expression -> Expression OR Expression .)
    DECREMENT       reduce using rule 105 (Expression -> Expression OR Expression .)
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! MULTIPLY        [ reduce using rule 105 (Expression -> Expression OR Expression .) ]
  ! QUOTIENT        [ reduce using rule 105 (Expression -> Expression OR Expression .) ]
  ! REMAINDER       [ reduce using rule 105 (Expression -> Expression OR Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 105 (Expression -> Expression OR Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 105 (Expression -> Expression OR Expression .) ]
  ! AND             [ reduce using rule 105 (Expression -> Expression OR Expression .) ]
  ! AND_NOT         [ reduce using rule 105 (Expression -> Expression OR Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]


state 183

    (106) Expression -> Expression XOR Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 106 (Expression -> Expression XOR Expression .)
    LOGICAL_AND     reduce using rule 106 (Expression -> Expression XOR Expression .)
    EQUAL           reduce using rule 106 (Expression -> Expression XOR Expression .)
    NOT_EQUAL       reduce using rule 106 (Expression -> Expression XOR Expression .)
    LESS_THAN       reduce using rule 106 (Expression -> Expression XOR Expression .)
    LESS_THAN_EQUAL reduce using rule 106 (Expression -> Expression XOR Expression .)
    GREATER_THAN    reduce using rule 106 (Expression -> Expression XOR Expression .)
    GREATER_THAN_EQUAL reduce using rule 106 (Expression -> Expression XOR Expression .)
    ADD             reduce using rule 106 (Expression -> Expression XOR Expression .)
    SUBTRACT        reduce using rule 106 (Expression -> Expression XOR Expression .)
    OR              reduce using rule 106 (Expression -> Expression XOR Expression .)
    XOR             reduce using rule 106 (Expression -> Expression XOR Expression .)
    COMMA           reduce using rule 106 (Expression -> Expression XOR Expression .)
    SEMICOLON       reduce using rule 106 (Expression -> Expression XOR Expression .)
    RIGHT_BRACKET   reduce using rule 106 (Expression -> Expression XOR Expression .)
    RIGHT_PARENTHESIS reduce using rule 106 (Expression -> Expression XOR Expression .)
    ADD_ASSIGNMENT  reduce using rule 106 (Expression -> Expression XOR Expression .)
    SUB_ASSIGNMENT  reduce using rule 106 (Expression -> Expression XOR Expression .)
    MUL_ASSIGNMENT  reduce using rule 106 (Expression -> Expression XOR Expression .)
    QUO_ASSIGNMENT  reduce using rule 106 (Expression -> Expression XOR Expression .)
    REM_ASSIGNMENT  reduce using rule 106 (Expression -> Expression XOR Expression .)
    AND_ASSIGNMENT  reduce using rule 106 (Expression -> Expression XOR Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 106 (Expression -> Expression XOR Expression .)
    OR_ASSIGNMENT   reduce using rule 106 (Expression -> Expression XOR Expression .)
    XOR_ASSIGNMENT  reduce using rule 106 (Expression -> Expression XOR Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 106 (Expression -> Expression XOR Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 106 (Expression -> Expression XOR Expression .)
    ASSIGNMENT      reduce using rule 106 (Expression -> Expression XOR Expression .)
    LEFT_BRACE      reduce using rule 106 (Expression -> Expression XOR Expression .)
    RIGHT_BRACE     reduce using rule 106 (Expression -> Expression XOR Expression .)
    COLON           reduce using rule 106 (Expression -> Expression XOR Expression .)
    INCREMENT       reduce using rule 106 (Expression -> Expression XOR Expression .)
    DECREMENT       reduce using rule 106 (Expression -> Expression XOR Expression .)
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141

  ! MULTIPLY        [ reduce using rule 106 (Expression -> Expression XOR Expression .) ]
  ! QUOTIENT        [ reduce using rule 106 (Expression -> Expression XOR Expression .) ]
  ! REMAINDER       [ reduce using rule 106 (Expression -> Expression XOR Expression .) ]
  ! SHIFT_LEFT      [ reduce using rule 106 (Expression -> Expression XOR Expression .) ]
  ! SHIFT_RIGHT     [ reduce using rule 106 (Expression -> Expression XOR Expression .) ]
  ! AND             [ reduce using rule 106 (Expression -> Expression XOR Expression .) ]
  ! AND_NOT         [ reduce using rule 106 (Expression -> Expression XOR Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]


state 184

    (107) Expression -> Expression MULTIPLY Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    LOGICAL_AND     reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    EQUAL           reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    NOT_EQUAL       reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    LESS_THAN       reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    LESS_THAN_EQUAL reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    GREATER_THAN    reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    GREATER_THAN_EQUAL reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    ADD             reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    SUBTRACT        reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    OR              reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    XOR             reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    MULTIPLY        reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    QUOTIENT        reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    REMAINDER       reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    SHIFT_LEFT      reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    SHIFT_RIGHT     reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    AND             reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    AND_NOT         reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    COMMA           reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    SEMICOLON       reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    RIGHT_BRACKET   reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    RIGHT_PARENTHESIS reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    ADD_ASSIGNMENT  reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    SUB_ASSIGNMENT  reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    MUL_ASSIGNMENT  reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    QUO_ASSIGNMENT  reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    REM_ASSIGNMENT  reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    AND_ASSIGNMENT  reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    OR_ASSIGNMENT   reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    XOR_ASSIGNMENT  reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    ASSIGNMENT      reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    LEFT_BRACE      reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    RIGHT_BRACE     reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    COLON           reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    INCREMENT       reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)
    DECREMENT       reduce using rule 107 (Expression -> Expression MULTIPLY Expression .)

  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]
  ! MULTIPLY        [ shift and go to state 135 ]
  ! QUOTIENT        [ shift and go to state 136 ]
  ! REMAINDER       [ shift and go to state 137 ]
  ! SHIFT_LEFT      [ shift and go to state 138 ]
  ! SHIFT_RIGHT     [ shift and go to state 139 ]
  ! AND             [ shift and go to state 140 ]
  ! AND_NOT         [ shift and go to state 141 ]


state 185

    (108) Expression -> Expression QUOTIENT Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    LOGICAL_AND     reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    EQUAL           reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    NOT_EQUAL       reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    LESS_THAN       reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    LESS_THAN_EQUAL reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    GREATER_THAN    reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    GREATER_THAN_EQUAL reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    ADD             reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    SUBTRACT        reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    OR              reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    XOR             reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    MULTIPLY        reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    QUOTIENT        reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    REMAINDER       reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    SHIFT_LEFT      reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    SHIFT_RIGHT     reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    AND             reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    AND_NOT         reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    COMMA           reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    SEMICOLON       reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    RIGHT_BRACKET   reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    RIGHT_PARENTHESIS reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    ADD_ASSIGNMENT  reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    SUB_ASSIGNMENT  reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    MUL_ASSIGNMENT  reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    QUO_ASSIGNMENT  reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    REM_ASSIGNMENT  reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    AND_ASSIGNMENT  reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    OR_ASSIGNMENT   reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    XOR_ASSIGNMENT  reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    ASSIGNMENT      reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    LEFT_BRACE      reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    RIGHT_BRACE     reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    COLON           reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    INCREMENT       reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)
    DECREMENT       reduce using rule 108 (Expression -> Expression QUOTIENT Expression .)

  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]
  ! MULTIPLY        [ shift and go to state 135 ]
  ! QUOTIENT        [ shift and go to state 136 ]
  ! REMAINDER       [ shift and go to state 137 ]
  ! SHIFT_LEFT      [ shift and go to state 138 ]
  ! SHIFT_RIGHT     [ shift and go to state 139 ]
  ! AND             [ shift and go to state 140 ]
  ! AND_NOT         [ shift and go to state 141 ]


state 186

    (109) Expression -> Expression REMAINDER Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    LOGICAL_AND     reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    EQUAL           reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    NOT_EQUAL       reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    LESS_THAN       reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    LESS_THAN_EQUAL reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    GREATER_THAN    reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    GREATER_THAN_EQUAL reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    ADD             reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    SUBTRACT        reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    OR              reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    XOR             reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    MULTIPLY        reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    QUOTIENT        reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    REMAINDER       reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    SHIFT_LEFT      reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    SHIFT_RIGHT     reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    AND             reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    AND_NOT         reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    COMMA           reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    SEMICOLON       reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    RIGHT_BRACKET   reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    RIGHT_PARENTHESIS reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    ADD_ASSIGNMENT  reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    SUB_ASSIGNMENT  reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    MUL_ASSIGNMENT  reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    QUO_ASSIGNMENT  reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    REM_ASSIGNMENT  reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    AND_ASSIGNMENT  reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    OR_ASSIGNMENT   reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    XOR_ASSIGNMENT  reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    ASSIGNMENT      reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    LEFT_BRACE      reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    RIGHT_BRACE     reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    COLON           reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    INCREMENT       reduce using rule 109 (Expression -> Expression REMAINDER Expression .)
    DECREMENT       reduce using rule 109 (Expression -> Expression REMAINDER Expression .)

  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]
  ! MULTIPLY        [ shift and go to state 135 ]
  ! QUOTIENT        [ shift and go to state 136 ]
  ! REMAINDER       [ shift and go to state 137 ]
  ! SHIFT_LEFT      [ shift and go to state 138 ]
  ! SHIFT_RIGHT     [ shift and go to state 139 ]
  ! AND             [ shift and go to state 140 ]
  ! AND_NOT         [ shift and go to state 141 ]


state 187

    (110) Expression -> Expression SHIFT_LEFT Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    LOGICAL_AND     reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    EQUAL           reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    NOT_EQUAL       reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    LESS_THAN       reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    LESS_THAN_EQUAL reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    GREATER_THAN    reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    GREATER_THAN_EQUAL reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    ADD             reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    SUBTRACT        reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    OR              reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    XOR             reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    MULTIPLY        reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    QUOTIENT        reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    REMAINDER       reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    SHIFT_LEFT      reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    SHIFT_RIGHT     reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    AND             reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    AND_NOT         reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    COMMA           reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    SEMICOLON       reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    RIGHT_BRACKET   reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    RIGHT_PARENTHESIS reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    ADD_ASSIGNMENT  reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    SUB_ASSIGNMENT  reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    MUL_ASSIGNMENT  reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    QUO_ASSIGNMENT  reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    REM_ASSIGNMENT  reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    AND_ASSIGNMENT  reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    OR_ASSIGNMENT   reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    XOR_ASSIGNMENT  reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    ASSIGNMENT      reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    LEFT_BRACE      reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    RIGHT_BRACE     reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    COLON           reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    INCREMENT       reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)
    DECREMENT       reduce using rule 110 (Expression -> Expression SHIFT_LEFT Expression .)

  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]
  ! MULTIPLY        [ shift and go to state 135 ]
  ! QUOTIENT        [ shift and go to state 136 ]
  ! REMAINDER       [ shift and go to state 137 ]
  ! SHIFT_LEFT      [ shift and go to state 138 ]
  ! SHIFT_RIGHT     [ shift and go to state 139 ]
  ! AND             [ shift and go to state 140 ]
  ! AND_NOT         [ shift and go to state 141 ]


state 188

    (111) Expression -> Expression SHIFT_RIGHT Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    LOGICAL_AND     reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    EQUAL           reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    NOT_EQUAL       reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    LESS_THAN       reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    LESS_THAN_EQUAL reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    GREATER_THAN    reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    GREATER_THAN_EQUAL reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    ADD             reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    SUBTRACT        reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    OR              reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    XOR             reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    MULTIPLY        reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    QUOTIENT        reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    REMAINDER       reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    SHIFT_LEFT      reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    SHIFT_RIGHT     reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    AND             reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    AND_NOT         reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    COMMA           reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    SEMICOLON       reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    RIGHT_BRACKET   reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    RIGHT_PARENTHESIS reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    ADD_ASSIGNMENT  reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    SUB_ASSIGNMENT  reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    MUL_ASSIGNMENT  reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    QUO_ASSIGNMENT  reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    REM_ASSIGNMENT  reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    AND_ASSIGNMENT  reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    OR_ASSIGNMENT   reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    XOR_ASSIGNMENT  reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    ASSIGNMENT      reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    LEFT_BRACE      reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    RIGHT_BRACE     reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    COLON           reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    INCREMENT       reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)
    DECREMENT       reduce using rule 111 (Expression -> Expression SHIFT_RIGHT Expression .)

  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]
  ! MULTIPLY        [ shift and go to state 135 ]
  ! QUOTIENT        [ shift and go to state 136 ]
  ! REMAINDER       [ shift and go to state 137 ]
  ! SHIFT_LEFT      [ shift and go to state 138 ]
  ! SHIFT_RIGHT     [ shift and go to state 139 ]
  ! AND             [ shift and go to state 140 ]
  ! AND_NOT         [ shift and go to state 141 ]


state 189

    (112) Expression -> Expression AND Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 112 (Expression -> Expression AND Expression .)
    LOGICAL_AND     reduce using rule 112 (Expression -> Expression AND Expression .)
    EQUAL           reduce using rule 112 (Expression -> Expression AND Expression .)
    NOT_EQUAL       reduce using rule 112 (Expression -> Expression AND Expression .)
    LESS_THAN       reduce using rule 112 (Expression -> Expression AND Expression .)
    LESS_THAN_EQUAL reduce using rule 112 (Expression -> Expression AND Expression .)
    GREATER_THAN    reduce using rule 112 (Expression -> Expression AND Expression .)
    GREATER_THAN_EQUAL reduce using rule 112 (Expression -> Expression AND Expression .)
    ADD             reduce using rule 112 (Expression -> Expression AND Expression .)
    SUBTRACT        reduce using rule 112 (Expression -> Expression AND Expression .)
    OR              reduce using rule 112 (Expression -> Expression AND Expression .)
    XOR             reduce using rule 112 (Expression -> Expression AND Expression .)
    MULTIPLY        reduce using rule 112 (Expression -> Expression AND Expression .)
    QUOTIENT        reduce using rule 112 (Expression -> Expression AND Expression .)
    REMAINDER       reduce using rule 112 (Expression -> Expression AND Expression .)
    SHIFT_LEFT      reduce using rule 112 (Expression -> Expression AND Expression .)
    SHIFT_RIGHT     reduce using rule 112 (Expression -> Expression AND Expression .)
    AND             reduce using rule 112 (Expression -> Expression AND Expression .)
    AND_NOT         reduce using rule 112 (Expression -> Expression AND Expression .)
    COMMA           reduce using rule 112 (Expression -> Expression AND Expression .)
    SEMICOLON       reduce using rule 112 (Expression -> Expression AND Expression .)
    RIGHT_BRACKET   reduce using rule 112 (Expression -> Expression AND Expression .)
    RIGHT_PARENTHESIS reduce using rule 112 (Expression -> Expression AND Expression .)
    ADD_ASSIGNMENT  reduce using rule 112 (Expression -> Expression AND Expression .)
    SUB_ASSIGNMENT  reduce using rule 112 (Expression -> Expression AND Expression .)
    MUL_ASSIGNMENT  reduce using rule 112 (Expression -> Expression AND Expression .)
    QUO_ASSIGNMENT  reduce using rule 112 (Expression -> Expression AND Expression .)
    REM_ASSIGNMENT  reduce using rule 112 (Expression -> Expression AND Expression .)
    AND_ASSIGNMENT  reduce using rule 112 (Expression -> Expression AND Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 112 (Expression -> Expression AND Expression .)
    OR_ASSIGNMENT   reduce using rule 112 (Expression -> Expression AND Expression .)
    XOR_ASSIGNMENT  reduce using rule 112 (Expression -> Expression AND Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 112 (Expression -> Expression AND Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 112 (Expression -> Expression AND Expression .)
    ASSIGNMENT      reduce using rule 112 (Expression -> Expression AND Expression .)
    LEFT_BRACE      reduce using rule 112 (Expression -> Expression AND Expression .)
    RIGHT_BRACE     reduce using rule 112 (Expression -> Expression AND Expression .)
    COLON           reduce using rule 112 (Expression -> Expression AND Expression .)
    INCREMENT       reduce using rule 112 (Expression -> Expression AND Expression .)
    DECREMENT       reduce using rule 112 (Expression -> Expression AND Expression .)

  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]
  ! MULTIPLY        [ shift and go to state 135 ]
  ! QUOTIENT        [ shift and go to state 136 ]
  ! REMAINDER       [ shift and go to state 137 ]
  ! SHIFT_LEFT      [ shift and go to state 138 ]
  ! SHIFT_RIGHT     [ shift and go to state 139 ]
  ! AND             [ shift and go to state 140 ]
  ! AND_NOT         [ shift and go to state 141 ]


state 190

    (113) Expression -> Expression AND_NOT Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LOGICAL_OR      reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    LOGICAL_AND     reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    EQUAL           reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    NOT_EQUAL       reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    LESS_THAN       reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    LESS_THAN_EQUAL reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    GREATER_THAN    reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    GREATER_THAN_EQUAL reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    ADD             reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    SUBTRACT        reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    OR              reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    XOR             reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    MULTIPLY        reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    QUOTIENT        reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    REMAINDER       reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    SHIFT_LEFT      reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    SHIFT_RIGHT     reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    AND             reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    AND_NOT         reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    COMMA           reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    SEMICOLON       reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    RIGHT_BRACKET   reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    RIGHT_PARENTHESIS reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    ADD_ASSIGNMENT  reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    SUB_ASSIGNMENT  reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    MUL_ASSIGNMENT  reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    QUO_ASSIGNMENT  reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    REM_ASSIGNMENT  reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    AND_ASSIGNMENT  reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    OR_ASSIGNMENT   reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    XOR_ASSIGNMENT  reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    ASSIGNMENT      reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    LEFT_BRACE      reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    RIGHT_BRACE     reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    COLON           reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    INCREMENT       reduce using rule 113 (Expression -> Expression AND_NOT Expression .)
    DECREMENT       reduce using rule 113 (Expression -> Expression AND_NOT Expression .)

  ! LOGICAL_OR      [ shift and go to state 123 ]
  ! LOGICAL_AND     [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 125 ]
  ! NOT_EQUAL       [ shift and go to state 126 ]
  ! LESS_THAN       [ shift and go to state 127 ]
  ! LESS_THAN_EQUAL [ shift and go to state 128 ]
  ! GREATER_THAN    [ shift and go to state 129 ]
  ! GREATER_THAN_EQUAL [ shift and go to state 130 ]
  ! ADD             [ shift and go to state 131 ]
  ! SUBTRACT        [ shift and go to state 132 ]
  ! OR              [ shift and go to state 133 ]
  ! XOR             [ shift and go to state 134 ]
  ! MULTIPLY        [ shift and go to state 135 ]
  ! QUOTIENT        [ shift and go to state 136 ]
  ! REMAINDER       [ shift and go to state 137 ]
  ! SHIFT_LEFT      [ shift and go to state 138 ]
  ! SHIFT_RIGHT     [ shift and go to state 139 ]
  ! AND             [ shift and go to state 140 ]
  ! AND_NOT         [ shift and go to state 141 ]


state 191

    (41) ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET . IDENT LEFT_BRACE ExpressionList RIGHT_BRACE

    IDENT           shift and go to state 230


state 192

    (127) PrimaryExpr -> PrimaryExpr PERIOD IDENT .

    PERIOD          reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    LEFT_BRACKET    reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    LEFT_PARENTHESIS reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    LOGICAL_OR      reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    LOGICAL_AND     reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    EQUAL           reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    NOT_EQUAL       reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    LESS_THAN       reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    LESS_THAN_EQUAL reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    GREATER_THAN    reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    GREATER_THAN_EQUAL reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    ADD             reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    SUBTRACT        reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    OR              reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    XOR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    MULTIPLY        reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    QUOTIENT        reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    REMAINDER       reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    SHIFT_LEFT      reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    SHIFT_RIGHT     reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    AND             reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    AND_NOT         reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    COMMA           reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    SEMICOLON       reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    RIGHT_BRACKET   reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    RIGHT_PARENTHESIS reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    ADD_ASSIGNMENT  reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    SUB_ASSIGNMENT  reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    MUL_ASSIGNMENT  reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    QUO_ASSIGNMENT  reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    REM_ASSIGNMENT  reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    AND_ASSIGNMENT  reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    AND_NOT_ASSIGNMENT reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    OR_ASSIGNMENT   reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    XOR_ASSIGNMENT  reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    ASSIGNMENT      reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    LEFT_BRACE      reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    RIGHT_BRACE     reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    COLON           reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    INCREMENT       reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)
    DECREMENT       reduce using rule 127 (PrimaryExpr -> PrimaryExpr PERIOD IDENT .)


state 193

    (129) Index -> LEFT_BRACKET Expression . RIGHT_BRACKET
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    RIGHT_BRACKET   shift and go to state 231
    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141


state 194

    (130) Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    ADD             reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    OR              reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    XOR             reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    AND             reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    ADD_ASSIGNMENT  reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    SUB_ASSIGNMENT  reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    MUL_ASSIGNMENT  reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    QUO_ASSIGNMENT  reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    REM_ASSIGNMENT  reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    AND_ASSIGNMENT  reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    AND_NOT_ASSIGNMENT reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    OR_ASSIGNMENT   reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    XOR_ASSIGNMENT  reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    RIGHT_BRACE     reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    COLON           reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 130 (Arguments -> LEFT_PARENTHESIS RIGHT_PARENTHESIS .)


state 195

    (131) Arguments -> LEFT_PARENTHESIS ExpressionList . RIGHT_PARENTHESIS
    (132) Arguments -> LEFT_PARENTHESIS ExpressionList . COMMA RIGHT_PARENTHESIS
    (40) ExpressionList -> ExpressionList . COMMA Expression

    RIGHT_PARENTHESIS shift and go to state 232
    COMMA           shift and go to state 233


state 196

    (124) PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ADD             reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    OR              reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    XOR             reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND             reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ADD_ASSIGNMENT  reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SUB_ASSIGNMENT  reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    MUL_ASSIGNMENT  reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    QUO_ASSIGNMENT  reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    REM_ASSIGNMENT  reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND_ASSIGNMENT  reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    AND_NOT_ASSIGNMENT reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    OR_ASSIGNMENT   reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    XOR_ASSIGNMENT  reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    RIGHT_BRACE     reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    COLON           reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 124 (PrimaryExpr -> LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS .)


state 197

    (62) StructType -> STRUCT OpenStruct LEFT_BRACE FieldDeclStar . RIGHT_BRACE CloseStruct
    (63) FieldDeclStar -> FieldDeclStar . FieldDecl SEMICOLON
    (65) FieldDecl -> . IDENT COMMA IdentifierList Type
    (66) FieldDecl -> . IDENT COMMA IdentifierList IDENT
    (67) FieldDecl -> . IDENT Type
    (68) FieldDecl -> . IDENT IDENT
    (69) FieldDecl -> . IDENT STRUCT MULTIPLY IDENT
    (70) FieldDecl -> . IDENT COMMA IdentifierList STRUCT MULTIPLY IDENT

    RIGHT_BRACE     shift and go to state 234
    IDENT           shift and go to state 236

    FieldDecl                      shift and go to state 235

state 198

    (60) ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET Type .

    ASSIGNMENT      reduce using rule 60 (ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET Type .)
    SEMICOLON       reduce using rule 60 (ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET Type .)
    RIGHT_PARENTHESIS reduce using rule 60 (ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET Type .)
    COMMA           reduce using rule 60 (ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET Type .)


state 199

    (61) ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET IDENT .

    ASSIGNMENT      reduce using rule 61 (ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET IDENT .)
    SEMICOLON       reduce using rule 61 (ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET IDENT .)
    RIGHT_PARENTHESIS reduce using rule 61 (ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET IDENT .)
    COMMA           reduce using rule 61 (ArrayType -> LEFT_BRACKET INT RIGHT_BRACKET IDENT .)


state 200

    (91) Block -> LEFT_BRACE StatementList RIGHT_BRACE .

    SEMICOLON       reduce using rule 91 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)
    ELSE            reduce using rule 91 (Block -> LEFT_BRACE StatementList RIGHT_BRACE .)


state 201

    (92) StatementList -> StatementList Statement . SEMICOLON

    SEMICOLON       shift and go to state 237


state 202

    (147) Statement -> Declaration .

    SEMICOLON       reduce using rule 147 (Statement -> Declaration .)


state 203

    (148) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 148 (Statement -> SimpleStmt .)


state 204

    (149) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 149 (Statement -> ReturnStmt .)


state 205

    (150) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 150 (Statement -> BreakStmt .)


state 206

    (151) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 151 (Statement -> ContinueStmt .)


state 207

    (152) Statement -> OpenScope . Block CloseScope
    (91) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    LEFT_BRACE      shift and go to state 113

    Block                          shift and go to state 238

state 208

    (153) Statement -> IfStmt .

    SEMICOLON       reduce using rule 153 (Statement -> IfStmt .)


state 209

    (154) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 154 (Statement -> SwitchStmt .)


state 210

    (155) Statement -> ForStmt .

    SEMICOLON       reduce using rule 155 (Statement -> ForStmt .)


state 211

    (156) SimpleStmt -> Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression
    (161) IncDecStmt -> Expression . INCREMENT
    (162) IncDecStmt -> Expression . DECREMENT
    (39) ExpressionList -> Expression .

    SEMICOLON       reduce using rule 156 (SimpleStmt -> Expression .)
    LEFT_BRACE      reduce using rule 156 (SimpleStmt -> Expression .)
    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141
    INCREMENT       shift and go to state 239
    DECREMENT       shift and go to state 240
    COMMA           reduce using rule 39 (ExpressionList -> Expression .)
    ADD_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    SUB_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    MUL_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    QUO_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    REM_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    AND_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    OR_ASSIGNMENT   reduce using rule 39 (ExpressionList -> Expression .)
    XOR_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    ASSIGNMENT      reduce using rule 39 (ExpressionList -> Expression .)


state 212

    (157) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 157 (SimpleStmt -> IncDecStmt .)
    LEFT_BRACE      reduce using rule 157 (SimpleStmt -> IncDecStmt .)


state 213

    (158) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 158 (SimpleStmt -> Assignment .)
    LEFT_BRACE      reduce using rule 158 (SimpleStmt -> Assignment .)


state 214

    (159) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 159 (SimpleStmt -> ShortVarDecl .)
    LEFT_BRACE      reduce using rule 159 (SimpleStmt -> ShortVarDecl .)


state 215

    (196) ReturnStmt -> RETURN . ExpressionList
    (197) ReturnStmt -> RETURN .
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    SEMICOLON       reduce using rule 197 (ReturnStmt -> RETURN .)
    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ExpressionList                 shift and go to state 241
    Expression                     shift and go to state 68
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 216

    (163) Assignment -> ExpressionList . assign_op ExpressionList
    (40) ExpressionList -> ExpressionList . COMMA Expression
    (164) assign_op -> . ADD_ASSIGNMENT
    (165) assign_op -> . SUB_ASSIGNMENT
    (166) assign_op -> . MUL_ASSIGNMENT
    (167) assign_op -> . QUO_ASSIGNMENT
    (168) assign_op -> . REM_ASSIGNMENT
    (169) assign_op -> . AND_ASSIGNMENT
    (170) assign_op -> . AND_NOT_ASSIGNMENT
    (171) assign_op -> . OR_ASSIGNMENT
    (172) assign_op -> . XOR_ASSIGNMENT
    (173) assign_op -> . SHIFT_LEFT_ASSIGNMENT
    (174) assign_op -> . SHIFT_RIGHT_ASSIGNMENT
    (175) assign_op -> . ASSIGNMENT

    COMMA           shift and go to state 122
    ADD_ASSIGNMENT  shift and go to state 243
    SUB_ASSIGNMENT  shift and go to state 244
    MUL_ASSIGNMENT  shift and go to state 245
    QUO_ASSIGNMENT  shift and go to state 246
    REM_ASSIGNMENT  shift and go to state 247
    AND_ASSIGNMENT  shift and go to state 248
    AND_NOT_ASSIGNMENT shift and go to state 249
    OR_ASSIGNMENT   shift and go to state 250
    XOR_ASSIGNMENT  shift and go to state 251
    SHIFT_LEFT_ASSIGNMENT shift and go to state 252
    SHIFT_RIGHT_ASSIGNMENT shift and go to state 253
    ASSIGNMENT      shift and go to state 254

    assign_op                      shift and go to state 242

state 217

    (198) BreakStmt -> BREAK . IDENT
    (199) BreakStmt -> BREAK .

    IDENT           shift and go to state 255
    SEMICOLON       reduce using rule 199 (BreakStmt -> BREAK .)


state 218

    (37) IdentifierList -> IDENT .
    (38) IdentifierList -> IDENT . COMMA IdentifierList
    (123) PrimaryExpr -> IDENT .

    DEFINE          reduce using rule 37 (IdentifierList -> IDENT .)
    COMMA           shift and go to state 46
    PERIOD          reduce using rule 123 (PrimaryExpr -> IDENT .)
    LEFT_BRACKET    reduce using rule 123 (PrimaryExpr -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 123 (PrimaryExpr -> IDENT .)
    LOGICAL_OR      reduce using rule 123 (PrimaryExpr -> IDENT .)
    LOGICAL_AND     reduce using rule 123 (PrimaryExpr -> IDENT .)
    EQUAL           reduce using rule 123 (PrimaryExpr -> IDENT .)
    NOT_EQUAL       reduce using rule 123 (PrimaryExpr -> IDENT .)
    LESS_THAN       reduce using rule 123 (PrimaryExpr -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 123 (PrimaryExpr -> IDENT .)
    GREATER_THAN    reduce using rule 123 (PrimaryExpr -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 123 (PrimaryExpr -> IDENT .)
    ADD             reduce using rule 123 (PrimaryExpr -> IDENT .)
    SUBTRACT        reduce using rule 123 (PrimaryExpr -> IDENT .)
    OR              reduce using rule 123 (PrimaryExpr -> IDENT .)
    XOR             reduce using rule 123 (PrimaryExpr -> IDENT .)
    MULTIPLY        reduce using rule 123 (PrimaryExpr -> IDENT .)
    QUOTIENT        reduce using rule 123 (PrimaryExpr -> IDENT .)
    REMAINDER       reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_LEFT      reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_RIGHT     reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND             reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> IDENT .)
    INCREMENT       reduce using rule 123 (PrimaryExpr -> IDENT .)
    DECREMENT       reduce using rule 123 (PrimaryExpr -> IDENT .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> IDENT .)
    ADD_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    SUB_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    MUL_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    QUO_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    REM_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND_NOT_ASSIGNMENT reduce using rule 123 (PrimaryExpr -> IDENT .)
    OR_ASSIGNMENT   reduce using rule 123 (PrimaryExpr -> IDENT .)
    XOR_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 123 (PrimaryExpr -> IDENT .)
    ASSIGNMENT      reduce using rule 123 (PrimaryExpr -> IDENT .)
    LEFT_BRACE      reduce using rule 123 (PrimaryExpr -> IDENT .)

  ! COMMA           [ reduce using rule 123 (PrimaryExpr -> IDENT .) ]


state 219

    (200) ContinueStmt -> CONTINUE . IDENT
    (201) ContinueStmt -> CONTINUE .

    IDENT           shift and go to state 256
    SEMICOLON       reduce using rule 201 (ContinueStmt -> CONTINUE .)


state 220

    (176) IfStmt -> IF . OpenScope Expression Block CloseScope
    (177) IfStmt -> IF . OpenScope SimpleStmt SEMICOLON Expression Block CloseScope
    (178) IfStmt -> IF . OpenScope Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (179) IfStmt -> IF . OpenScope Expression Block CloseScope ELSE OpenScope Block CloseScope
    (180) IfStmt -> IF . OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> IF . OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope
    (2) OpenScope -> .

    IDENT           reduce using rule 2 (OpenScope -> .)
    LEFT_PARENTHESIS reduce using rule 2 (OpenScope -> .)
    ADD             reduce using rule 2 (OpenScope -> .)
    SUBTRACT        reduce using rule 2 (OpenScope -> .)
    NOT             reduce using rule 2 (OpenScope -> .)
    XOR             reduce using rule 2 (OpenScope -> .)
    MULTIPLY        reduce using rule 2 (OpenScope -> .)
    AND             reduce using rule 2 (OpenScope -> .)
    ARROW           reduce using rule 2 (OpenScope -> .)
    LEFT_BRACKET    reduce using rule 2 (OpenScope -> .)
    INT             reduce using rule 2 (OpenScope -> .)
    FLOAT           reduce using rule 2 (OpenScope -> .)
    RUNE            reduce using rule 2 (OpenScope -> .)
    STRING          reduce using rule 2 (OpenScope -> .)
    TRUE            reduce using rule 2 (OpenScope -> .)
    FALSE           reduce using rule 2 (OpenScope -> .)
    IMAGINARY       reduce using rule 2 (OpenScope -> .)
    SEMICOLON       reduce using rule 2 (OpenScope -> .)

    OpenScope                      shift and go to state 257

state 221

    (182) SwitchStmt -> SWITCH . LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (183) SwitchStmt -> SWITCH . SimpleStmt SEMICOLON LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (184) SwitchStmt -> SWITCH . SimpleStmt SEMICOLON ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (185) SwitchStmt -> SWITCH . ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (156) SimpleStmt -> . Expression
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (160) SimpleStmt -> .
    (186) ExpressionName -> . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (161) IncDecStmt -> . Expression INCREMENT
    (162) IncDecStmt -> . Expression DECREMENT
    (163) Assignment -> . ExpressionList assign_op ExpressionList
    (51) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACE      shift and go to state 258
    SEMICOLON       reduce using rule 160 (SimpleStmt -> .)
    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 218
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    SimpleStmt                     shift and go to state 259
    ExpressionName                 shift and go to state 260
    Expression                     shift and go to state 261
    IncDecStmt                     shift and go to state 212
    Assignment                     shift and go to state 213
    ShortVarDecl                   shift and go to state 214
    UnaryExpr                      shift and go to state 71
    ExpressionList                 shift and go to state 216
    IdentifierList                 shift and go to state 223
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 222

    (191) ForStmt -> FOR . OpenScope OpenFor ForClause Block CloseFor CloseScope
    (192) ForStmt -> FOR . OpenScope OpenFor Expression Block CloseFor CloseScope
    (193) ForStmt -> FOR . OpenScope OpenFor Block CloseFor CloseScope
    (2) OpenScope -> .

    LEFT_BRACE      reduce using rule 2 (OpenScope -> .)
    IDENT           reduce using rule 2 (OpenScope -> .)
    LEFT_PARENTHESIS reduce using rule 2 (OpenScope -> .)
    ADD             reduce using rule 2 (OpenScope -> .)
    SUBTRACT        reduce using rule 2 (OpenScope -> .)
    NOT             reduce using rule 2 (OpenScope -> .)
    XOR             reduce using rule 2 (OpenScope -> .)
    MULTIPLY        reduce using rule 2 (OpenScope -> .)
    AND             reduce using rule 2 (OpenScope -> .)
    ARROW           reduce using rule 2 (OpenScope -> .)
    LEFT_BRACKET    reduce using rule 2 (OpenScope -> .)
    INT             reduce using rule 2 (OpenScope -> .)
    FLOAT           reduce using rule 2 (OpenScope -> .)
    RUNE            reduce using rule 2 (OpenScope -> .)
    STRING          reduce using rule 2 (OpenScope -> .)
    TRUE            reduce using rule 2 (OpenScope -> .)
    FALSE           reduce using rule 2 (OpenScope -> .)
    IMAGINARY       reduce using rule 2 (OpenScope -> .)
    SEMICOLON       reduce using rule 2 (OpenScope -> .)

    OpenScope                      shift and go to state 262

state 223

    (51) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 263


state 224

    (74) Result -> LEFT_PARENTHESIS TypeList RIGHT_PARENTHESIS .

    LEFT_BRACE      reduce using rule 74 (Result -> LEFT_PARENTHESIS TypeList RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 74 (Result -> LEFT_PARENTHESIS TypeList RIGHT_PARENTHESIS .)


state 225

    (76) TypeList -> TypeList COMMA . IDENT
    (77) TypeList -> TypeList COMMA . Type
    (55) Type -> . LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
    (56) Type -> . TypeLit
    (57) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (58) TypeLit -> . ArrayType
    (59) TypeLit -> . PointerType
    (60) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET Type
    (61) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET IDENT
    (71) PointerType -> . MULTIPLY Type
    (72) PointerType -> . MULTIPLY IDENT

    IDENT           shift and go to state 264
    LEFT_PARENTHESIS shift and go to state 54
    LEFT_BRACKET    shift and go to state 58
    MULTIPLY        shift and go to state 59

    Type                           shift and go to state 265
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 56
    PointerType                    shift and go to state 57

state 226

    (82) Parameters -> LEFT_PARENTHESIS ParameterList COMMA RIGHT_PARENTHESIS .

    LEFT_PARENTHESIS reduce using rule 82 (Parameters -> LEFT_PARENTHESIS ParameterList COMMA RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 82 (Parameters -> LEFT_PARENTHESIS ParameterList COMMA RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 82 (Parameters -> LEFT_PARENTHESIS ParameterList COMMA RIGHT_PARENTHESIS .)


state 227

    (84) ParameterList -> ParameterList COMMA ParameterDecl .

    RIGHT_PARENTHESIS reduce using rule 84 (ParameterList -> ParameterList COMMA ParameterDecl .)
    COMMA           reduce using rule 84 (ParameterList -> ParameterList COMMA ParameterDecl .)


state 228

    (90) ParaIdentList -> ParaIdentList COMMA IDENT .

    IDENT           reduce using rule 90 (ParaIdentList -> ParaIdentList COMMA IDENT .)
    COMMA           reduce using rule 90 (ParaIdentList -> ParaIdentList COMMA IDENT .)
    LEFT_PARENTHESIS reduce using rule 90 (ParaIdentList -> ParaIdentList COMMA IDENT .)
    LEFT_BRACKET    reduce using rule 90 (ParaIdentList -> ParaIdentList COMMA IDENT .)
    MULTIPLY        reduce using rule 90 (ParaIdentList -> ParaIdentList COMMA IDENT .)


state 229

    (89) ParaIdentList -> IDENT COMMA IDENT .

    IDENT           reduce using rule 89 (ParaIdentList -> IDENT COMMA IDENT .)
    COMMA           reduce using rule 89 (ParaIdentList -> IDENT COMMA IDENT .)
    LEFT_PARENTHESIS reduce using rule 89 (ParaIdentList -> IDENT COMMA IDENT .)
    LEFT_BRACKET    reduce using rule 89 (ParaIdentList -> IDENT COMMA IDENT .)
    MULTIPLY        reduce using rule 89 (ParaIdentList -> IDENT COMMA IDENT .)


state 230

    (41) ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT . LEFT_BRACE ExpressionList RIGHT_BRACE

    LEFT_BRACE      shift and go to state 266


state 231

    (129) Index -> LEFT_BRACKET Expression RIGHT_BRACKET .

    PERIOD          reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LEFT_PARENTHESIS reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LOGICAL_OR      reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LOGICAL_AND     reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    EQUAL           reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    NOT_EQUAL       reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LESS_THAN       reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LESS_THAN_EQUAL reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    GREATER_THAN    reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    GREATER_THAN_EQUAL reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    ADD             reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SUBTRACT        reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    OR              reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    XOR             reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    MULTIPLY        reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    QUOTIENT        reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    REMAINDER       reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SHIFT_LEFT      reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SHIFT_RIGHT     reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    AND             reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    AND_NOT         reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    COMMA           reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    RIGHT_BRACKET   reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    RIGHT_PARENTHESIS reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    ADD_ASSIGNMENT  reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SUB_ASSIGNMENT  reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    MUL_ASSIGNMENT  reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    QUO_ASSIGNMENT  reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    REM_ASSIGNMENT  reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    AND_ASSIGNMENT  reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    AND_NOT_ASSIGNMENT reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    OR_ASSIGNMENT   reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    XOR_ASSIGNMENT  reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    ASSIGNMENT      reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    RIGHT_BRACE     reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    COLON           reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    INCREMENT       reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)
    DECREMENT       reduce using rule 129 (Index -> LEFT_BRACKET Expression RIGHT_BRACKET .)


state 232

    (131) Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    ADD             reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    OR              reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    XOR             reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    AND             reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    ADD_ASSIGNMENT  reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    SUB_ASSIGNMENT  reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    MUL_ASSIGNMENT  reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    QUO_ASSIGNMENT  reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    REM_ASSIGNMENT  reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    AND_ASSIGNMENT  reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    AND_NOT_ASSIGNMENT reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    OR_ASSIGNMENT   reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    XOR_ASSIGNMENT  reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    RIGHT_BRACE     reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    COLON           reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 131 (Arguments -> LEFT_PARENTHESIS ExpressionList RIGHT_PARENTHESIS .)


state 233

    (132) Arguments -> LEFT_PARENTHESIS ExpressionList COMMA . RIGHT_PARENTHESIS
    (40) ExpressionList -> ExpressionList COMMA . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    RIGHT_PARENTHESIS shift and go to state 267
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 171
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 234

    (62) StructType -> STRUCT OpenStruct LEFT_BRACE FieldDeclStar RIGHT_BRACE . CloseStruct
    (9) CloseStruct -> .

    SEMICOLON       reduce using rule 9 (CloseStruct -> .)

    CloseStruct                    shift and go to state 268

state 235

    (63) FieldDeclStar -> FieldDeclStar FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 269


state 236

    (65) FieldDecl -> IDENT . COMMA IdentifierList Type
    (66) FieldDecl -> IDENT . COMMA IdentifierList IDENT
    (67) FieldDecl -> IDENT . Type
    (68) FieldDecl -> IDENT . IDENT
    (69) FieldDecl -> IDENT . STRUCT MULTIPLY IDENT
    (70) FieldDecl -> IDENT . COMMA IdentifierList STRUCT MULTIPLY IDENT
    (55) Type -> . LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
    (56) Type -> . TypeLit
    (57) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (58) TypeLit -> . ArrayType
    (59) TypeLit -> . PointerType
    (60) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET Type
    (61) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET IDENT
    (71) PointerType -> . MULTIPLY Type
    (72) PointerType -> . MULTIPLY IDENT

    COMMA           shift and go to state 271
    IDENT           shift and go to state 270
    STRUCT          shift and go to state 273
    LEFT_PARENTHESIS shift and go to state 54
    LEFT_BRACKET    shift and go to state 58
    MULTIPLY        shift and go to state 59

    Type                           shift and go to state 272
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 56
    PointerType                    shift and go to state 57

state 237

    (92) StatementList -> StatementList Statement SEMICOLON .

    RIGHT_BRACE     reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    RETURN          reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    BREAK           reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    CONTINUE        reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    IF              reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    SWITCH          reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    FOR             reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    CONST           reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    TYPE            reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    VARIABLE        reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    LEFT_BRACKET    reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    IDENT           reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    LEFT_PARENTHESIS reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    ADD             reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    SUBTRACT        reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    NOT             reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    XOR             reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    MULTIPLY        reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    AND             reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    ARROW           reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    INT             reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    FLOAT           reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    RUNE            reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    STRING          reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    TRUE            reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    FALSE           reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    IMAGINARY       reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    SEMICOLON       reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    LEFT_BRACE      reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    DEFAULT         reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)
    CASE            reduce using rule 92 (StatementList -> StatementList Statement SEMICOLON .)


state 238

    (152) Statement -> OpenScope Block . CloseScope
    (3) CloseScope -> .

    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 274

state 239

    (161) IncDecStmt -> Expression INCREMENT .

    SEMICOLON       reduce using rule 161 (IncDecStmt -> Expression INCREMENT .)
    LEFT_BRACE      reduce using rule 161 (IncDecStmt -> Expression INCREMENT .)


state 240

    (162) IncDecStmt -> Expression DECREMENT .

    SEMICOLON       reduce using rule 162 (IncDecStmt -> Expression DECREMENT .)
    LEFT_BRACE      reduce using rule 162 (IncDecStmt -> Expression DECREMENT .)


state 241

    (196) ReturnStmt -> RETURN ExpressionList .
    (40) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 196 (ReturnStmt -> RETURN ExpressionList .)
    COMMA           shift and go to state 122


state 242

    (163) Assignment -> ExpressionList assign_op . ExpressionList
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ExpressionList                 shift and go to state 275
    Expression                     shift and go to state 68
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 243

    (164) assign_op -> ADD_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    IDENT           reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    ADD             reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    SUBTRACT        reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    NOT             reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    XOR             reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    MULTIPLY        reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    AND             reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    ARROW           reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    INT             reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    FLOAT           reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    RUNE            reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    STRING          reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    TRUE            reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    FALSE           reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)
    IMAGINARY       reduce using rule 164 (assign_op -> ADD_ASSIGNMENT .)


state 244

    (165) assign_op -> SUB_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    IDENT           reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    ADD             reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    SUBTRACT        reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    NOT             reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    XOR             reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    MULTIPLY        reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    AND             reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    ARROW           reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    INT             reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    FLOAT           reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    RUNE            reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    STRING          reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    TRUE            reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    FALSE           reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)
    IMAGINARY       reduce using rule 165 (assign_op -> SUB_ASSIGNMENT .)


state 245

    (166) assign_op -> MUL_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    IDENT           reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    ADD             reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    SUBTRACT        reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    NOT             reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    XOR             reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    MULTIPLY        reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    AND             reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    ARROW           reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    INT             reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    FLOAT           reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    RUNE            reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    STRING          reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    TRUE            reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    FALSE           reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)
    IMAGINARY       reduce using rule 166 (assign_op -> MUL_ASSIGNMENT .)


state 246

    (167) assign_op -> QUO_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    IDENT           reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    ADD             reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    SUBTRACT        reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    NOT             reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    XOR             reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    MULTIPLY        reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    AND             reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    ARROW           reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    INT             reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    FLOAT           reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    RUNE            reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    STRING          reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    TRUE            reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    FALSE           reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)
    IMAGINARY       reduce using rule 167 (assign_op -> QUO_ASSIGNMENT .)


state 247

    (168) assign_op -> REM_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    IDENT           reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    ADD             reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    SUBTRACT        reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    NOT             reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    XOR             reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    MULTIPLY        reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    AND             reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    ARROW           reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    INT             reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    FLOAT           reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    RUNE            reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    STRING          reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    TRUE            reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    FALSE           reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)
    IMAGINARY       reduce using rule 168 (assign_op -> REM_ASSIGNMENT .)


state 248

    (169) assign_op -> AND_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    IDENT           reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    ADD             reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    SUBTRACT        reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    NOT             reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    XOR             reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    MULTIPLY        reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    AND             reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    ARROW           reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    INT             reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    FLOAT           reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    RUNE            reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    STRING          reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    TRUE            reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    FALSE           reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)
    IMAGINARY       reduce using rule 169 (assign_op -> AND_ASSIGNMENT .)


state 249

    (170) assign_op -> AND_NOT_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    IDENT           reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    ADD             reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    SUBTRACT        reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    NOT             reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    XOR             reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    MULTIPLY        reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    AND             reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    ARROW           reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    INT             reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    FLOAT           reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    RUNE            reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    STRING          reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    TRUE            reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    FALSE           reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)
    IMAGINARY       reduce using rule 170 (assign_op -> AND_NOT_ASSIGNMENT .)


state 250

    (171) assign_op -> OR_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    IDENT           reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    ADD             reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    SUBTRACT        reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    NOT             reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    XOR             reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    MULTIPLY        reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    AND             reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    ARROW           reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    INT             reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    FLOAT           reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    RUNE            reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    STRING          reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    TRUE            reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    FALSE           reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)
    IMAGINARY       reduce using rule 171 (assign_op -> OR_ASSIGNMENT .)


state 251

    (172) assign_op -> XOR_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    IDENT           reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    ADD             reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    SUBTRACT        reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    NOT             reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    XOR             reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    MULTIPLY        reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    AND             reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    ARROW           reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    INT             reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    FLOAT           reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    RUNE            reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    STRING          reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    TRUE            reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    FALSE           reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)
    IMAGINARY       reduce using rule 172 (assign_op -> XOR_ASSIGNMENT .)


state 252

    (173) assign_op -> SHIFT_LEFT_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    IDENT           reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    ADD             reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    SUBTRACT        reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    NOT             reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    XOR             reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    MULTIPLY        reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    AND             reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    ARROW           reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    INT             reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    FLOAT           reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    RUNE            reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    STRING          reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    TRUE            reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    FALSE           reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)
    IMAGINARY       reduce using rule 173 (assign_op -> SHIFT_LEFT_ASSIGNMENT .)


state 253

    (174) assign_op -> SHIFT_RIGHT_ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    IDENT           reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    ADD             reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    SUBTRACT        reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    NOT             reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    XOR             reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    MULTIPLY        reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    AND             reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    ARROW           reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    INT             reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    FLOAT           reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    RUNE            reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    STRING          reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    TRUE            reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    FALSE           reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)
    IMAGINARY       reduce using rule 174 (assign_op -> SHIFT_RIGHT_ASSIGNMENT .)


state 254

    (175) assign_op -> ASSIGNMENT .

    LEFT_BRACKET    reduce using rule 175 (assign_op -> ASSIGNMENT .)
    IDENT           reduce using rule 175 (assign_op -> ASSIGNMENT .)
    LEFT_PARENTHESIS reduce using rule 175 (assign_op -> ASSIGNMENT .)
    ADD             reduce using rule 175 (assign_op -> ASSIGNMENT .)
    SUBTRACT        reduce using rule 175 (assign_op -> ASSIGNMENT .)
    NOT             reduce using rule 175 (assign_op -> ASSIGNMENT .)
    XOR             reduce using rule 175 (assign_op -> ASSIGNMENT .)
    MULTIPLY        reduce using rule 175 (assign_op -> ASSIGNMENT .)
    AND             reduce using rule 175 (assign_op -> ASSIGNMENT .)
    ARROW           reduce using rule 175 (assign_op -> ASSIGNMENT .)
    INT             reduce using rule 175 (assign_op -> ASSIGNMENT .)
    FLOAT           reduce using rule 175 (assign_op -> ASSIGNMENT .)
    RUNE            reduce using rule 175 (assign_op -> ASSIGNMENT .)
    STRING          reduce using rule 175 (assign_op -> ASSIGNMENT .)
    TRUE            reduce using rule 175 (assign_op -> ASSIGNMENT .)
    FALSE           reduce using rule 175 (assign_op -> ASSIGNMENT .)
    IMAGINARY       reduce using rule 175 (assign_op -> ASSIGNMENT .)


state 255

    (198) BreakStmt -> BREAK IDENT .

    SEMICOLON       reduce using rule 198 (BreakStmt -> BREAK IDENT .)


state 256

    (200) ContinueStmt -> CONTINUE IDENT .

    SEMICOLON       reduce using rule 200 (ContinueStmt -> CONTINUE IDENT .)


state 257

    (176) IfStmt -> IF OpenScope . Expression Block CloseScope
    (177) IfStmt -> IF OpenScope . SimpleStmt SEMICOLON Expression Block CloseScope
    (178) IfStmt -> IF OpenScope . Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (179) IfStmt -> IF OpenScope . Expression Block CloseScope ELSE OpenScope Block CloseScope
    (180) IfStmt -> IF OpenScope . SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> IF OpenScope . SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (156) SimpleStmt -> . Expression
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (160) SimpleStmt -> .
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (161) IncDecStmt -> . Expression INCREMENT
    (162) IncDecStmt -> . Expression DECREMENT
    (163) Assignment -> . ExpressionList assign_op ExpressionList
    (51) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    SEMICOLON       reduce using rule 160 (SimpleStmt -> .)
    IDENT           shift and go to state 278
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    LEFT_BRACKET    shift and go to state 69
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 276
    SimpleStmt                     shift and go to state 277
    UnaryExpr                      shift and go to state 71
    IncDecStmt                     shift and go to state 212
    Assignment                     shift and go to state 213
    ShortVarDecl                   shift and go to state 214
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    ExpressionList                 shift and go to state 216
    IdentifierList                 shift and go to state 223
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 258

    (182) SwitchStmt -> SWITCH LEFT_BRACE . OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (6) OpenSwitch -> .

    DEFAULT         reduce using rule 6 (OpenSwitch -> .)
    CASE            reduce using rule 6 (OpenSwitch -> .)

    OpenSwitch                     shift and go to state 279

state 259

    (183) SwitchStmt -> SWITCH SimpleStmt . SEMICOLON LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (184) SwitchStmt -> SWITCH SimpleStmt . SEMICOLON ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE

    SEMICOLON       shift and go to state 280


state 260

    (185) SwitchStmt -> SWITCH ExpressionName . LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE

    LEFT_BRACE      shift and go to state 281


state 261

    (156) SimpleStmt -> Expression .
    (186) ExpressionName -> Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression
    (161) IncDecStmt -> Expression . INCREMENT
    (162) IncDecStmt -> Expression . DECREMENT
    (39) ExpressionList -> Expression .

    SEMICOLON       reduce using rule 156 (SimpleStmt -> Expression .)
    LEFT_BRACE      reduce using rule 186 (ExpressionName -> Expression .)
    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141
    INCREMENT       shift and go to state 239
    DECREMENT       shift and go to state 240
    COMMA           reduce using rule 39 (ExpressionList -> Expression .)
    ADD_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    SUB_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    MUL_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    QUO_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    REM_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    AND_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    OR_ASSIGNMENT   reduce using rule 39 (ExpressionList -> Expression .)
    XOR_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    ASSIGNMENT      reduce using rule 39 (ExpressionList -> Expression .)


state 262

    (191) ForStmt -> FOR OpenScope . OpenFor ForClause Block CloseFor CloseScope
    (192) ForStmt -> FOR OpenScope . OpenFor Expression Block CloseFor CloseScope
    (193) ForStmt -> FOR OpenScope . OpenFor Block CloseFor CloseScope
    (4) OpenFor -> .

    LEFT_BRACE      reduce using rule 4 (OpenFor -> .)
    IDENT           reduce using rule 4 (OpenFor -> .)
    LEFT_PARENTHESIS reduce using rule 4 (OpenFor -> .)
    ADD             reduce using rule 4 (OpenFor -> .)
    SUBTRACT        reduce using rule 4 (OpenFor -> .)
    NOT             reduce using rule 4 (OpenFor -> .)
    XOR             reduce using rule 4 (OpenFor -> .)
    MULTIPLY        reduce using rule 4 (OpenFor -> .)
    AND             reduce using rule 4 (OpenFor -> .)
    ARROW           reduce using rule 4 (OpenFor -> .)
    LEFT_BRACKET    reduce using rule 4 (OpenFor -> .)
    INT             reduce using rule 4 (OpenFor -> .)
    FLOAT           reduce using rule 4 (OpenFor -> .)
    RUNE            reduce using rule 4 (OpenFor -> .)
    STRING          reduce using rule 4 (OpenFor -> .)
    TRUE            reduce using rule 4 (OpenFor -> .)
    FALSE           reduce using rule 4 (OpenFor -> .)
    IMAGINARY       reduce using rule 4 (OpenFor -> .)
    SEMICOLON       reduce using rule 4 (OpenFor -> .)

    OpenFor                        shift and go to state 282

state 263

    (51) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ExpressionList                 shift and go to state 283
    Expression                     shift and go to state 68
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 264

    (76) TypeList -> TypeList COMMA IDENT .

    RIGHT_PARENTHESIS reduce using rule 76 (TypeList -> TypeList COMMA IDENT .)
    COMMA           reduce using rule 76 (TypeList -> TypeList COMMA IDENT .)


state 265

    (77) TypeList -> TypeList COMMA Type .

    RIGHT_PARENTHESIS reduce using rule 77 (TypeList -> TypeList COMMA Type .)
    COMMA           reduce using rule 77 (TypeList -> TypeList COMMA Type .)


state 266

    (41) ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE . ExpressionList RIGHT_BRACE
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 68
    ExpressionList                 shift and go to state 284
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 267

    (132) Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .

    PERIOD          reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    LEFT_BRACKET    reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    LEFT_PARENTHESIS reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    LOGICAL_OR      reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    LOGICAL_AND     reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    EQUAL           reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    LESS_THAN_EQUAL reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    GREATER_THAN_EQUAL reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    ADD             reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    SUBTRACT        reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    OR              reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    XOR             reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    MULTIPLY        reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    QUOTIENT        reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    REMAINDER       reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    SHIFT_LEFT      reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    SHIFT_RIGHT     reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    AND             reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    AND_NOT         reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    RIGHT_BRACKET   reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    ADD_ASSIGNMENT  reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    SUB_ASSIGNMENT  reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    MUL_ASSIGNMENT  reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    QUO_ASSIGNMENT  reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    REM_ASSIGNMENT  reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    AND_ASSIGNMENT  reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    AND_NOT_ASSIGNMENT reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    OR_ASSIGNMENT   reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    XOR_ASSIGNMENT  reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    ASSIGNMENT      reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    LEFT_BRACE      reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    RIGHT_BRACE     reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    COLON           reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    INCREMENT       reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)
    DECREMENT       reduce using rule 132 (Arguments -> LEFT_PARENTHESIS ExpressionList COMMA RIGHT_PARENTHESIS .)


state 268

    (62) StructType -> STRUCT OpenStruct LEFT_BRACE FieldDeclStar RIGHT_BRACE CloseStruct .

    SEMICOLON       reduce using rule 62 (StructType -> STRUCT OpenStruct LEFT_BRACE FieldDeclStar RIGHT_BRACE CloseStruct .)


state 269

    (63) FieldDeclStar -> FieldDeclStar FieldDecl SEMICOLON .

    RIGHT_BRACE     reduce using rule 63 (FieldDeclStar -> FieldDeclStar FieldDecl SEMICOLON .)
    IDENT           reduce using rule 63 (FieldDeclStar -> FieldDeclStar FieldDecl SEMICOLON .)


state 270

    (68) FieldDecl -> IDENT IDENT .

    SEMICOLON       reduce using rule 68 (FieldDecl -> IDENT IDENT .)


state 271

    (65) FieldDecl -> IDENT COMMA . IdentifierList Type
    (66) FieldDecl -> IDENT COMMA . IdentifierList IDENT
    (70) FieldDecl -> IDENT COMMA . IdentifierList STRUCT MULTIPLY IDENT
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList

    IDENT           shift and go to state 33

    IdentifierList                 shift and go to state 285

state 272

    (67) FieldDecl -> IDENT Type .

    SEMICOLON       reduce using rule 67 (FieldDecl -> IDENT Type .)


state 273

    (69) FieldDecl -> IDENT STRUCT . MULTIPLY IDENT

    MULTIPLY        shift and go to state 286


state 274

    (152) Statement -> OpenScope Block CloseScope .

    SEMICOLON       reduce using rule 152 (Statement -> OpenScope Block CloseScope .)


state 275

    (163) Assignment -> ExpressionList assign_op ExpressionList .
    (40) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 163 (Assignment -> ExpressionList assign_op ExpressionList .)
    LEFT_BRACE      reduce using rule 163 (Assignment -> ExpressionList assign_op ExpressionList .)
    COMMA           shift and go to state 122


state 276

    (176) IfStmt -> IF OpenScope Expression . Block CloseScope
    (178) IfStmt -> IF OpenScope Expression . Block CloseScope ELSE OpenScope IfStmt CloseScope
    (179) IfStmt -> IF OpenScope Expression . Block CloseScope ELSE OpenScope Block CloseScope
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression
    (156) SimpleStmt -> Expression .
    (161) IncDecStmt -> Expression . INCREMENT
    (162) IncDecStmt -> Expression . DECREMENT
    (39) ExpressionList -> Expression .
    (91) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141
    SEMICOLON       reduce using rule 156 (SimpleStmt -> Expression .)
    INCREMENT       shift and go to state 239
    DECREMENT       shift and go to state 240
    COMMA           reduce using rule 39 (ExpressionList -> Expression .)
    ADD_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    SUB_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    MUL_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    QUO_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    REM_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    AND_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    OR_ASSIGNMENT   reduce using rule 39 (ExpressionList -> Expression .)
    XOR_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    ASSIGNMENT      reduce using rule 39 (ExpressionList -> Expression .)
    LEFT_BRACE      shift and go to state 113

    Block                          shift and go to state 287

state 277

    (177) IfStmt -> IF OpenScope SimpleStmt . SEMICOLON Expression Block CloseScope
    (180) IfStmt -> IF OpenScope SimpleStmt . SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> IF OpenScope SimpleStmt . SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope

    SEMICOLON       shift and go to state 288


state 278

    (123) PrimaryExpr -> IDENT .
    (37) IdentifierList -> IDENT .
    (38) IdentifierList -> IDENT . COMMA IdentifierList

    PERIOD          reduce using rule 123 (PrimaryExpr -> IDENT .)
    LEFT_BRACKET    reduce using rule 123 (PrimaryExpr -> IDENT .)
    LEFT_PARENTHESIS reduce using rule 123 (PrimaryExpr -> IDENT .)
    LOGICAL_OR      reduce using rule 123 (PrimaryExpr -> IDENT .)
    LOGICAL_AND     reduce using rule 123 (PrimaryExpr -> IDENT .)
    EQUAL           reduce using rule 123 (PrimaryExpr -> IDENT .)
    NOT_EQUAL       reduce using rule 123 (PrimaryExpr -> IDENT .)
    LESS_THAN       reduce using rule 123 (PrimaryExpr -> IDENT .)
    LESS_THAN_EQUAL reduce using rule 123 (PrimaryExpr -> IDENT .)
    GREATER_THAN    reduce using rule 123 (PrimaryExpr -> IDENT .)
    GREATER_THAN_EQUAL reduce using rule 123 (PrimaryExpr -> IDENT .)
    ADD             reduce using rule 123 (PrimaryExpr -> IDENT .)
    SUBTRACT        reduce using rule 123 (PrimaryExpr -> IDENT .)
    OR              reduce using rule 123 (PrimaryExpr -> IDENT .)
    XOR             reduce using rule 123 (PrimaryExpr -> IDENT .)
    MULTIPLY        reduce using rule 123 (PrimaryExpr -> IDENT .)
    QUOTIENT        reduce using rule 123 (PrimaryExpr -> IDENT .)
    REMAINDER       reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_LEFT      reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_RIGHT     reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND             reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> IDENT .)
    INCREMENT       reduce using rule 123 (PrimaryExpr -> IDENT .)
    DECREMENT       reduce using rule 123 (PrimaryExpr -> IDENT .)
    LEFT_BRACE      reduce using rule 123 (PrimaryExpr -> IDENT .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> IDENT .)
    ADD_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    SUB_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    MUL_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    QUO_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    REM_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    AND_NOT_ASSIGNMENT reduce using rule 123 (PrimaryExpr -> IDENT .)
    OR_ASSIGNMENT   reduce using rule 123 (PrimaryExpr -> IDENT .)
    XOR_ASSIGNMENT  reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 123 (PrimaryExpr -> IDENT .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 123 (PrimaryExpr -> IDENT .)
    ASSIGNMENT      reduce using rule 123 (PrimaryExpr -> IDENT .)
    DEFINE          reduce using rule 37 (IdentifierList -> IDENT .)
    COMMA           shift and go to state 46

  ! COMMA           [ reduce using rule 123 (PrimaryExpr -> IDENT .) ]


state 279

    (182) SwitchStmt -> SWITCH LEFT_BRACE OpenSwitch . ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (187) ExprCaseClauseStar -> . ExprCaseClauseStar ExprCaseClause
    (188) ExprCaseClauseStar -> . ExprCaseClause
    (189) ExprCaseClause -> . OpenScope CASE ExpressionList COLON StatementList CloseScope
    (190) ExprCaseClause -> . DEFAULT COLON OpenScope StatementList CloseScope
    (2) OpenScope -> .

    DEFAULT         shift and go to state 292
    CASE            reduce using rule 2 (OpenScope -> .)

    ExprCaseClauseStar             shift and go to state 289
    ExprCaseClause                 shift and go to state 290
    OpenScope                      shift and go to state 291

state 280

    (183) SwitchStmt -> SWITCH SimpleStmt SEMICOLON . LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (184) SwitchStmt -> SWITCH SimpleStmt SEMICOLON . ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (186) ExpressionName -> . Expression
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACE      shift and go to state 293
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ExpressionName                 shift and go to state 294
    Expression                     shift and go to state 295
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 281

    (185) SwitchStmt -> SWITCH ExpressionName LEFT_BRACE . OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (6) OpenSwitch -> .

    DEFAULT         reduce using rule 6 (OpenSwitch -> .)
    CASE            reduce using rule 6 (OpenSwitch -> .)

    OpenSwitch                     shift and go to state 296

state 282

    (191) ForStmt -> FOR OpenScope OpenFor . ForClause Block CloseFor CloseScope
    (192) ForStmt -> FOR OpenScope OpenFor . Expression Block CloseFor CloseScope
    (193) ForStmt -> FOR OpenScope OpenFor . Block CloseFor CloseScope
    (194) ForClause -> . SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt
    (195) ForClause -> . SimpleStmt SEMICOLON SEMICOLON SimpleStmt
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (91) Block -> . LEFT_BRACE StatementList RIGHT_BRACE
    (156) SimpleStmt -> . Expression
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (160) SimpleStmt -> .
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (161) IncDecStmt -> . Expression INCREMENT
    (162) IncDecStmt -> . Expression DECREMENT
    (163) Assignment -> . ExpressionList assign_op ExpressionList
    (51) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACE      shift and go to state 113
    SEMICOLON       reduce using rule 160 (SimpleStmt -> .)
    IDENT           shift and go to state 278
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    LEFT_BRACKET    shift and go to state 69
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ForClause                      shift and go to state 297
    Block                          shift and go to state 298
    Expression                     shift and go to state 299
    SimpleStmt                     shift and go to state 300
    UnaryExpr                      shift and go to state 71
    IncDecStmt                     shift and go to state 212
    Assignment                     shift and go to state 213
    ShortVarDecl                   shift and go to state 214
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    ExpressionList                 shift and go to state 216
    IdentifierList                 shift and go to state 223
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 283

    (51) ShortVarDecl -> IdentifierList DEFINE ExpressionList .
    (40) ExpressionList -> ExpressionList . COMMA Expression

    SEMICOLON       reduce using rule 51 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    LEFT_BRACE      reduce using rule 51 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    COMMA           shift and go to state 122


state 284

    (41) ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList . RIGHT_BRACE
    (40) ExpressionList -> ExpressionList . COMMA Expression

    RIGHT_BRACE     shift and go to state 301
    COMMA           shift and go to state 122


state 285

    (65) FieldDecl -> IDENT COMMA IdentifierList . Type
    (66) FieldDecl -> IDENT COMMA IdentifierList . IDENT
    (70) FieldDecl -> IDENT COMMA IdentifierList . STRUCT MULTIPLY IDENT
    (55) Type -> . LEFT_PARENTHESIS IDENT RIGHT_PARENTHESIS
    (56) Type -> . TypeLit
    (57) Type -> . LEFT_PARENTHESIS Type RIGHT_PARENTHESIS
    (58) TypeLit -> . ArrayType
    (59) TypeLit -> . PointerType
    (60) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET Type
    (61) ArrayType -> . LEFT_BRACKET INT RIGHT_BRACKET IDENT
    (71) PointerType -> . MULTIPLY Type
    (72) PointerType -> . MULTIPLY IDENT

    IDENT           shift and go to state 302
    STRUCT          shift and go to state 304
    LEFT_PARENTHESIS shift and go to state 54
    LEFT_BRACKET    shift and go to state 58
    MULTIPLY        shift and go to state 59

    Type                           shift and go to state 303
    TypeLit                        shift and go to state 55
    ArrayType                      shift and go to state 56
    PointerType                    shift and go to state 57

state 286

    (69) FieldDecl -> IDENT STRUCT MULTIPLY . IDENT

    IDENT           shift and go to state 305


state 287

    (176) IfStmt -> IF OpenScope Expression Block . CloseScope
    (178) IfStmt -> IF OpenScope Expression Block . CloseScope ELSE OpenScope IfStmt CloseScope
    (179) IfStmt -> IF OpenScope Expression Block . CloseScope ELSE OpenScope Block CloseScope
    (3) CloseScope -> .

    ELSE            reduce using rule 3 (CloseScope -> .)
    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 306

state 288

    (177) IfStmt -> IF OpenScope SimpleStmt SEMICOLON . Expression Block CloseScope
    (180) IfStmt -> IF OpenScope SimpleStmt SEMICOLON . Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> IF OpenScope SimpleStmt SEMICOLON . Expression Block CloseScope ELSE OpenScope Block CloseScope
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 307
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 289

    (182) SwitchStmt -> SWITCH LEFT_BRACE OpenSwitch ExprCaseClauseStar . CloseSwitch RIGHT_BRACE
    (187) ExprCaseClauseStar -> ExprCaseClauseStar . ExprCaseClause
    (7) CloseSwitch -> .
    (189) ExprCaseClause -> . OpenScope CASE ExpressionList COLON StatementList CloseScope
    (190) ExprCaseClause -> . DEFAULT COLON OpenScope StatementList CloseScope
    (2) OpenScope -> .

    RIGHT_BRACE     reduce using rule 7 (CloseSwitch -> .)
    DEFAULT         shift and go to state 292
    CASE            reduce using rule 2 (OpenScope -> .)

    CloseSwitch                    shift and go to state 308
    ExprCaseClause                 shift and go to state 309
    OpenScope                      shift and go to state 291

state 290

    (188) ExprCaseClauseStar -> ExprCaseClause .

    DEFAULT         reduce using rule 188 (ExprCaseClauseStar -> ExprCaseClause .)
    RIGHT_BRACE     reduce using rule 188 (ExprCaseClauseStar -> ExprCaseClause .)
    CASE            reduce using rule 188 (ExprCaseClauseStar -> ExprCaseClause .)


state 291

    (189) ExprCaseClause -> OpenScope . CASE ExpressionList COLON StatementList CloseScope

    CASE            shift and go to state 310


state 292

    (190) ExprCaseClause -> DEFAULT . COLON OpenScope StatementList CloseScope

    COLON           shift and go to state 311


state 293

    (183) SwitchStmt -> SWITCH SimpleStmt SEMICOLON LEFT_BRACE . OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (6) OpenSwitch -> .

    DEFAULT         reduce using rule 6 (OpenSwitch -> .)
    CASE            reduce using rule 6 (OpenSwitch -> .)

    OpenSwitch                     shift and go to state 312

state 294

    (184) SwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionName . LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE

    LEFT_BRACE      shift and go to state 313


state 295

    (186) ExpressionName -> Expression .
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    LEFT_BRACE      reduce using rule 186 (ExpressionName -> Expression .)
    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141


state 296

    (185) SwitchStmt -> SWITCH ExpressionName LEFT_BRACE OpenSwitch . ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (187) ExprCaseClauseStar -> . ExprCaseClauseStar ExprCaseClause
    (188) ExprCaseClauseStar -> . ExprCaseClause
    (189) ExprCaseClause -> . OpenScope CASE ExpressionList COLON StatementList CloseScope
    (190) ExprCaseClause -> . DEFAULT COLON OpenScope StatementList CloseScope
    (2) OpenScope -> .

    DEFAULT         shift and go to state 292
    CASE            reduce using rule 2 (OpenScope -> .)

    ExprCaseClauseStar             shift and go to state 314
    ExprCaseClause                 shift and go to state 290
    OpenScope                      shift and go to state 291

state 297

    (191) ForStmt -> FOR OpenScope OpenFor ForClause . Block CloseFor CloseScope
    (91) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    LEFT_BRACE      shift and go to state 113

    Block                          shift and go to state 315

state 298

    (193) ForStmt -> FOR OpenScope OpenFor Block . CloseFor CloseScope
    (5) CloseFor -> .

    SEMICOLON       reduce using rule 5 (CloseFor -> .)

    CloseFor                       shift and go to state 316

state 299

    (192) ForStmt -> FOR OpenScope OpenFor Expression . Block CloseFor CloseScope
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression
    (156) SimpleStmt -> Expression .
    (161) IncDecStmt -> Expression . INCREMENT
    (162) IncDecStmt -> Expression . DECREMENT
    (39) ExpressionList -> Expression .
    (91) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141
    SEMICOLON       reduce using rule 156 (SimpleStmt -> Expression .)
    INCREMENT       shift and go to state 239
    DECREMENT       shift and go to state 240
    COMMA           reduce using rule 39 (ExpressionList -> Expression .)
    ADD_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    SUB_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    MUL_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    QUO_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    REM_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    AND_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    AND_NOT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    OR_ASSIGNMENT   reduce using rule 39 (ExpressionList -> Expression .)
    XOR_ASSIGNMENT  reduce using rule 39 (ExpressionList -> Expression .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 39 (ExpressionList -> Expression .)
    ASSIGNMENT      reduce using rule 39 (ExpressionList -> Expression .)
    LEFT_BRACE      shift and go to state 113

    Block                          shift and go to state 317

state 300

    (194) ForClause -> SimpleStmt . SEMICOLON Expression SEMICOLON SimpleStmt
    (195) ForClause -> SimpleStmt . SEMICOLON SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 318


state 301

    (41) ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .

    COMMA           reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    SEMICOLON       reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    RIGHT_PARENTHESIS reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    ADD_ASSIGNMENT  reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    SUB_ASSIGNMENT  reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    MUL_ASSIGNMENT  reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    QUO_ASSIGNMENT  reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    REM_ASSIGNMENT  reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    AND_ASSIGNMENT  reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    AND_NOT_ASSIGNMENT reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    OR_ASSIGNMENT   reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    XOR_ASSIGNMENT  reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    SHIFT_LEFT_ASSIGNMENT reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    SHIFT_RIGHT_ASSIGNMENT reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    ASSIGNMENT      reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    LEFT_BRACE      reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    RIGHT_BRACE     reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)
    COLON           reduce using rule 41 (ExpressionList -> LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE .)


state 302

    (66) FieldDecl -> IDENT COMMA IdentifierList IDENT .

    SEMICOLON       reduce using rule 66 (FieldDecl -> IDENT COMMA IdentifierList IDENT .)


state 303

    (65) FieldDecl -> IDENT COMMA IdentifierList Type .

    SEMICOLON       reduce using rule 65 (FieldDecl -> IDENT COMMA IdentifierList Type .)


state 304

    (70) FieldDecl -> IDENT COMMA IdentifierList STRUCT . MULTIPLY IDENT

    MULTIPLY        shift and go to state 319


state 305

    (69) FieldDecl -> IDENT STRUCT MULTIPLY IDENT .

    SEMICOLON       reduce using rule 69 (FieldDecl -> IDENT STRUCT MULTIPLY IDENT .)


state 306

    (176) IfStmt -> IF OpenScope Expression Block CloseScope .
    (178) IfStmt -> IF OpenScope Expression Block CloseScope . ELSE OpenScope IfStmt CloseScope
    (179) IfStmt -> IF OpenScope Expression Block CloseScope . ELSE OpenScope Block CloseScope

    SEMICOLON       reduce using rule 176 (IfStmt -> IF OpenScope Expression Block CloseScope .)
    ELSE            shift and go to state 320


state 307

    (177) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression . Block CloseScope
    (180) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression . Block CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression . Block CloseScope ELSE OpenScope Block CloseScope
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression
    (91) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141
    LEFT_BRACE      shift and go to state 113

    Block                          shift and go to state 321

state 308

    (182) SwitchStmt -> SWITCH LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 322


state 309

    (187) ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .

    DEFAULT         reduce using rule 187 (ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .)
    RIGHT_BRACE     reduce using rule 187 (ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .)
    CASE            reduce using rule 187 (ExprCaseClauseStar -> ExprCaseClauseStar ExprCaseClause .)


state 310

    (189) ExprCaseClause -> OpenScope CASE . ExpressionList COLON StatementList CloseScope
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    ExpressionList                 shift and go to state 323
    Expression                     shift and go to state 68
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 311

    (190) ExprCaseClause -> DEFAULT COLON . OpenScope StatementList CloseScope
    (2) OpenScope -> .

    RETURN          reduce using rule 2 (OpenScope -> .)
    BREAK           reduce using rule 2 (OpenScope -> .)
    CONTINUE        reduce using rule 2 (OpenScope -> .)
    IF              reduce using rule 2 (OpenScope -> .)
    SWITCH          reduce using rule 2 (OpenScope -> .)
    FOR             reduce using rule 2 (OpenScope -> .)
    CONST           reduce using rule 2 (OpenScope -> .)
    TYPE            reduce using rule 2 (OpenScope -> .)
    VARIABLE        reduce using rule 2 (OpenScope -> .)
    LEFT_BRACKET    reduce using rule 2 (OpenScope -> .)
    IDENT           reduce using rule 2 (OpenScope -> .)
    LEFT_PARENTHESIS reduce using rule 2 (OpenScope -> .)
    ADD             reduce using rule 2 (OpenScope -> .)
    SUBTRACT        reduce using rule 2 (OpenScope -> .)
    NOT             reduce using rule 2 (OpenScope -> .)
    XOR             reduce using rule 2 (OpenScope -> .)
    MULTIPLY        reduce using rule 2 (OpenScope -> .)
    AND             reduce using rule 2 (OpenScope -> .)
    ARROW           reduce using rule 2 (OpenScope -> .)
    INT             reduce using rule 2 (OpenScope -> .)
    FLOAT           reduce using rule 2 (OpenScope -> .)
    RUNE            reduce using rule 2 (OpenScope -> .)
    STRING          reduce using rule 2 (OpenScope -> .)
    TRUE            reduce using rule 2 (OpenScope -> .)
    FALSE           reduce using rule 2 (OpenScope -> .)
    IMAGINARY       reduce using rule 2 (OpenScope -> .)
    SEMICOLON       reduce using rule 2 (OpenScope -> .)
    LEFT_BRACE      reduce using rule 2 (OpenScope -> .)
    DEFAULT         reduce using rule 2 (OpenScope -> .)
    RIGHT_BRACE     reduce using rule 2 (OpenScope -> .)
    CASE            reduce using rule 2 (OpenScope -> .)

    OpenScope                      shift and go to state 324

state 312

    (183) SwitchStmt -> SWITCH SimpleStmt SEMICOLON LEFT_BRACE OpenSwitch . ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (187) ExprCaseClauseStar -> . ExprCaseClauseStar ExprCaseClause
    (188) ExprCaseClauseStar -> . ExprCaseClause
    (189) ExprCaseClause -> . OpenScope CASE ExpressionList COLON StatementList CloseScope
    (190) ExprCaseClause -> . DEFAULT COLON OpenScope StatementList CloseScope
    (2) OpenScope -> .

    DEFAULT         shift and go to state 292
    CASE            reduce using rule 2 (OpenScope -> .)

    ExprCaseClauseStar             shift and go to state 325
    ExprCaseClause                 shift and go to state 290
    OpenScope                      shift and go to state 291

state 313

    (184) SwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionName LEFT_BRACE . OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (6) OpenSwitch -> .

    DEFAULT         reduce using rule 6 (OpenSwitch -> .)
    CASE            reduce using rule 6 (OpenSwitch -> .)

    OpenSwitch                     shift and go to state 326

state 314

    (185) SwitchStmt -> SWITCH ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar . CloseSwitch RIGHT_BRACE
    (187) ExprCaseClauseStar -> ExprCaseClauseStar . ExprCaseClause
    (7) CloseSwitch -> .
    (189) ExprCaseClause -> . OpenScope CASE ExpressionList COLON StatementList CloseScope
    (190) ExprCaseClause -> . DEFAULT COLON OpenScope StatementList CloseScope
    (2) OpenScope -> .

    RIGHT_BRACE     reduce using rule 7 (CloseSwitch -> .)
    DEFAULT         shift and go to state 292
    CASE            reduce using rule 2 (OpenScope -> .)

    CloseSwitch                    shift and go to state 327
    ExprCaseClause                 shift and go to state 309
    OpenScope                      shift and go to state 291

state 315

    (191) ForStmt -> FOR OpenScope OpenFor ForClause Block . CloseFor CloseScope
    (5) CloseFor -> .

    SEMICOLON       reduce using rule 5 (CloseFor -> .)

    CloseFor                       shift and go to state 328

state 316

    (193) ForStmt -> FOR OpenScope OpenFor Block CloseFor . CloseScope
    (3) CloseScope -> .

    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 329

state 317

    (192) ForStmt -> FOR OpenScope OpenFor Expression Block . CloseFor CloseScope
    (5) CloseFor -> .

    SEMICOLON       reduce using rule 5 (CloseFor -> .)

    CloseFor                       shift and go to state 330

state 318

    (194) ForClause -> SimpleStmt SEMICOLON . Expression SEMICOLON SimpleStmt
    (195) ForClause -> SimpleStmt SEMICOLON . SEMICOLON SimpleStmt
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    SEMICOLON       shift and go to state 331
    IDENT           shift and go to state 70
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    Expression                     shift and go to state 332
    UnaryExpr                      shift and go to state 71
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 319

    (70) FieldDecl -> IDENT COMMA IdentifierList STRUCT MULTIPLY . IDENT

    IDENT           shift and go to state 333


state 320

    (178) IfStmt -> IF OpenScope Expression Block CloseScope ELSE . OpenScope IfStmt CloseScope
    (179) IfStmt -> IF OpenScope Expression Block CloseScope ELSE . OpenScope Block CloseScope
    (2) OpenScope -> .

    IF              reduce using rule 2 (OpenScope -> .)
    LEFT_BRACE      reduce using rule 2 (OpenScope -> .)

    OpenScope                      shift and go to state 334

state 321

    (177) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block . CloseScope
    (180) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block . CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block . CloseScope ELSE OpenScope Block CloseScope
    (3) CloseScope -> .

    ELSE            reduce using rule 3 (CloseScope -> .)
    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 335

state 322

    (182) SwitchStmt -> SWITCH LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE .

    SEMICOLON       reduce using rule 182 (SwitchStmt -> SWITCH LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE .)


state 323

    (189) ExprCaseClause -> OpenScope CASE ExpressionList . COLON StatementList CloseScope
    (40) ExpressionList -> ExpressionList . COMMA Expression

    COLON           shift and go to state 336
    COMMA           shift and go to state 122


state 324

    (190) ExprCaseClause -> DEFAULT COLON OpenScope . StatementList CloseScope
    (92) StatementList -> . StatementList Statement SEMICOLON
    (93) StatementList -> .

    RETURN          reduce using rule 93 (StatementList -> .)
    BREAK           reduce using rule 93 (StatementList -> .)
    CONTINUE        reduce using rule 93 (StatementList -> .)
    IF              reduce using rule 93 (StatementList -> .)
    SWITCH          reduce using rule 93 (StatementList -> .)
    FOR             reduce using rule 93 (StatementList -> .)
    CONST           reduce using rule 93 (StatementList -> .)
    TYPE            reduce using rule 93 (StatementList -> .)
    VARIABLE        reduce using rule 93 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 93 (StatementList -> .)
    IDENT           reduce using rule 93 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 93 (StatementList -> .)
    ADD             reduce using rule 93 (StatementList -> .)
    SUBTRACT        reduce using rule 93 (StatementList -> .)
    NOT             reduce using rule 93 (StatementList -> .)
    XOR             reduce using rule 93 (StatementList -> .)
    MULTIPLY        reduce using rule 93 (StatementList -> .)
    AND             reduce using rule 93 (StatementList -> .)
    ARROW           reduce using rule 93 (StatementList -> .)
    INT             reduce using rule 93 (StatementList -> .)
    FLOAT           reduce using rule 93 (StatementList -> .)
    RUNE            reduce using rule 93 (StatementList -> .)
    STRING          reduce using rule 93 (StatementList -> .)
    TRUE            reduce using rule 93 (StatementList -> .)
    FALSE           reduce using rule 93 (StatementList -> .)
    IMAGINARY       reduce using rule 93 (StatementList -> .)
    SEMICOLON       reduce using rule 93 (StatementList -> .)
    LEFT_BRACE      reduce using rule 93 (StatementList -> .)
    DEFAULT         reduce using rule 93 (StatementList -> .)
    RIGHT_BRACE     reduce using rule 93 (StatementList -> .)
    CASE            reduce using rule 93 (StatementList -> .)

    StatementList                  shift and go to state 337

state 325

    (183) SwitchStmt -> SWITCH SimpleStmt SEMICOLON LEFT_BRACE OpenSwitch ExprCaseClauseStar . CloseSwitch RIGHT_BRACE
    (187) ExprCaseClauseStar -> ExprCaseClauseStar . ExprCaseClause
    (7) CloseSwitch -> .
    (189) ExprCaseClause -> . OpenScope CASE ExpressionList COLON StatementList CloseScope
    (190) ExprCaseClause -> . DEFAULT COLON OpenScope StatementList CloseScope
    (2) OpenScope -> .

    RIGHT_BRACE     reduce using rule 7 (CloseSwitch -> .)
    DEFAULT         shift and go to state 292
    CASE            reduce using rule 2 (OpenScope -> .)

    CloseSwitch                    shift and go to state 338
    ExprCaseClause                 shift and go to state 309
    OpenScope                      shift and go to state 291

state 326

    (184) SwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionName LEFT_BRACE OpenSwitch . ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (187) ExprCaseClauseStar -> . ExprCaseClauseStar ExprCaseClause
    (188) ExprCaseClauseStar -> . ExprCaseClause
    (189) ExprCaseClause -> . OpenScope CASE ExpressionList COLON StatementList CloseScope
    (190) ExprCaseClause -> . DEFAULT COLON OpenScope StatementList CloseScope
    (2) OpenScope -> .

    DEFAULT         shift and go to state 292
    CASE            reduce using rule 2 (OpenScope -> .)

    ExprCaseClauseStar             shift and go to state 339
    ExprCaseClause                 shift and go to state 290
    OpenScope                      shift and go to state 291

state 327

    (185) SwitchStmt -> SWITCH ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 340


state 328

    (191) ForStmt -> FOR OpenScope OpenFor ForClause Block CloseFor . CloseScope
    (3) CloseScope -> .

    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 341

state 329

    (193) ForStmt -> FOR OpenScope OpenFor Block CloseFor CloseScope .

    SEMICOLON       reduce using rule 193 (ForStmt -> FOR OpenScope OpenFor Block CloseFor CloseScope .)


state 330

    (192) ForStmt -> FOR OpenScope OpenFor Expression Block CloseFor . CloseScope
    (3) CloseScope -> .

    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 342

state 331

    (195) ForClause -> SimpleStmt SEMICOLON SEMICOLON . SimpleStmt
    (156) SimpleStmt -> . Expression
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (160) SimpleStmt -> .
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (161) IncDecStmt -> . Expression INCREMENT
    (162) IncDecStmt -> . Expression DECREMENT
    (163) Assignment -> . ExpressionList assign_op ExpressionList
    (51) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACE      reduce using rule 160 (SimpleStmt -> .)
    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 218
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    SimpleStmt                     shift and go to state 343
    Expression                     shift and go to state 211
    IncDecStmt                     shift and go to state 212
    Assignment                     shift and go to state 213
    ShortVarDecl                   shift and go to state 214
    UnaryExpr                      shift and go to state 71
    ExpressionList                 shift and go to state 216
    IdentifierList                 shift and go to state 223
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 332

    (194) ForClause -> SimpleStmt SEMICOLON Expression . SEMICOLON SimpleStmt
    (95) Expression -> Expression . LOGICAL_OR Expression
    (96) Expression -> Expression . LOGICAL_AND Expression
    (97) Expression -> Expression . EQUAL Expression
    (98) Expression -> Expression . NOT_EQUAL Expression
    (99) Expression -> Expression . LESS_THAN Expression
    (100) Expression -> Expression . LESS_THAN_EQUAL Expression
    (101) Expression -> Expression . GREATER_THAN Expression
    (102) Expression -> Expression . GREATER_THAN_EQUAL Expression
    (103) Expression -> Expression . ADD Expression
    (104) Expression -> Expression . SUBTRACT Expression
    (105) Expression -> Expression . OR Expression
    (106) Expression -> Expression . XOR Expression
    (107) Expression -> Expression . MULTIPLY Expression
    (108) Expression -> Expression . QUOTIENT Expression
    (109) Expression -> Expression . REMAINDER Expression
    (110) Expression -> Expression . SHIFT_LEFT Expression
    (111) Expression -> Expression . SHIFT_RIGHT Expression
    (112) Expression -> Expression . AND Expression
    (113) Expression -> Expression . AND_NOT Expression

    SEMICOLON       shift and go to state 344
    LOGICAL_OR      shift and go to state 123
    LOGICAL_AND     shift and go to state 124
    EQUAL           shift and go to state 125
    NOT_EQUAL       shift and go to state 126
    LESS_THAN       shift and go to state 127
    LESS_THAN_EQUAL shift and go to state 128
    GREATER_THAN    shift and go to state 129
    GREATER_THAN_EQUAL shift and go to state 130
    ADD             shift and go to state 131
    SUBTRACT        shift and go to state 132
    OR              shift and go to state 133
    XOR             shift and go to state 134
    MULTIPLY        shift and go to state 135
    QUOTIENT        shift and go to state 136
    REMAINDER       shift and go to state 137
    SHIFT_LEFT      shift and go to state 138
    SHIFT_RIGHT     shift and go to state 139
    AND             shift and go to state 140
    AND_NOT         shift and go to state 141


state 333

    (70) FieldDecl -> IDENT COMMA IdentifierList STRUCT MULTIPLY IDENT .

    SEMICOLON       reduce using rule 70 (FieldDecl -> IDENT COMMA IdentifierList STRUCT MULTIPLY IDENT .)


state 334

    (178) IfStmt -> IF OpenScope Expression Block CloseScope ELSE OpenScope . IfStmt CloseScope
    (179) IfStmt -> IF OpenScope Expression Block CloseScope ELSE OpenScope . Block CloseScope
    (176) IfStmt -> . IF OpenScope Expression Block CloseScope
    (177) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope
    (178) IfStmt -> . IF OpenScope Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (179) IfStmt -> . IF OpenScope Expression Block CloseScope ELSE OpenScope Block CloseScope
    (180) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope
    (91) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    IF              shift and go to state 220
    LEFT_BRACE      shift and go to state 113

    Block                          shift and go to state 345
    IfStmt                         shift and go to state 346

state 335

    (177) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope .
    (180) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope . ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope . ELSE OpenScope Block CloseScope

    SEMICOLON       reduce using rule 177 (IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope .)
    ELSE            shift and go to state 347


state 336

    (189) ExprCaseClause -> OpenScope CASE ExpressionList COLON . StatementList CloseScope
    (92) StatementList -> . StatementList Statement SEMICOLON
    (93) StatementList -> .

    RETURN          reduce using rule 93 (StatementList -> .)
    BREAK           reduce using rule 93 (StatementList -> .)
    CONTINUE        reduce using rule 93 (StatementList -> .)
    IF              reduce using rule 93 (StatementList -> .)
    SWITCH          reduce using rule 93 (StatementList -> .)
    FOR             reduce using rule 93 (StatementList -> .)
    CONST           reduce using rule 93 (StatementList -> .)
    TYPE            reduce using rule 93 (StatementList -> .)
    VARIABLE        reduce using rule 93 (StatementList -> .)
    LEFT_BRACKET    reduce using rule 93 (StatementList -> .)
    IDENT           reduce using rule 93 (StatementList -> .)
    LEFT_PARENTHESIS reduce using rule 93 (StatementList -> .)
    ADD             reduce using rule 93 (StatementList -> .)
    SUBTRACT        reduce using rule 93 (StatementList -> .)
    NOT             reduce using rule 93 (StatementList -> .)
    XOR             reduce using rule 93 (StatementList -> .)
    MULTIPLY        reduce using rule 93 (StatementList -> .)
    AND             reduce using rule 93 (StatementList -> .)
    ARROW           reduce using rule 93 (StatementList -> .)
    INT             reduce using rule 93 (StatementList -> .)
    FLOAT           reduce using rule 93 (StatementList -> .)
    RUNE            reduce using rule 93 (StatementList -> .)
    STRING          reduce using rule 93 (StatementList -> .)
    TRUE            reduce using rule 93 (StatementList -> .)
    FALSE           reduce using rule 93 (StatementList -> .)
    IMAGINARY       reduce using rule 93 (StatementList -> .)
    SEMICOLON       reduce using rule 93 (StatementList -> .)
    LEFT_BRACE      reduce using rule 93 (StatementList -> .)
    DEFAULT         reduce using rule 93 (StatementList -> .)
    RIGHT_BRACE     reduce using rule 93 (StatementList -> .)
    CASE            reduce using rule 93 (StatementList -> .)

    StatementList                  shift and go to state 348

state 337

    (190) ExprCaseClause -> DEFAULT COLON OpenScope StatementList . CloseScope
    (92) StatementList -> StatementList . Statement SEMICOLON
    (3) CloseScope -> .
    (147) Statement -> . Declaration
    (148) Statement -> . SimpleStmt
    (149) Statement -> . ReturnStmt
    (150) Statement -> . BreakStmt
    (151) Statement -> . ContinueStmt
    (152) Statement -> . OpenScope Block CloseScope
    (153) Statement -> . IfStmt
    (154) Statement -> . SwitchStmt
    (155) Statement -> . ForStmt
    (25) Declaration -> . ConstDecl
    (26) Declaration -> . StructDecl
    (27) Declaration -> . VarDecl
    (156) SimpleStmt -> . Expression
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (160) SimpleStmt -> .
    (196) ReturnStmt -> . RETURN ExpressionList
    (197) ReturnStmt -> . RETURN
    (198) BreakStmt -> . BREAK IDENT
    (199) BreakStmt -> . BREAK
    (200) ContinueStmt -> . CONTINUE IDENT
    (201) ContinueStmt -> . CONTINUE
    (2) OpenScope -> .
    (176) IfStmt -> . IF OpenScope Expression Block CloseScope
    (177) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope
    (178) IfStmt -> . IF OpenScope Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (179) IfStmt -> . IF OpenScope Expression Block CloseScope ELSE OpenScope Block CloseScope
    (180) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope
    (182) SwitchStmt -> . SWITCH LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (183) SwitchStmt -> . SWITCH SimpleStmt SEMICOLON LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (184) SwitchStmt -> . SWITCH SimpleStmt SEMICOLON ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (185) SwitchStmt -> . SWITCH ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (191) ForStmt -> . FOR OpenScope OpenFor ForClause Block CloseFor CloseScope
    (192) ForStmt -> . FOR OpenScope OpenFor Expression Block CloseFor CloseScope
    (193) ForStmt -> . FOR OpenScope OpenFor Block CloseFor CloseScope
    (30) ConstDecl -> . CONST ConstSpec
    (31) ConstDecl -> . CONST LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS
    (28) StructDecl -> . TYPE StructName StructType
    (42) VarDecl -> . VARIABLE VarSpec
    (43) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (161) IncDecStmt -> . Expression INCREMENT
    (162) IncDecStmt -> . Expression DECREMENT
    (163) Assignment -> . ExpressionList assign_op ExpressionList
    (51) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    DEFAULT         reduce using rule 3 (CloseScope -> .)
    RIGHT_BRACE     reduce using rule 3 (CloseScope -> .)
    CASE            reduce using rule 3 (CloseScope -> .)
    SEMICOLON       reduce using rule 160 (SimpleStmt -> .)
    RETURN          shift and go to state 215
    BREAK           shift and go to state 217
    CONTINUE        shift and go to state 219
    LEFT_BRACE      reduce using rule 2 (OpenScope -> .)
    IF              shift and go to state 220
    SWITCH          shift and go to state 221
    FOR             shift and go to state 222
    CONST           shift and go to state 17
    TYPE            shift and go to state 18
    VARIABLE        shift and go to state 19
    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 218
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    OpenScope                      shift and go to state 207
    CloseScope                     shift and go to state 349
    Statement                      shift and go to state 201
    Declaration                    shift and go to state 202
    SimpleStmt                     shift and go to state 203
    ReturnStmt                     shift and go to state 204
    BreakStmt                      shift and go to state 205
    ContinueStmt                   shift and go to state 206
    IfStmt                         shift and go to state 208
    SwitchStmt                     shift and go to state 209
    ForStmt                        shift and go to state 210
    ConstDecl                      shift and go to state 13
    StructDecl                     shift and go to state 14
    VarDecl                        shift and go to state 15
    Expression                     shift and go to state 211
    IncDecStmt                     shift and go to state 212
    Assignment                     shift and go to state 213
    ShortVarDecl                   shift and go to state 214
    ExpressionList                 shift and go to state 216
    UnaryExpr                      shift and go to state 71
    IdentifierList                 shift and go to state 223
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 338

    (183) SwitchStmt -> SWITCH SimpleStmt SEMICOLON LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 350


state 339

    (184) SwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar . CloseSwitch RIGHT_BRACE
    (187) ExprCaseClauseStar -> ExprCaseClauseStar . ExprCaseClause
    (7) CloseSwitch -> .
    (189) ExprCaseClause -> . OpenScope CASE ExpressionList COLON StatementList CloseScope
    (190) ExprCaseClause -> . DEFAULT COLON OpenScope StatementList CloseScope
    (2) OpenScope -> .

    RIGHT_BRACE     reduce using rule 7 (CloseSwitch -> .)
    DEFAULT         shift and go to state 292
    CASE            reduce using rule 2 (OpenScope -> .)

    CloseSwitch                    shift and go to state 351
    ExprCaseClause                 shift and go to state 309
    OpenScope                      shift and go to state 291

state 340

    (185) SwitchStmt -> SWITCH ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE .

    SEMICOLON       reduce using rule 185 (SwitchStmt -> SWITCH ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE .)


state 341

    (191) ForStmt -> FOR OpenScope OpenFor ForClause Block CloseFor CloseScope .

    SEMICOLON       reduce using rule 191 (ForStmt -> FOR OpenScope OpenFor ForClause Block CloseFor CloseScope .)


state 342

    (192) ForStmt -> FOR OpenScope OpenFor Expression Block CloseFor CloseScope .

    SEMICOLON       reduce using rule 192 (ForStmt -> FOR OpenScope OpenFor Expression Block CloseFor CloseScope .)


state 343

    (195) ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt .

    LEFT_BRACE      reduce using rule 195 (ForClause -> SimpleStmt SEMICOLON SEMICOLON SimpleStmt .)


state 344

    (194) ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON . SimpleStmt
    (156) SimpleStmt -> . Expression
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (160) SimpleStmt -> .
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (161) IncDecStmt -> . Expression INCREMENT
    (162) IncDecStmt -> . Expression DECREMENT
    (163) Assignment -> . ExpressionList assign_op ExpressionList
    (51) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    LEFT_BRACE      reduce using rule 160 (SimpleStmt -> .)
    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 218
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    SimpleStmt                     shift and go to state 352
    Expression                     shift and go to state 211
    IncDecStmt                     shift and go to state 212
    Assignment                     shift and go to state 213
    ShortVarDecl                   shift and go to state 214
    UnaryExpr                      shift and go to state 71
    ExpressionList                 shift and go to state 216
    IdentifierList                 shift and go to state 223
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 345

    (179) IfStmt -> IF OpenScope Expression Block CloseScope ELSE OpenScope Block . CloseScope
    (3) CloseScope -> .

    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 353

state 346

    (178) IfStmt -> IF OpenScope Expression Block CloseScope ELSE OpenScope IfStmt . CloseScope
    (3) CloseScope -> .

    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 354

state 347

    (180) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE . OpenScope IfStmt CloseScope
    (181) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE . OpenScope Block CloseScope
    (2) OpenScope -> .

    IF              reduce using rule 2 (OpenScope -> .)
    LEFT_BRACE      reduce using rule 2 (OpenScope -> .)

    OpenScope                      shift and go to state 355

state 348

    (189) ExprCaseClause -> OpenScope CASE ExpressionList COLON StatementList . CloseScope
    (92) StatementList -> StatementList . Statement SEMICOLON
    (3) CloseScope -> .
    (147) Statement -> . Declaration
    (148) Statement -> . SimpleStmt
    (149) Statement -> . ReturnStmt
    (150) Statement -> . BreakStmt
    (151) Statement -> . ContinueStmt
    (152) Statement -> . OpenScope Block CloseScope
    (153) Statement -> . IfStmt
    (154) Statement -> . SwitchStmt
    (155) Statement -> . ForStmt
    (25) Declaration -> . ConstDecl
    (26) Declaration -> . StructDecl
    (27) Declaration -> . VarDecl
    (156) SimpleStmt -> . Expression
    (157) SimpleStmt -> . IncDecStmt
    (158) SimpleStmt -> . Assignment
    (159) SimpleStmt -> . ShortVarDecl
    (160) SimpleStmt -> .
    (196) ReturnStmt -> . RETURN ExpressionList
    (197) ReturnStmt -> . RETURN
    (198) BreakStmt -> . BREAK IDENT
    (199) BreakStmt -> . BREAK
    (200) ContinueStmt -> . CONTINUE IDENT
    (201) ContinueStmt -> . CONTINUE
    (2) OpenScope -> .
    (176) IfStmt -> . IF OpenScope Expression Block CloseScope
    (177) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope
    (178) IfStmt -> . IF OpenScope Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (179) IfStmt -> . IF OpenScope Expression Block CloseScope ELSE OpenScope Block CloseScope
    (180) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope
    (182) SwitchStmt -> . SWITCH LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (183) SwitchStmt -> . SWITCH SimpleStmt SEMICOLON LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (184) SwitchStmt -> . SWITCH SimpleStmt SEMICOLON ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (185) SwitchStmt -> . SWITCH ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE
    (191) ForStmt -> . FOR OpenScope OpenFor ForClause Block CloseFor CloseScope
    (192) ForStmt -> . FOR OpenScope OpenFor Expression Block CloseFor CloseScope
    (193) ForStmt -> . FOR OpenScope OpenFor Block CloseFor CloseScope
    (30) ConstDecl -> . CONST ConstSpec
    (31) ConstDecl -> . CONST LEFT_PARENTHESIS ConstSpecStar RIGHT_PARENTHESIS
    (28) StructDecl -> . TYPE StructName StructType
    (42) VarDecl -> . VARIABLE VarSpec
    (43) VarDecl -> . VARIABLE LEFT_PARENTHESIS VarSpecStar RIGHT_PARENTHESIS
    (94) Expression -> . UnaryExpr
    (95) Expression -> . Expression LOGICAL_OR Expression
    (96) Expression -> . Expression LOGICAL_AND Expression
    (97) Expression -> . Expression EQUAL Expression
    (98) Expression -> . Expression NOT_EQUAL Expression
    (99) Expression -> . Expression LESS_THAN Expression
    (100) Expression -> . Expression LESS_THAN_EQUAL Expression
    (101) Expression -> . Expression GREATER_THAN Expression
    (102) Expression -> . Expression GREATER_THAN_EQUAL Expression
    (103) Expression -> . Expression ADD Expression
    (104) Expression -> . Expression SUBTRACT Expression
    (105) Expression -> . Expression OR Expression
    (106) Expression -> . Expression XOR Expression
    (107) Expression -> . Expression MULTIPLY Expression
    (108) Expression -> . Expression QUOTIENT Expression
    (109) Expression -> . Expression REMAINDER Expression
    (110) Expression -> . Expression SHIFT_LEFT Expression
    (111) Expression -> . Expression SHIFT_RIGHT Expression
    (112) Expression -> . Expression AND Expression
    (113) Expression -> . Expression AND_NOT Expression
    (161) IncDecStmt -> . Expression INCREMENT
    (162) IncDecStmt -> . Expression DECREMENT
    (163) Assignment -> . ExpressionList assign_op ExpressionList
    (51) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (114) UnaryExpr -> . PrimaryExpr
    (115) UnaryExpr -> . unary_op UnaryExpr
    (39) ExpressionList -> . Expression
    (40) ExpressionList -> . ExpressionList COMMA Expression
    (41) ExpressionList -> . LEFT_BRACKET Expression RIGHT_BRACKET IDENT LEFT_BRACE ExpressionList RIGHT_BRACE
    (37) IdentifierList -> . IDENT
    (38) IdentifierList -> . IDENT COMMA IdentifierList
    (123) PrimaryExpr -> . IDENT
    (124) PrimaryExpr -> . LEFT_PARENTHESIS Expression RIGHT_PARENTHESIS
    (125) PrimaryExpr -> . Literal
    (126) PrimaryExpr -> . PrimaryExpr Index
    (127) PrimaryExpr -> . PrimaryExpr PERIOD IDENT
    (128) PrimaryExpr -> . PrimaryExpr Arguments
    (116) unary_op -> . ADD
    (117) unary_op -> . SUBTRACT
    (118) unary_op -> . NOT
    (119) unary_op -> . XOR
    (120) unary_op -> . MULTIPLY
    (121) unary_op -> . AND
    (122) unary_op -> . ARROW
    (133) Literal -> . BasicLit
    (134) BasicLit -> . IntLit
    (135) BasicLit -> . FloatLit
    (136) BasicLit -> . RuneLit
    (137) BasicLit -> . StringLit
    (138) BasicLit -> . TrueFalseLit
    (139) BasicLit -> . ImaginaryLit
    (143) IntLit -> . INT
    (144) FloatLit -> . FLOAT
    (145) RuneLit -> . RUNE
    (146) StringLit -> . STRING
    (141) TrueFalseLit -> . TRUE
    (142) TrueFalseLit -> . FALSE
    (140) ImaginaryLit -> . IMAGINARY

    DEFAULT         reduce using rule 3 (CloseScope -> .)
    RIGHT_BRACE     reduce using rule 3 (CloseScope -> .)
    CASE            reduce using rule 3 (CloseScope -> .)
    SEMICOLON       reduce using rule 160 (SimpleStmt -> .)
    RETURN          shift and go to state 215
    BREAK           shift and go to state 217
    CONTINUE        shift and go to state 219
    LEFT_BRACE      reduce using rule 2 (OpenScope -> .)
    IF              shift and go to state 220
    SWITCH          shift and go to state 221
    FOR             shift and go to state 222
    CONST           shift and go to state 17
    TYPE            shift and go to state 18
    VARIABLE        shift and go to state 19
    LEFT_BRACKET    shift and go to state 69
    IDENT           shift and go to state 218
    LEFT_PARENTHESIS shift and go to state 79
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 73
    NOT             shift and go to state 81
    XOR             shift and go to state 74
    MULTIPLY        shift and go to state 75
    AND             shift and go to state 76
    ARROW           shift and go to state 82
    INT             shift and go to state 90
    FLOAT           shift and go to state 91
    RUNE            shift and go to state 92
    STRING          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    IMAGINARY       shift and go to state 96

    OpenScope                      shift and go to state 207
    ExpressionList                 shift and go to state 216
    CloseScope                     shift and go to state 356
    Statement                      shift and go to state 201
    Declaration                    shift and go to state 202
    SimpleStmt                     shift and go to state 203
    ReturnStmt                     shift and go to state 204
    BreakStmt                      shift and go to state 205
    ContinueStmt                   shift and go to state 206
    IfStmt                         shift and go to state 208
    SwitchStmt                     shift and go to state 209
    ForStmt                        shift and go to state 210
    ConstDecl                      shift and go to state 13
    StructDecl                     shift and go to state 14
    VarDecl                        shift and go to state 15
    Expression                     shift and go to state 211
    IncDecStmt                     shift and go to state 212
    Assignment                     shift and go to state 213
    ShortVarDecl                   shift and go to state 214
    UnaryExpr                      shift and go to state 71
    IdentifierList                 shift and go to state 223
    PrimaryExpr                    shift and go to state 77
    unary_op                       shift and go to state 78
    Literal                        shift and go to state 80
    BasicLit                       shift and go to state 83
    IntLit                         shift and go to state 84
    FloatLit                       shift and go to state 85
    RuneLit                        shift and go to state 86
    StringLit                      shift and go to state 87
    TrueFalseLit                   shift and go to state 88
    ImaginaryLit                   shift and go to state 89

state 349

    (190) ExprCaseClause -> DEFAULT COLON OpenScope StatementList CloseScope .

    DEFAULT         reduce using rule 190 (ExprCaseClause -> DEFAULT COLON OpenScope StatementList CloseScope .)
    RIGHT_BRACE     reduce using rule 190 (ExprCaseClause -> DEFAULT COLON OpenScope StatementList CloseScope .)
    CASE            reduce using rule 190 (ExprCaseClause -> DEFAULT COLON OpenScope StatementList CloseScope .)


state 350

    (183) SwitchStmt -> SWITCH SimpleStmt SEMICOLON LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE .

    SEMICOLON       reduce using rule 183 (SwitchStmt -> SWITCH SimpleStmt SEMICOLON LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE .)


state 351

    (184) SwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 357


state 352

    (194) ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt .

    LEFT_BRACE      reduce using rule 194 (ForClause -> SimpleStmt SEMICOLON Expression SEMICOLON SimpleStmt .)


state 353

    (179) IfStmt -> IF OpenScope Expression Block CloseScope ELSE OpenScope Block CloseScope .

    SEMICOLON       reduce using rule 179 (IfStmt -> IF OpenScope Expression Block CloseScope ELSE OpenScope Block CloseScope .)


state 354

    (178) IfStmt -> IF OpenScope Expression Block CloseScope ELSE OpenScope IfStmt CloseScope .

    SEMICOLON       reduce using rule 178 (IfStmt -> IF OpenScope Expression Block CloseScope ELSE OpenScope IfStmt CloseScope .)


state 355

    (180) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope . IfStmt CloseScope
    (181) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope . Block CloseScope
    (176) IfStmt -> . IF OpenScope Expression Block CloseScope
    (177) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope
    (178) IfStmt -> . IF OpenScope Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (179) IfStmt -> . IF OpenScope Expression Block CloseScope ELSE OpenScope Block CloseScope
    (180) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope
    (181) IfStmt -> . IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope
    (91) Block -> . LEFT_BRACE StatementList RIGHT_BRACE

    IF              shift and go to state 220
    LEFT_BRACE      shift and go to state 113

    Block                          shift and go to state 358
    IfStmt                         shift and go to state 359

state 356

    (189) ExprCaseClause -> OpenScope CASE ExpressionList COLON StatementList CloseScope .

    DEFAULT         reduce using rule 189 (ExprCaseClause -> OpenScope CASE ExpressionList COLON StatementList CloseScope .)
    RIGHT_BRACE     reduce using rule 189 (ExprCaseClause -> OpenScope CASE ExpressionList COLON StatementList CloseScope .)
    CASE            reduce using rule 189 (ExprCaseClause -> OpenScope CASE ExpressionList COLON StatementList CloseScope .)


state 357

    (184) SwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE .

    SEMICOLON       reduce using rule 184 (SwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionName LEFT_BRACE OpenSwitch ExprCaseClauseStar CloseSwitch RIGHT_BRACE .)


state 358

    (181) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block . CloseScope
    (3) CloseScope -> .

    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 360

state 359

    (180) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt . CloseScope
    (3) CloseScope -> .

    SEMICOLON       reduce using rule 3 (CloseScope -> .)

    CloseScope                     shift and go to state 361

state 360

    (181) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope .

    SEMICOLON       reduce using rule 181 (IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope Block CloseScope .)


state 361

    (180) IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope .

    SEMICOLON       reduce using rule 180 (IfStmt -> IF OpenScope SimpleStmt SEMICOLON Expression Block CloseScope ELSE OpenScope IfStmt CloseScope .)

